{
  "folders": [
    {
      "id": "J7rNZi7X",
      "name": "Test Grammars",
      "defaultLanguage": "typescript",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "createdAt": 1659494503299,
      "updatedAt": 1659494610605
    }
  ],
  "snippets": [
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "ABAP",
      "content": [
        {
          "label": "Fragment 1",
          "language": "abap",
          "value": "***************************************\n** Program: EXAMPLE                  **\n** Author: Joe Byte, 07-Jul-2007     **\n***************************************\n \nREPORT BOOKINGS.\n \n* Read flight bookings from the database\nSELECT * FROM FLIGHTINFO\n  WHERE CLASS = 'Y'       \"Y = economy\n  OR    CLASS = 'C'.      \"C = business\n(...)\n\nREPORT TEST.\nWRITE 'Hello World'.\n\nUSERPROMPT = 'Please double-click on a line in the output list ' &\n             'to see the complete details of the transaction.'.\n\n\nDATA LAST_EOM    TYPE D.  \"last end-of-month date\n \n* Start from today's date\n  LAST_EOM = SY-DATUM.\n* Set characters 6 and 7 (0-relative) of the YYYYMMDD string to \"01\",\n* giving the first day of the current month\n  LAST_EOM+6(2) = '01'.\n* Subtract one day\n  LAST_EOM = LAST_EOM - 1.\n \n  WRITE: 'Last day of previous month was', LAST_EOM.\n  \nDATA : BEGIN OF I_VBRK OCCURS 0,\n         VBELN LIKE VBRK-VBELN,\n         ZUONR LIKE VBRK-ZUONR,\n       END OF I_VBRK.\n\nSORT i_vbrk BY vbeln ASCENDING.\nSORT i_vbrk BY vbeln DESCENDING.\n\nRETURN."
        }
      ],
      "id": "JMINV1s7",
      "createdAt": 1659494546718,
      "updatedAt": 1659494556760
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "ABC",
      "content": [
        {
          "label": "Fragment 1",
          "language": "abc",
          "value": "%abc-2.1\nH:This file contains some example English tunes\n% note that the comments (like this one) are to highlight usages\n%  and would not normally be included in such detail\nO:England             % the origin of all tunes is England\n\nX:1                   % tune no 1\nT:Dusty Miller, The   % title\nT:Binny's Jig         % an alternative title\nC:Trad.               % traditional\nR:DH                  % double hornpipe\nM:3/4                 % meter\nK:G                   % key\nB>cd BAG|FA Ac BA|B>cd BAG|DG GB AG:|\nBdd gfg|aA Ac BA|Bdd gfa|gG GB AG:|\nBG G/2G/2G BG|FA Ac BA|BG G/2G/2G BG|DG GB AG:|\nW:Hey, the dusty miller, and his dusty coat;\nW:He will win a shilling, or he spend a groat.\nW:Dusty was the coat, dusty was the colour;\nW:Dusty was the kiss, that I got frae the miller.\n\nX:2\nT:Old Sir Simon the King\nC:Trad.\nS:Offord MSS          % from Offord manuscript\nN:see also Playford   % reference note\nM:9/8\nR:SJ                  % slip jig\nN:originally in C     % transcription note\nK:G\nD|GFG GAG G2D|GFG GAG F2D|EFE EFE EFG|A2G F2E D2:|\nD|GAG GAB d2D|GAG GAB c2D|[1 EFE EFE EFG|[A2G] F2E D2:|\\ % no line-break in score\nM:12/8                % change of meter\n[2 E2E EFE E2E EFG|\\  % no line-break in score\nM:9/8                 % change of meter\nA2G F2E D2|]\n\nX:3\nT:William and Nancy\nT:New Mown Hay\nT:Legacy, The\nC:Trad.\nO:England; Gloucs; Bledington % place of origin\nB:Sussex Tune Book            % can be found in these books\nB:Mally's Cotswold Morris vol.1 2\nD:Morris On                   % can be heard on this record\nP:(AB)2(AC)2A                 % play the parts in this order\nM:6/8\nK:G                        \n[P:A] D|\"G\"G2G GBd|\"C\"e2e \"G\"dBG|\"D7\"A2d \"G\"BAG|\"C\"E2\"D7\"F \"G\"G2:|\n[P:B] d|\"G\"e2d B2d|\"C\"gfe \"G\"d2d| \"G\"e2d    B2d|\"C\"gfe    \"D7\"d2c|\n        \"G\"B2B Bcd|\"C\"e2e \"G\"dBG|\"D7\"A2d \"G\"BAG|\"C\"E2\"D7\"F \"G\"G2:|\n% changes of meter, using inline fields\n[T:Slows][M:4/4][L:1/4][P:C]\"G\"d2|\"C\"e2 \"G\"d2|B2 d2|\"Em\"gf \"A7\"e2|\"D7\"d2 \"G\"d2|\\\n       \"C\"e2 \"G\"d2|[M:3/8][L:1/8] \"G\"B2 d |[M:6/8] \"C\"gfe \"D7\"d2c|\n        \"G\"B2B Bcd|\"C\"e2e \"G\"dBG|\"D7\"A2d \"G\"BAG|\"C\"E2\"D7\"F \"G\"G2:|\n\nX:4\nT:South Downs Jig\nR:jig\nS:Robert Harbron\nM:6/8\nL:1/8\nK:G\n|: d | dcA G3 | EFG AFE | DEF GAB | cde d2d |\ndcA G3 | EFG AFE | DEF GAB | cAF G2 :|\nB | Bcd e2c | d2B c2A | Bcd e2c | [M:9/8]d2B c2B A3 |\n[M:6/8]DGF E3 | cBA FED | DEF GAB |1 cAF G2 :|2 cAF G3 |]\n\nX:5\nT:Atholl Brose\n% in this example, which reproduces Highland Bagpipe gracing,\n%  the large number of grace notes mean that it is more convenient to be specific about\n%  score line-breaks (using the $ symbol), rather than using code line breaks to indicate them\nI:linebreak $\nK:D\n{gcd}c<{e}A {gAGAG}A2 {gef}e>A {gAGAG}Ad|\n{gcd}c<{e}A {gAGAG}A>e {ag}a>f {gef}e>d|\n{gcd}c<{e}A {gAGAG}A2 {gef}e>A {gAGAG}Ad|\n{g}c/d/e {g}G>{d}B {gf}gG {dc}d>B:|$\n{g}c<e {gf}g>e {ag}a>e {gf}g>e|\n{g}c<e {gf}g>e {ag}a2 {GdG}a>d|\n{g}c<e {gf}g>e {ag}a>e {gf}g>f|\n{gef}e>d {gf}g>d {gBd}B<{e}G {dc}d>B|\n{g}c<e {gf}g>e {ag}a>e {gf}g>e|\n{g}c<e {gf}g>e {ag}a2 {GdG}ad|\n{g}c<{GdG}e {gf}ga {f}g>e {g}f>d|\n{g}e/f/g {Gdc}d>c {gBd}B<{e}G {dc}d2|]\n\nX:6\nT:Untitled Reel\nC:Trad.\nK:D\neg|a2ab ageg|agbg agef|g2g2 fgag|f2d2 d2:|\\\ned|cecA B2ed|cAcA E2ed|cecA B2ed|c2A2 A2:|\nK:G\nAB|cdec BcdB|ABAF GFE2|cdec BcdB|c2A2 A2:|\n\nX:7\nT:Kitchen Girl\nC:Trad.\nK:D\n[c4a4] [B4g4]|efed c2cd|e2f2 gaba|g2e2 e2fg|\na4 g4|efed cdef|g2d2 efed|c2A2 A4:|\nK:G\nABcA BAGB|ABAG EDEG|A2AB c2d2|e3f edcB|ABcA BAGB|\nABAG EGAB|cBAc BAG2|A4 A4:|\n\n%abc-2.1\n%%pagewidth      21cm\n%%pageheight     29.7cm\n%%topspace       0.5cm\n%%topmargin      1cm\n%%botmargin      0cm\n%%leftmargin     1cm\n%%rightmargin    1cm\n%%titlespace     0cm\n%%titlefont      Times-Bold 32\n%%subtitlefont   Times-Bold 24\n%%composerfont   Times 16\n%%vocalfont      Times-Roman 14\n%%staffsep       60pt\n%%sysstaffsep    20pt\n%%musicspace     1cm\n%%vocalspace     5pt\n%%measurenb      0\n%%barsperstaff   5\n%%scale          0.7\nX: 1\nT: Canzonetta a tre voci\nC: Claudio Monteverdi (1567-1643)\nM: C\nL: 1/4\nQ: \"Andante mosso\" 1/4 = 110\n%%score [1 2 3]\nV: 1 clef=treble name=\"Soprano\"sname=\"A\"\nV: 2 clef=treble name=\"Alto\"   sname=\"T\"\nV: 3 clef=bass middle=d name=\"Tenor\"  sname=\"B\"\n%%MIDI program 1 75 % recorder\n%%MIDI program 2 75\n%%MIDI program 3 75\nK: Eb\n% 1 - 4\n[V: 1] |:z4  |z4  |f2ec         |_ddcc        |\nw: Son que-sti~i cre-spi cri-ni~e\nw: Que-sti son gli~oc-chi che mi-\n[V: 2] |:c2BG|AAGc|(F/G/A/B/)c=A|B2AA         |\nw: Son que-sti~i cre-spi cri-ni~e que - - - - sto~il vi-so e\nw: Que-sti son~gli oc-chi che mi-ran - - - - do fi-so mi-\n[V: 3] |:z4  |f2ec|_ddcf        |(B/c/_d/e/)ff|\nw: Son que-sti~i cre-spi cri-ni~e que - - - - sto~il\nw: Que-sti son~gli oc-chi che mi-ran - - - - do\n% 5 - 9\n[V: 1] cAB2     |cAAA |c3B|G2!fermata!Gz ::e4|\nw: que-sto~il vi-so ond' io ri-man-go~uc-ci-so. Deh,\nw: ran-do fi-so, tut-to re-stai con-qui-so.\n[V: 2] AAG2     |AFFF |A3F|=E2!fermata!Ez::c4|\nw: que-sto~il vi-so ond' io ri-man-go~uc-ci-so. Deh,\nw: ran-do fi-so tut-to re-stai con-qui-so.\n[V: 3] (ag/f/e2)|A_ddd|A3B|c2!fermata!cz ::A4|\nw: vi - - - so ond' io ti-man-go~uc-ci-so. Deh,\nw: fi - - - so tut-to re-stai con-qui-so.\n% 10 - 15\n[V: 1] f_dec |B2c2|zAGF  |\\\nw: dim-me-lo ben mi-o, che que-sto\\\n=EFG2          |1F2z2:|2F8|] % more notes\nw: sol de-si-o_. % more lyrics\n[V: 2] ABGA  |G2AA|GF=EF |(GF3/2=E//D//E)|1F2z2:|2F8|]\nw: dim-me-lo ben mi-o, che que-sto sol de-si - - - - o_.\n[V: 3] _dBc>d|e2AF|=EFc_d|c4             |1F2z2:|2F8|]\nw: dim-me-lo ben mi-o, che que-sto sol de-si-o_."
        }
      ],
      "id": "XvJhtwXD",
      "createdAt": 1659494559915,
      "updatedAt": 1659494581094
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "ActionScript",
      "content": [
        {
          "label": "Fragment 1",
          "language": "actionscript",
          "value": "package code\n{\n    /*****************************************\n\t * based on textmate actionscript bundle\n\t ****************************************/\n\t \n\timport fl.events.SliderEvent;\n\t\n\tpublic class Foo extends MovieClip\n\t{\n\t\t//*************************\n\t\t// Properties:\n\t\t\n\t\tpublic var activeSwatch:MovieClip;\n\t\t\n\t\t// Color offsets\n\t\tpublic var c1:Number = 0;\t// R\n\t\t\n\t\t//*************************\n\t\t// Constructor:\n\t\t\n\t\tpublic function Foo()\n\t\t{\n\t\t\t// Respond to mouse events\n\t\t\tswatch1_btn.addEventListener(MouseEvent.CLICK,swatchHandler,false,0,false);\n\t\t\tpreviewBox_btn.addEventListener(MouseEvent.MOUSE_DOWN,dragPressHandler);\n\t\t\t\n\t\t\t// Respond to drag events\n\t\t\tred_slider.addEventListener(SliderEvent.THUMB_DRAG,sliderHandler);\n\t\t\t\n\t\t\t// Draw a frame later\n\t\t\taddEventListener(Event.ENTER_FRAME,draw);\n\t\t}\n        \n\t\tprotected function clickHandler(event:MouseEvent):void\n\t\t{\n\t\t\tcar.transform.colorTransform = new ColorTransform(0,0,0,1,c1,c2,c3);\n\t\t}\n\t\t\n\t\tprotected function changeRGBHandler(event:Event):void\n\t\t{\n\t\t\tc1 = Number(c1_txt.text);\n            \n\t\t\tif(!(c1>=0)){\n\t\t\t\tc1 = 0;\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\tupdateSliders();\n\t\t}\n\t}\n}"
        }
      ],
      "id": "QpGK-4E3",
      "createdAt": 1659494622609,
      "updatedAt": 1659494644279
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "ADA",
      "content": [
        {
          "label": "Fragment 1",
          "language": "ada",
          "value": "with Ada.Text_IO; use Ada.Text_IO;\nprocedure Hello is\nbegin\n  Put_Line(\"Hello, world!\");\nend Hello;"
        }
      ],
      "id": "Px9jIO7P",
      "createdAt": 1659494650343,
      "updatedAt": 1659494671562
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Alda",
      "content": [
        {
          "label": "Fragment 1",
          "language": "alda",
          "value": "# Example taken from https://github.com/alda-lang/alda-core/blob/master/examples/across_the_sea.alda\n(tempo! 90)\n(quant! 95)\n\npiano:\n  o5 g- > g- g-/f > e- d-4. < b-8 d-2 | c-4 e- d- d- <b-1/>g-\n\nflute:\n  r2 g-4 a- b-2. > d-32~ e-16.~8 < b-2 a- g-1"
        }
      ],
      "id": "nxTqeuxF",
      "createdAt": 1659494682982,
      "updatedAt": 1659494699425
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Apache",
      "content": [
        {
          "label": "Fragment 1",
          "language": "apache_conf",
          "value": "Redirect /linux http://www.linux.org\nRedirect 301 /kernel http://www.linux.org\n\n# comment\nRewriteEngine on\n\nRewriteCond %{HTTP_USER_AGENT} ^Mozilla.*\nRewriteRule ^/$ /homepage.max.html [L]\n\nRewriteRule ^/$ /homepage.std.html [L]\n"
        }
      ],
      "id": "A89NVbKL",
      "createdAt": 1659494861634,
      "updatedAt": 1659494932607
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Apex",
      "content": [
        {
          "label": "Fragment 1",
          "language": "apex",
          "value": "public class testBlockDuplicatesLeadTrigger {\n\t\n\tstatic testMethod void testDuplicateTrigger(){  \n\t\n\t\tLead[] l1 =new Lead[]{\n\t\t\tnew Lead(  Email='homer@fox.tv', LastName='Simpson', Company='fox' )\n\t\t};\n\t\tinsert l1;\t\t// add a known lead\n\t\t\n\t\tLead[] l2 =new Lead[]{\n\t\t\tnew Lead(  Email='homer@fox.tv', LastName='Simpson', Company='fox' )\n\t\t};\n\t\t// try to add a matching lead\n\t\ttry {\tinsert l2;\t} catch ( System.DmlException e) { \n\t\t\tsystem.assert(e.getMessage().contains('first error: FIELD_CUSTOM_VALIDATION_EXCEPTION, A lead with this email address already exists'),\n\t\t\t e.getMessage());\n\t\t}\n\t\t\n\t\t// test duplicates in the same batch\n\t\tLead[] l3 =new Lead[]{\n\t\t\tnew Lead(  Email='marge@fox.tv', LastName='Simpson', Company='fox' ),\n\t\t\tnew Lead(  Email='marge@fox.tv', LastName='Simpson', Company='fox' )\n\t\t};\t\t\n\t\ttry { insert l3;\t} catch ( System.DmlException e) { \n\t\t\tsystem.assert(e.getMessage().contains('first error: FIELD_CUSTOM_VALIDATION_EXCEPTION, Another new lead has the same email'),\n\t\t\t\te.getMessage());\n\t\t\t\n\t\t}\n\t\t\n\t\t// test update also\n\t\tLead[] lup = new Lead[]{\n\t\t\tnew Lead(  Email='marge@fox.tv',  LastName='Simpson', Company='fox' )\n\t\t};\n\t\tinsert lup;\n\t\tLead marge = [ select id,Email from lead where Email = 'marge@fox.tv' limit 1];\n\t\tsystem.assert(marge!=null);\n\t\tmarge.Email = 'homer@fox.tv'; \n\t\t\n\t\ttry { update marge; } catch ( System.DmlException e) { \n\t\t\tsystem.assert(e.getMessage().contains('irst error: FIELD_CUSTOM_VALIDATION_EXCEPTION, A lead with this email address already exists'),\n\t\t\t\te.getMessage());\t\n\t\t}\n\t}\n}"
        }
      ],
      "id": "vvnKSBLd",
      "createdAt": 1659494946912,
      "updatedAt": 1659495156796
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "AppleScript",
      "content": [
        {
          "label": "Fragment 1",
          "language": "applescript",
          "value": "set advancedSettings to {background color:{65535, 0, 0}, background dimensions:{1024, 90}, opacity:100}\ndisplay overlay text \"Warning. Boss approaching…\" duration 1 advanced settings advancedSettings with goose honk"
        }
      ],
      "id": "sHDdrA-8",
      "createdAt": 1659495204662,
      "updatedAt": 1659495281720
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "AsciiDoc",
      "content": [
        {
          "label": "Fragment 1",
          "language": "asciidoc",
          "value": "AsciiDoc User Guide\n===================\nStuart Rackham <srackham@gmail.com>\n:Author Initials: SJR\n:toc:\n:icons:\n:numbered:\n:website: http://www.methods.co.nz/asciidoc/\n\nAsciiDoc is a text document format for writing notes, documentation,\narticles, books, ebooks, slideshows, web pages, blogs and UNIX man\npages.  AsciiDoc files can be translated to many formats including\nHTML, PDF, EPUB, man page.  AsciiDoc is highly configurable: both the\nAsciiDoc source file syntax and the backend output markups (which can\nbe almost any type of SGML/XML markup) can be customized and extended\nby the user.\n\n.This document\n**********************************************************************\nThis is an overly large document, it probably needs to be refactored\ninto a Tutorial, Quick Reference and Formal Reference.\n\nIf you're new to AsciiDoc read this section and the <<X6,Getting\nStarted>> section and take a look at the example AsciiDoc (`*.txt`)\nsource files in the distribution `doc` directory.\n**********************************************************************\n\n\nIntroduction\n------------\nAsciiDoc is a plain text human readable/writable document format that\ncan be translated to DocBook or HTML using the asciidoc(1) command.\nYou can then either use asciidoc(1) generated HTML directly or run\nasciidoc(1) DocBook output through your favorite DocBook toolchain or\nuse the AsciiDoc a2x(1) toolchain wrapper to produce PDF, EPUB, DVI,\nLaTeX, PostScript, man page, HTML and text formats.\n\nThe AsciiDoc format is a useful presentation format in its own right:\nAsciiDoc markup is simple, intuitive and as such is easily proofed and\nedited.\n\nAsciiDoc is light weight: it consists of a single Python script and a\nbunch of configuration files. Apart from asciidoc(1) and a Python\ninterpreter, no other programs are required to convert AsciiDoc text\nfiles to DocBook or HTML. See <<X11,Example AsciiDoc Documents>>\nbelow.\n\nText markup conventions tend to be a matter of (often strong) personal\npreference: if the default syntax is not to your liking you can define\nyour own by editing the text based asciidoc(1) configuration files.\nYou can also create configuration files to translate AsciiDoc\ndocuments to almost any SGML/XML markup.\n\nasciidoc(1) comes with a set of configuration files to translate\nAsciiDoc articles, books and man pages to HTML or DocBook backend\nformats.\n\n.My AsciiDoc Itch\n**********************************************************************\nDocBook has emerged as the de facto standard Open Source documentation\nformat. But DocBook is a complex language, the markup is difficult to\nread and even more difficult to write directly -- I found I was\nspending more time typing markup tags, consulting reference manuals\nand fixing syntax errors, than I was writing the documentation.\n**********************************************************************\n\n\n[[X6]]\nGetting Started\n---------------\nInstalling AsciiDoc\n~~~~~~~~~~~~~~~~~~~\nSee the `README` and `INSTALL` files for install prerequisites and\nprocedures. Packagers take a look at <<X38,Packager Notes>>.\n\n[[X11]]\nExample AsciiDoc Documents\n~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe best way to quickly get a feel for AsciiDoc is to view the\nAsciiDoc web site and/or distributed examples:\n\n- Take a look at the linked examples on the AsciiDoc web site home\n  page {website}.  Press the 'Page Source' sidebar menu item to view\n  corresponding AsciiDoc source.\n- Read the `*.txt` source files in the distribution `./doc` directory\n  along with the corresponding HTML and DocBook XML files.\n\n\nAsciiDoc Document Types\n-----------------------\nThere are three types of AsciiDoc documents: article, book and\nmanpage. All document types share the same AsciiDoc format with some\nminor variations. If you are familiar with DocBook you will have\nnoticed that AsciiDoc document types correspond to the same-named\nDocBook document types.\n\nUse the asciidoc(1) `-d` (`--doctype`) option to specify the AsciiDoc\ndocument type -- the default document type is 'article'.\n\nBy convention the `.txt` file extension is used for AsciiDoc document\nsource files.\n\narticle\n~~~~~~~\nUsed for short documents, articles and general documentation.  See the\nAsciiDoc distribution `./doc/article.txt` example.\n\nAsciiDoc defines standard DocBook article frontmatter and backmatter\n<<X93,section markup templates>> (appendix, abstract, bibliography,\nglossary, index).\n\nbook\n~~~~\nBooks share the same format as articles, with the following\ndifferences:\n\n- The part titles in multi-part books are <<X17,top level titles>>\n  (same level as book title).\n- Some sections are book specific e.g. preface and colophon.\n\nBook documents will normally be used to produce DocBook output since\nDocBook processors can automatically generate footnotes, table of\ncontents, list of tables, list of figures, list of examples and\nindexes.\n\nAsciiDoc defines standard DocBook book frontmatter and backmatter\n<<X93,section markup templates>> (appendix, dedication, preface,\nbibliography, glossary, index, colophon).\n\n.Example book documents\nBook::\n  The `./doc/book.txt` file in the AsciiDoc distribution.\n\nMulti-part book::\n  The `./doc/book-multi.txt` file in the AsciiDoc distribution.\n\nmanpage\n~~~~~~~\nUsed to generate roff format UNIX manual pages.  AsciiDoc manpage\ndocuments observe special header title and section naming conventions\n-- see the <<X1,Manpage Documents>> section for details.\n\nAsciiDoc defines the 'synopsis' <<X93,section markup template>> to\ngenerate the DocBook `refsynopsisdiv` section.\n\nSee also the asciidoc(1) man page source (`./doc/asciidoc.1.txt`) from\nthe AsciiDoc distribution.\n\n\n[[X5]]\nAsciiDoc Backends\n-----------------\nThe asciidoc(1) command translates an AsciiDoc formatted file to the\nbackend format specified by the `-b` (`--backend`) command-line\noption. asciidoc(1) itself has little intrinsic knowledge of backend\nformats, all translation rules are contained in customizable cascading\nconfiguration files. Backend specific attributes are listed in the\n<<X88,Backend Attributes>> section.\n\ndocbook45::\n  Outputs DocBook XML 4.5 markup.\n\nhtml4::\n  This backend generates plain HTML 4.01 Transitional markup.\n\nxhtml11::\n  This backend generates XHTML 1.1 markup styled with CSS2. Output\n  files have an `.html` extension.\n\nhtml5::\n  This backend generates HTML 5 markup, apart from the inclusion of\n  <<X98,audio and video block macros>> it is functionally identical to\n  the 'xhtml11' backend.\n\nslidy::\n  Use this backend to generate self-contained\n  http://www.w3.org/Talks/Tools/Slidy2/[Slidy] HTML slideshows for\n  your web browser from AsciiDoc documents. The Slidy backend is\n  documented in the distribution `doc/slidy.txt` file and\n  {website}slidy.html[online].\n\nwordpress::\n  A minor variant of the 'html4' backend to support\n  http://srackham.wordpress.com/blogpost1/[blogpost].\n\nlatex::\n  Experimental LaTeX backend.\n\nBackend Aliases\n~~~~~~~~~~~~~~~\nBackend aliases are alternative names for AsciiDoc backends.  AsciiDoc\ncomes with two backend aliases: 'html' (aliased to 'xhtml11') and\n'docbook' (aliased to 'docbook45').\n\nYou can assign (or reassign) backend aliases by setting an AsciiDoc\nattribute named like `backend-alias-<alias>` to an AsciiDoc backend\nname. For example, the following backend alias attribute definitions\nappear in the `[attributes]` section of the global `asciidoc.conf`\nconfiguration file:\n\n  backend-alias-html=xhtml11\n  backend-alias-docbook=docbook45\n\n[[X100]]\nBackend Plugins\n~~~~~~~~~~~~~~~\nThe asciidoc(1) `--backend` option is also used to install and manage\nbackend <<X101,plugins>>.\n\n- A backend plugin is used just like the built-in backends.\n- Backend plugins <<X27,take precedence>> over built-in backends with\n  the same name.\n- You can use the `{asciidoc-confdir}` <<X60, intrinsic attribute>> to\n  refer to the built-in backend configuration file location from\n  backend plugin configuration files.\n- You can use the `{backend-confdir}` <<X60, intrinsic attribute>> to\n  refer to the backend plugin configuration file location.\n- By default backends plugins are installed in\n  `$HOME/.asciidoc/backends/<backend>` where `<backend>` is the\n  backend name.\n\n\nDocBook\n-------\nAsciiDoc generates 'article', 'book' and 'refentry'\nhttp://www.docbook.org/[DocBook] documents (corresponding to the\nAsciiDoc 'article', 'book' and 'manpage' document types).\n\nMost Linux distributions come with conversion tools (collectively\ncalled a toolchain) for <<X12,converting DocBook files>> to\npresentation formats such as Postscript, HTML, PDF, EPUB, DVI,\nPostScript, LaTeX, roff (the native man page format), HTMLHelp,\nJavaHelp and text.  There are also programs that allow you to view\nDocBook files directly, for example http://live.gnome.org/Yelp[Yelp]\n(the GNOME help viewer).\n\n[[X12]]\nConverting DocBook to other file formats\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nDocBook files are validated, parsed and translated various\npresentation file formats using a combination of applications\ncollectively called a DocBook 'tool chain'. The function of a tool\nchain is to read the DocBook markup (produced by AsciiDoc) and\ntransform it to a presentation format (for example HTML, PDF, HTML\nHelp, EPUB, DVI, PostScript, LaTeX).\n\nA wide range of user output format requirements coupled with a choice\nof available tools and stylesheets results in many valid tool chain\ncombinations.\n\n[[X43]]\na2x Toolchain Wrapper\n~~~~~~~~~~~~~~~~~~~~~\nOne of the biggest hurdles for new users is installing, configuring\nand using a DocBook XML toolchain. `a2x(1)` can help -- it's a\ntoolchain wrapper command that will generate XHTML (chunked and\nunchunked), PDF, EPUB, DVI, PS, LaTeX, man page, HTML Help and text\nfile outputs from an AsciiDoc text file.  `a2x(1)` does all the grunt\nwork associated with generating and sequencing the toolchain commands\nand managing intermediate and output files.  `a2x(1)` also optionally\ndeploys admonition and navigation icons and a CSS stylesheet. See the\n`a2x(1)` man page for more details. In addition to `asciidoc(1)` you\nalso need <<X40,xsltproc(1)>>, <<X13,DocBook XSL Stylesheets>> and\noptionally: <<X31,dblatex>> or <<X14,FOP>> (to generate PDF);\n`w3m(1)` or `lynx(1)` (to generate text).\n\nThe following examples generate `doc/source-highlight-filter.pdf` from\nthe AsciiDoc `doc/source-highlight-filter.txt` source file. The first\nexample uses `dblatex(1)` (the default PDF generator) the second\nexample forces FOP to be used:\n\n  $ a2x -f pdf doc/source-highlight-filter.txt\n  $ a2x -f pdf --fop doc/source-highlight-filter.txt\n\nSee the `a2x(1)` man page for details.\n\nTIP: Use the `--verbose` command-line option to view executed\ntoolchain commands.\n\nHTML generation\n~~~~~~~~~~~~~~~\nAsciiDoc produces nicely styled HTML directly without requiring a\nDocBook toolchain but there are also advantages in going the DocBook\nroute:\n\n- HTML from DocBook can optionally include automatically generated\n  indexes, tables of contents, footnotes, lists of figures and tables.\n- DocBook toolchains can also (optionally) generate separate (chunked)\n  linked HTML pages for each document section.\n- Toolchain processing performs link and document validity checks.\n- If the DocBook 'lang' attribute is set then things like table of\n  contents, figure and table captions and admonition captions will be\n  output in the specified language (setting the AsciiDoc 'lang'\n  attribute sets the DocBook 'lang' attribute).\n\nOn the other hand, HTML output directly from AsciiDoc is much faster,\nis easily customized and can be used in situations where there is no\nsuitable DocBook toolchain (for example, see the {website}[AsciiDoc\nwebsite]).\n\nPDF generation\n~~~~~~~~~~~~~~\nThere are two commonly used tools to generate PDFs from DocBook,\n<<X31,dblatex>> and <<X14,FOP>>.\n\n.dblatex or FOP?\n- 'dblatex' is easier to install, there's zero configuration\n  required and no Java VM to install -- it just works out of the box.\n- 'dblatex' source code highlighting and numbering is superb.\n- 'dblatex' is easier to use as it converts DocBook directly to PDF\n  whereas before using 'FOP' you have to convert DocBook to XML-FO\n  using <<X13,DocBook XSL Stylesheets>>.\n- 'FOP' is more feature complete (for example, callouts are processed\n  inside literal layouts) and arguably produces nicer looking output.\n\nHTML Help generation\n~~~~~~~~~~~~~~~~~~~~\n. Convert DocBook XML documents to HTML Help compiler source files\n  using <<X13,DocBook XSL Stylesheets>> and <<X40,xsltproc(1)>>.\n. Convert the HTML Help source (`.hhp` and `.html`) files to HTML Help\n  (`.chm`) files using the <<X67,Microsoft HTML Help Compiler>>.\n\nToolchain components summary\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nAsciiDoc::\n    Converts AsciiDoc (`.txt`) files to DocBook XML (`.xml`) files.\n\n[[X13]]http://docbook.sourceforge.net/projects/xsl/[DocBook XSL Stylesheets]::\n  These are a set of XSL stylesheets containing rules for converting\n  DocBook XML documents to HTML, XSL-FO, manpage and HTML Help files.\n  The stylesheets are used in conjunction with an XML parser such as\n  <<X40,xsltproc(1)>>.\n\n[[X40]]http://www.xmlsoft.org[xsltproc]::\n  An XML parser for applying XSLT stylesheets (in our case the\n  <<X13,DocBook XSL Stylesheets>>) to XML documents.\n\n[[X31]]http://dblatex.sourceforge.net/[dblatex]::\n  Generates PDF, DVI, PostScript and LaTeX formats directly from\n  DocBook source via the intermediate LaTeX typesetting language --\n  uses <<X13,DocBook XSL Stylesheets>>, <<X40,xsltproc(1)>> and\n  `latex(1)`.\n\n[[X14]]http://xml.apache.org/fop/[FOP]::\n  The Apache Formatting Objects Processor converts XSL-FO (`.fo`)\n  files to PDF files.  The XSL-FO files are generated from DocBook\n  source files using <<X13,DocBook XSL Stylesheets>> and\n  <<X40,xsltproc(1)>>.\n\n[[X67]]Microsoft Help Compiler::\n  The Microsoft HTML Help Compiler (`hhc.exe`) is a command-line tool\n  that converts HTML Help source files to a single HTML Help (`.chm`)\n  file. It runs on MS Windows platforms and can be downloaded from\n  http://www.microsoft.com.\n\nAsciiDoc dblatex configuration files\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe AsciiDoc distribution `./dblatex` directory contains\n`asciidoc-dblatex.xsl` (customized XSL parameter settings) and\n`asciidoc-dblatex.sty` (customized LaTeX settings). These are examples\nof optional <<X31,dblatex>> output customization and are used by\n<<X43,a2x(1)>>.\n\nAsciiDoc DocBook XSL Stylesheets drivers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou will have noticed that the distributed HTML and HTML Help\ndocumentation files (for example `./doc/asciidoc.html`) are not the\nplain outputs produced using the default 'DocBook XSL Stylesheets'\nconfiguration.  This is because they have been processed using\ncustomized DocBook XSL Stylesheets along with (in the case of HTML\noutputs) the custom `./stylesheets/docbook-xsl.css` CSS stylesheet.\n\nYou'll find the customized DocBook XSL drivers along with additional\ndocumentation in the distribution `./docbook-xsl` directory. The\nexamples that follow are executed from the distribution documentation\n(`./doc`) directory. These drivers are also used by <<X43,a2x(1)>>.\n\n`common.xsl`::\n    Shared driver parameters.  This file is not used directly but is\n    included in all the following drivers.\n\n`chunked.xsl`::\n    Generate chunked XHTML (separate HTML pages for each document\n    section) in the `./doc/chunked` directory. For example:\n\n    $ python ../asciidoc.py -b docbook asciidoc.txt\n    $ xsltproc --nonet ../docbook-xsl/chunked.xsl asciidoc.xml\n\n`epub.xsl`::\n    Used by <<X43,a2x(1)>> to generate EPUB formatted documents.\n\n`fo.xsl`::\n    Generate XSL Formatting Object (`.fo`) files for subsequent PDF\n    file generation using FOP. For example:\n\n    $ python ../asciidoc.py -b docbook article.txt\n    $ xsltproc --nonet ../docbook-xsl/fo.xsl article.xml > article.fo\n    $ fop article.fo article.pdf\n\n`htmlhelp.xsl`::\n    Generate Microsoft HTML Help source files for the MS HTML Help\n    Compiler in the `./doc/htmlhelp` directory. This example is run on\n    MS Windows from a Cygwin shell prompt:\n\n    $ python ../asciidoc.py -b docbook asciidoc.txt\n    $ xsltproc --nonet ../docbook-xsl/htmlhelp.xsl asciidoc.xml\n    $ c:/Program\\ Files/HTML\\ Help\\ Workshop/hhc.exe htmlhelp.hhp\n\n`manpage.xsl`::\n    Generate a `roff(1)` format UNIX man page from a DocBook XML\n    'refentry' document. This example generates an `asciidoc.1` man\n    page file:\n\n    $ python ../asciidoc.py -d manpage -b docbook asciidoc.1.txt\n    $ xsltproc --nonet ../docbook-xsl/manpage.xsl asciidoc.1.xml\n\n`xhtml.xsl`::\n    Convert a DocBook XML file to a single XHTML file. For example:\n\n    $ python ../asciidoc.py -b docbook asciidoc.txt\n    $ xsltproc --nonet ../docbook-xsl/xhtml.xsl asciidoc.xml > asciidoc.html\n\nIf you want to see how the complete documentation set is processed\ntake a look at the A-A-P script `./doc/main.aap`.\n\n\nGenerating Plain Text Files\n---------------------------\nAsciiDoc does not have a text backend (for most purposes AsciiDoc\nsource text is fine), however you can convert AsciiDoc text files to\nformatted text using the AsciiDoc <<X43,a2x(1)>> toolchain wrapper\nutility.\n\n\n[[X35]]\nHTML5 and XHTML 1.1\n-------------------\nThe 'xhtml11' and 'html5' backends embed or link CSS and JavaScript\nfiles in their outputs, there is also a <<X99,themes>> plugin\nframework.\n\n- If the AsciiDoc 'linkcss' attribute is defined then CSS and\n  JavaScript files are linked to the output document, otherwise they\n  are embedded (the default behavior).\n- The default locations for CSS and JavaScript files can be changed by\n  setting the AsciiDoc 'stylesdir' and 'scriptsdir' attributes\n  respectively.\n- The default locations for embedded and linked files differ and are\n  calculated at different times -- embedded files are loaded when\n  asciidoc(1) generates the output document, linked files are loaded\n  by the browser when the user views the output document.\n- Embedded files are automatically inserted in the output files but\n  you need to manually copy linked CSS and Javascript files from\n  AsciiDoc <<X27,configuration directories>> to the correct location\n  relative to the output document.\n\n.Stylesheet file locations\n[cols=\"3*\",frame=\"topbot\",options=\"header\"]\n|====================================================================\n|'stylesdir' attribute\n|Linked location ('linkcss' attribute defined)\n|Embedded location ('linkcss' attribute undefined)\n\n|Undefined (default).\n|Same directory as the output document.\n|`stylesheets` subdirectory in the AsciiDoc configuration directory\n(the directory containing the backend conf file).\n\n|Absolute or relative directory name.\n|Absolute or relative to the output document.\n|Absolute or relative to the AsciiDoc configuration directory (the\ndirectory containing the backend conf file).\n\n|====================================================================\n\n.JavaScript file locations\n[cols=\"3*\",frame=\"topbot\",options=\"header\"]\n|====================================================================\n|'scriptsdir' attribute\n|Linked location ('linkcss' attribute defined)\n|Embedded location ('linkcss' attribute undefined)\n\n|Undefined (default).\n|Same directory as the output document.\n|`javascripts` subdirectory in the AsciiDoc configuration directory\n(the directory containing the backend conf file).\n\n|Absolute or relative directory name.\n|Absolute or relative to the output document.\n|Absolute or relative to the AsciiDoc configuration directory (the\ndirectory containing the backend conf file).\n\n|====================================================================\n\n[[X99]]\nThemes\n~~~~~~\nThe AsciiDoc 'theme' attribute is used to select an alternative CSS\nstylesheet and to optionally include additional JavaScript code.\n\n- Theme files reside in an AsciiDoc <<X27,configuration directory>>\n  named `themes/<theme>/` (where `<theme>` is the the theme name set\n  by the 'theme' attribute). asciidoc(1) sets the 'themedir' attribute\n  to the theme directory path name.\n- The 'theme' attribute can also be set using the asciidoc(1)\n  `--theme` option, the `--theme` option can also be used to manage\n  theme <<X101,plugins>>.\n- AsciiDoc ships with two themes: 'flask' and 'volnitsky'.\n- The `<theme>.css` file replaces the default `asciidoc.css` CSS file.\n- The `<theme>.js` file is included in addition to the default\n  `asciidoc.js` JavaScript file.\n- If the <<X66,data-uri>> attribute is defined then icons are loaded\n  from the theme `icons` sub-directory if it exists (i.e.  the\n  'iconsdir' attribute is set to theme `icons` sub-directory path).\n- Embedded theme files are automatically inserted in the output files\n  but you need to manually copy linked CSS and Javascript files to the\n  location of the output documents.\n- Linked CSS and JavaScript theme files are linked to the same linked\n  locations as <<X35,other CSS and JavaScript files>>.\n\nFor example, the command-line option `--theme foo` (or `--attribute\ntheme=foo`) will cause asciidoc(1) to search <<\"X27\",\"configuration\nfile locations 1, 2 and 3\">> for a sub-directory called `themes/foo`\ncontaining the stylesheet `foo.css` and optionally a JavaScript file\nname `foo.js`.\n\n\nDocument Structure\n------------------\nAn AsciiDoc document consists of a series of <<X8,block elements>>\nstarting with an optional document Header, followed by an optional\nPreamble, followed by zero or more document Sections.\n\nAlmost any combination of zero or more elements constitutes a valid\nAsciiDoc document: documents can range from a single sentence to a\nmulti-part book.\n\nBlock Elements\n~~~~~~~~~~~~~~\nBlock elements consist of one or more lines of text and may contain\nother block elements.\n\nThe AsciiDoc block structure can be informally summarized as follows\nfootnote:[This is a rough structural guide, not a rigorous syntax\ndefinition]:\n\n  Document      ::= (Header?,Preamble?,Section*)\n  Header        ::= (Title,(AuthorInfo,RevisionInfo?)?)\n  AuthorInfo    ::= (FirstName,(MiddleName?,LastName)?,EmailAddress?)\n  RevisionInfo  ::= (RevisionNumber?,RevisionDate,RevisionRemark?)\n  Preamble      ::= (SectionBody)\n  Section       ::= (Title,SectionBody?,(Section)*)\n  SectionBody   ::= ((BlockTitle?,Block)|BlockMacro)+\n  Block         ::= (Paragraph|DelimitedBlock|List|Table)\n  List          ::= (BulletedList|NumberedList|LabeledList|CalloutList)\n  BulletedList  ::= (ListItem)+\n  NumberedList  ::= (ListItem)+\n  CalloutList   ::= (ListItem)+\n  LabeledList   ::= (ListEntry)+\n  ListEntry     ::= (ListLabel,ListItem)\n  ListLabel     ::= (ListTerm+)\n  ListItem      ::= (ItemText,(List|ListParagraph|ListContinuation)*)\n\nWhere:\n\n- '?' implies zero or one occurrence, '+' implies one or more\n  occurrences, '*' implies zero or more occurrences.\n- All block elements are separated by line boundaries.\n- `BlockId`, `AttributeEntry` and `AttributeList` block elements (not\n  shown) can occur almost anywhere.\n- There are a number of document type and backend specific\n  restrictions imposed on the block syntax.\n- The following elements cannot contain blank lines: Header, Title,\n  Paragraph, ItemText.\n- A ListParagraph is a Paragraph with its 'listelement' option set.\n- A ListContinuation is a <<X15,list continuation element>>.\n\n[[X95]]\nHeader\n~~~~~~\nThe Header contains document meta-data, typically title plus optional\nauthorship and revision information:\n\n- The Header is optional, but if it is used it must start with a\n  document <<X17,title>>.\n- Optional Author and Revision information immediately follows the\n  header title.\n- The document header must be separated from the remainder of the\n  document by one or more blank lines and cannot contain blank lines.\n- The header can include comments.\n- The header can include <<X18,attribute entries>>, typically\n  'doctype', 'lang', 'encoding', 'icons', 'data-uri', 'toc',\n  'numbered'.\n- Header attributes are overridden by command-line attributes.\n- If the header contains non-UTF-8 characters then the 'encoding' must\n  precede the header (either in the document or on the command-line).\n\nHere's an example AsciiDoc document header:\n\n  Writing Documentation using AsciiDoc\n  ====================================\n  Joe Bloggs <jbloggs@mymail.com>\n  v2.0, February 2003:\n  Rewritten for version 2 release.\n\nThe author information line contains the author's name optionally\nfollowed by the author's email address. The author's name is formatted\nlike:\n\n  firstname[ [middlename ]lastname][ <email>]]\n\ni.e. a first name followed by optional middle and last names followed\nby an email address in that order.  Multi-word first, middle and last\nnames can be entered using the underscore as a word separator.  The\nemail address comes last and must be enclosed in angle <> brackets.\nHere a some examples of author information lines:\n\n  Joe Bloggs <jbloggs@mymail.com>\n  Joe Bloggs\n  Vincent Willem van_Gogh\n\nIf the author line does not match the above specification then the\nentire author line is treated as the first name.\n\nThe optional revision information line follows the author information\nline. The revision information can be one of two formats:\n\n. An optional document revision number followed by an optional\n  revision date followed by an optional revision remark:\n+\n--\n  * If the revision number is specified it must be followed by a\n    comma.\n  * The revision number must contain at least one numeric character.\n  * Any non-numeric characters preceding the first numeric character\n    will be dropped.\n  * If a revision remark is specified it must be preceded by a colon.\n    The revision remark extends from the colon up to the next blank\n    line, attribute entry or comment and is subject to normal text\n    substitutions.\n  * If a revision number or remark has been set but the revision date\n    has not been set then the revision date is set to the value of the\n    'docdate' attribute.\n\nExamples:\n\n  v2.0, February 2003\n  February 2003\n  v2.0,\n  v2.0, February 2003: Rewritten for version 2 release.\n  February 2003: Rewritten for version 2 release.\n  v2.0,: Rewritten for version 2 release.\n  :Rewritten for version 2 release.\n--\n\n. The revision information line can also be an RCS/CVS/SVN $Id$\n  marker:\n+\n--\n  * AsciiDoc extracts the 'revnumber', 'revdate', and 'author'\n    attributes from the $Id$ revision marker and displays them in the\n    document header.\n  * If an $Id$ revision marker is used the header author line can be\n    omitted.\n\nExample:\n\n  $Id: mydoc.txt,v 1.5 2009/05/17 17:58:44 jbloggs Exp $\n--\n\nYou can override or set header parameters by passing 'revnumber',\n'revremark', 'revdate', 'email', 'author', 'authorinitials',\n'firstname' and 'lastname' attributes using the asciidoc(1) `-a`\n(`--attribute`) command-line option. For example:\n\n  $ asciidoc -a revdate=2004/07/27 article.txt\n\nAttribute entries can also be added to the header for substitution in\nthe header template with <<X18,Attribute Entry>> elements.\n\nThe 'title' element in HTML outputs is set to the AsciiDoc document\ntitle, you can set it to a different value by including a 'title'\nattribute entry in the document header.\n\n[[X87]]\nAdditional document header information\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAsciiDoc has two mechanisms for optionally including additional\nmeta-data in the header of the output document:\n\n'docinfo' configuration file sections::\nIf a <<X7,configuration file>> section named 'docinfo' has been loaded\nthen it will be included in the document header. Typically the\n'docinfo' section name will be prefixed with a '+' character so that it\nis appended to (rather than replace) other 'docinfo' sections.\n\n'docinfo' files::\nTwo docinfo files are recognized: one named `docinfo` and a second\nnamed like the AsciiDoc source file with a `-docinfo` suffix.  For\nexample, if the source document is called `mydoc.txt` then the\ndocument information files would be `docinfo.xml` and\n`mydoc-docinfo.xml` (for DocBook outputs) and `docinfo.html` and\n`mydoc-docinfo.html` (for HTML outputs).  The <<X97,docinfo, docinfo1\nand docinfo2>> attributes control which docinfo files are included in\nthe output files.\n\nThe contents docinfo templates and files is dependent on the type of\noutput:\n\nHTML::\n  Valid 'head' child elements. Typically 'style' and 'script' elements\n  for CSS and JavaScript inclusion.\n\nDocBook::\n  Valid 'articleinfo' or 'bookinfo' child elements.  DocBook defines\n  numerous elements for document meta-data, for example: copyrights,\n  document history and authorship information.  See the DocBook\n  `./doc/article-docinfo.xml` example that comes with the AsciiDoc\n  distribution.  The rendering of meta-data elements (or not) is\n  DocBook processor dependent.\n\n\n[[X86]]\nPreamble\n~~~~~~~~\nThe Preamble is an optional untitled section body between the document\nHeader and the first Section title.\n\nSections\n~~~~~~~~\nIn addition to the document title (level 0), AsciiDoc supports four\nsection levels: 1 (top) to 4 (bottom).  Section levels are delimited\nby section <<X17,titles>>.  Sections are translated using\nconfiguration file <<X93,section markup templates>>. AsciiDoc\ngenerates the following <<X60,intrinsic attributes>> specifically for\nuse in section markup templates:\n\nlevel::\nThe `level` attribute is the section level number, it is normally just\nthe <<X17,title>> level number (1..4). However, if the `leveloffset`\nattribute is defined it will be added to the `level` attribute. The\n`leveloffset` attribute is useful for <<X90,combining documents>>.\n\nsectnum::\nThe `-n` (`--section-numbers`) command-line option generates the\n`sectnum` (section number) attribute.  The `sectnum` attribute is used\nfor section numbers in HTML outputs (DocBook section numbering are\nhandled automatically by the DocBook toolchain commands).\n\n[[X93]]\nSection markup templates\n^^^^^^^^^^^^^^^^^^^^^^^^\nSection markup templates specify output markup and are defined in\nAsciiDoc configuration files.  Section markup template names are\nderived as follows (in order of precedence):\n\n1. From the title's first positional attribute or 'template'\n   attribute. For example, the following three section titles are\n   functionally equivalent:\n+\n.....................................................................\n[[terms]]\n[glossary]\nList of Terms\n-------------\n\n[\"glossary\",id=\"terms\"]\nList of Terms\n-------------\n\n[template=\"glossary\",id=\"terms\"]\nList of Terms\n-------------\n.....................................................................\n\n2. When the title text matches a configuration file\n   <<X16,`[specialsections]`>> entry.\n3. If neither of the above the default `sect<level>` template is used\n   (where `<level>` is a number from 1 to 4).\n\nIn addition to the normal section template names ('sect1', 'sect2',\n'sect3', 'sect4') AsciiDoc has the following templates for\nfrontmatter, backmatter and other special sections: 'abstract',\n'preface', 'colophon', 'dedication', 'glossary', 'bibliography',\n'synopsis', 'appendix', 'index'.  These special section templates\ngenerate the corresponding Docbook elements; for HTML outputs they\ndefault to the 'sect1' section template.\n\nSection IDs\n^^^^^^^^^^^\nIf no explicit section ID is specified an ID will be synthesised from\nthe section title.  The primary purpose of this feature is to ensure\npersistence of table of contents links (permalinks): the missing\nsection IDs are generated dynamically by the JavaScript TOC generator\n*after* the page is loaded. If you link to a dynamically generated TOC\naddress the page will load but the browser will ignore the (as yet\nungenerated) section ID.\n\nThe IDs are generated by the following algorithm:\n\n- Replace all non-alphanumeric title characters with underscores.\n- Strip leading or trailing underscores.\n- Convert to lowercase.\n- Prepend the `idprefix` attribute (so there's no possibility of name\n  clashes with existing document IDs). Prepend an underscore if the\n  `idprefix` attribute is not defined.\n- A numbered suffix (`_2`, `_3` ...) is added if a same named\n  auto-generated section ID exists.\n- If the `ascii-ids` attribute is defined then non-ASCII characters\n  are replaced with ASCII equivalents. This attribute may be\n  deprecated in future releases and *should be avoided*, it's sole\n  purpose is to accommodate deficient downstream applications that\n  cannot process non-ASCII ID attributes.\n\nExample: the title 'Jim's House' would generate the ID `_jim_s_house`.\n\nSection ID synthesis can be disabled by undefining the `sectids`\nattribute.\n\n[[X16]]\nSpecial Section Titles\n^^^^^^^^^^^^^^^^^^^^^^\nAsciiDoc has a mechanism for mapping predefined section titles\nauto-magically to specific markup templates. For example a title\n'Appendix A: Code Reference' will automatically use the 'appendix'\n<<X93,section markup template>>. The mappings from title to template\nname are specified in `[specialsections]` sections in the Asciidoc\nlanguage configuration files (`lang-*.conf`).  Section entries are\nformatted like:\n\n  <title>=<template>\n\n`<title>` is a Python regular expression and `<template>` is the name\nof a configuration file markup template section. If the `<title>`\nmatches an AsciiDoc document section title then the backend output is\nmarked up using the `<template>` markup template (instead of the\ndefault `sect<level>` section template). The `{title}` attribute value\nis set to the value of the matched regular expression group named\n'title', if there is no 'title' group `{title}` defaults to the whole\nof the AsciiDoc section title. If `<template>` is blank then any\nexisting entry with the same `<title>` will be deleted.\n\n.Special section titles vs. explicit template names\n*********************************************************************\nAsciiDoc has two mechanisms for specifying non-default section markup\ntemplates: you can specify the template name explicitly (using the\n'template' attribute) or indirectly (using 'special section titles').\nSpecifying a <<X93,section template>> attribute explicitly is\npreferred.  Auto-magical 'special section titles' have the following\ndrawbacks:\n\n- They are non-obvious, you have to know the exact matching\n  title for each special section on a language by language basis.\n- Section titles are predefined and can only be customised with a\n  configuration change.\n- The implementation is complicated by multiple languages: every\n  special section title has to be defined for each language (in each\n  of the `lang-*.conf` files).\n\nSpecifying special section template names explicitly does add more\nnoise to the source document (the 'template' attribute declaration),\nbut the intention is obvious and the syntax is consistent with other\nAsciiDoc elements c.f.  bibliographic, Q&A and glossary lists.\n\nSpecial section titles have been deprecated but are retained for\nbackward compatibility.\n\n*********************************************************************\n\nInline Elements\n~~~~~~~~~~~~~~~\n<<X34,Inline document elements>> are used to format text and to\nperform various types of text substitution. Inline elements and inline\nelement syntax is defined in the asciidoc(1) configuration files.\n\nHere is a list of AsciiDoc inline elements in the (default) order in\nwhich they are processed:\n\nSpecial characters::\n        These character sequences escape special characters used by\n        the backend markup (typically `<`, `>`, and `&` characters).\n        See `[specialcharacters]` configuration file sections.\n\nQuotes::\n        Elements that markup words and phrases; usually for character\n        formatting. See `[quotes]` configuration file sections.\n\nSpecial Words::\n        Word or word phrase patterns singled out for markup without\n        the need for further annotation.  See `[specialwords]`\n        configuration file sections.\n\nReplacements::\n        Each replacement defines a word or word phrase pattern to\n        search for along with corresponding replacement text. See\n        `[replacements]` configuration file sections.\n\nAttribute references::\n        Document attribute names enclosed in braces are replaced by\n        the corresponding attribute value.\n\nInline Macros::\n        Inline macros are replaced by the contents of parametrized\n        configuration file sections.\n\n\nDocument Processing\n-------------------\nThe AsciiDoc source document is read and processed as follows:\n\n1. The document 'Header' is parsed, header parameter values are\n   substituted into the configuration file `[header]` template section\n   which is then written to the output file.\n2. Each document 'Section' is processed and its constituent elements\n   translated to the output file.\n3. The configuration file `[footer]` template section is substituted\n   and written to the output file.\n\nWhen a block element is encountered asciidoc(1) determines the type of\nblock by checking in the following order (first to last): (section)\nTitles, BlockMacros, Lists, DelimitedBlocks, Tables, AttributeEntrys,\nAttributeLists, BlockTitles, Paragraphs.\n\nThe default paragraph definition `[paradef-default]` is last element\nto be checked.\n\nKnowing the parsing order will help you devise unambiguous macro, list\nand block syntax rules.\n\nInline substitutions within block elements are performed in the\nfollowing default order:\n\n1. Special characters\n2. Quotes\n3. Special words\n4. Replacements\n5. Attributes\n6. Inline Macros\n7. Replacements2\n\nThe substitutions and substitution order performed on\nTitle, Paragraph and DelimitedBlock elements is determined by\nconfiguration file parameters.\n\n\nText Formatting\n---------------\n[[X51]]\nQuoted Text\n~~~~~~~~~~~\nWords and phrases can be formatted by enclosing inline text with\nquote characters:\n\n_Emphasized text_::\n        Word phrases \\'enclosed in single quote characters' (acute\n        accents) or \\_underline characters_ are emphasized.\n\n*Strong text*::\n        Word phrases \\*enclosed in asterisk characters* are rendered\n        in a strong font (usually bold).\n\n[[X81]]+Monospaced text+::\n        Word phrases \\+enclosed in plus characters+ are rendered in a\n        monospaced font. Word phrases \\`enclosed in backtick\n        characters` (grave accents) are also rendered in a monospaced\n        font but in this case the enclosed text is rendered literally\n        and is not subject to further expansion (see <<X80,inline\n        literal passthrough>>).\n\n`Single quoted text'::\n        Phrases enclosed with a \\`single grave accent to the left and\n        a single acute accent to the right' are rendered in single\n        quotation marks.\n\n``Double quoted text''::\n        Phrases enclosed with \\\\``two grave accents to the left and\n        two acute accents to the right'' are rendered in quotation\n        marks.\n\n#Unquoted text#::\n        Placing \\#hashes around text# does nothing, it is a mechanism\n        to allow inline attributes to be applied to otherwise\n        unformatted text.\n\nNew quote types can be defined by editing asciidoc(1) configuration\nfiles. See the <<X7,Configuration Files>> section for details.\n\n.Quoted text behavior\n- Quoting cannot be overlapped.\n- Different quoting types can be nested.\n- To suppress quoted text formatting place a backslash character\n  immediately in front of the leading quote character(s). In the case\n  of ambiguity between escaped and non-escaped text you will need to\n  escape both leading and trailing quotes, in the case of\n  multi-character quotes you may even need to escape individual\n  characters.\n\n[[X96]]\nQuoted text attributes\n^^^^^^^^^^^^^^^^^^^^^^\nQuoted text can be prefixed with an <<X21,attribute list>>.  The first\npositional attribute ('role' attribute) is translated by AsciiDoc to\nan HTML 'span' element 'class' attribute or a DocBook 'phrase' element\n'role' attribute.\n\nDocBook XSL Stylesheets translate DocBook 'phrase' elements with\n'role' attributes to corresponding HTML 'span' elements with the same\n'class' attributes; CSS can then be used\nhttp://www.sagehill.net/docbookxsl/UsingCSS.html[to style the\ngenerated HTML].  Thus CSS styling can be applied to both DocBook and\nAsciiDoc generated HTML outputs.  You can also specify multiple class\nnames separated by spaces.\n\nCSS rules for text color, text background color, text size and text\ndecorators are included in the distributed AsciiDoc CSS files and are\nused in conjunction with AsciiDoc 'xhtml11', 'html5' and 'docbook'\noutputs. The CSS class names are:\n\n- '<color>' (text foreground color).\n- '<color>-background' (text background color).\n- 'big' and 'small' (text size).\n- 'underline', 'overline' and 'line-through' (strike through) text\n  decorators.\n\nWhere '<color>' can be any of the\nhttp://en.wikipedia.org/wiki/Web_colors#HTML_color_names[sixteen HTML\ncolor names].  Examples:\n\n  [red]#Obvious# and [big red yellow-background]*very obvious*.\n\n  [underline]#Underline text#, [overline]#overline text# and\n  [blue line-through]*bold blue and line-through*.\n\nis rendered as:\n\n[red]#Obvious# and [big red yellow-background]*very obvious*.\n\n[underline]#Underline text#, [overline]#overline text# and\n[bold blue line-through]*bold blue and line-through*.\n\nNOTE: Color and text decorator attributes are rendered for XHTML and\nHTML 5 outputs using CSS stylesheets.  The mechanism to implement\ncolor and text decorator attributes is provided for DocBook toolchains\nvia the DocBook 'phrase' element 'role' attribute, but the actual\nrendering is toolchain specific and is not part of the AsciiDoc\ndistribution.\n\n[[X52]]\nConstrained and Unconstrained Quotes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nThere are actually two types of quotes:\n\nConstrained quotes\n++++++++++++++++++\nQuoted must be bounded by white space or commonly adjoining\npunctuation characters. These are the most commonly used type of\nquote.\n\nUnconstrained quotes\n++++++++++++++++++++\nUnconstrained quotes have no boundary constraints and can be placed\nanywhere within inline text. For consistency and to make them easier\nto remember unconstrained quotes are double-ups of the `_`, `*`, `+`\nand `#` constrained quotes:\n\n  __unconstrained emphasized text__\n  **unconstrained strong text**\n  ++unconstrained monospaced text++\n  ##unconstrained unquoted text##\n\nThe following example emboldens the letter F:\n\n  **F**ile Open...\n\nSuperscripts and Subscripts\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPut \\^carets on either^ side of the text to be superscripted, put\n\\~tildes on either side~ of text to be subscripted.  For example, the\nfollowing line:\n\n  e^&#960;i^+1 = 0. H~2~O and x^10^. Some ^super text^\n  and ~some sub text~\n\nIs rendered like:\n\ne^&#960;i^+1 = 0. H~2~O and x^10^. Some ^super text^\nand ~some sub text~\n\nSuperscripts and subscripts are implemented as <<X52,unconstrained\nquotes>> and they can be escaped with a leading backslash and prefixed\nwith with an attribute list.\n\nLine Breaks\n~~~~~~~~~~~\nA plus character preceded by at least one space character at the end\nof a non-blank line forces a line break. It generates a line break\n(`br`) tag for HTML outputs and a custom XML `asciidoc-br` processing\ninstruction for DocBook outputs. The `asciidoc-br` processing\ninstruction is handled by <<X43,a2x(1)>>.\n\nPage Breaks\n~~~~~~~~~~~\nA line of three or more less-than (`<<<`) characters will generate a\nhard page break in DocBook and printed HTML outputs.  It uses the CSS\n`page-break-after` property for HTML outputs and a custom XML\n`asciidoc-pagebreak` processing instruction for DocBook outputs. The\n`asciidoc-pagebreak` processing instruction is handled by\n<<X43,a2x(1)>>. Hard page breaks are sometimes handy but as a general\nrule you should let your page processor generate page breaks for you.\n\nRulers\n~~~~~~\nA line of three or more apostrophe characters will generate a ruler\nline.  It generates a ruler (`hr`) tag for HTML outputs and a custom\nXML `asciidoc-hr` processing instruction for DocBook outputs. The\n`asciidoc-hr` processing instruction is handled by <<X43,a2x(1)>>.\n\nTabs\n~~~~\nBy default tab characters input files will translated to 8 spaces. Tab\nexpansion is set with the 'tabsize' entry in the configuration file\n`[miscellaneous]` section and can be overridden in included files by\nsetting a 'tabsize' attribute in the `include` macro's attribute list.\nFor example:\n\n  include::addendum.txt[tabsize=2]\n\nThe tab size can also be set using the attribute command-line option,\nfor example `--attribute tabsize=4`\n\nReplacements\n~~~~~~~~~~~~\nThe following replacements are defined in the default AsciiDoc\nconfiguration:\n\n  (C) copyright, (TM) trademark, (R) registered trademark,\n  -- em dash, ... ellipsis, -> right arrow, <- left arrow, => right\n  double arrow, <= left double arrow.\n\nWhich are rendered as:\n\n(C) copyright, (TM) trademark, (R) registered trademark,\n-- em dash, ... ellipsis, -> right arrow, <- left arrow, => right\ndouble arrow, <= left double arrow.\n\nYou can also include arbitrary entity references in the AsciiDoc\nsource. Examples:\n\n  &#x278a; &#182;\n\nrenders:\n\n&#x278a; &#182;\n\nTo render a replacement literally escape it with a leading back-slash.\n\nThe <<X7,Configuration Files>> section explains how to configure your\nown replacements.\n\nSpecial Words\n~~~~~~~~~~~~~\nWords defined in `[specialwords]` configuration file sections are\nautomatically marked up without having to be explicitly notated.\n\nThe <<X7,Configuration Files>> section explains how to add and replace\nspecial words.\n\n\n[[X17]]\nTitles\n------\nDocument and section titles can be in either of two formats:\n\nTwo line titles\n~~~~~~~~~~~~~~~\nA two line title consists of a title line, starting hard against the\nleft margin, and an underline. Section underlines consist a repeated\ncharacter pairs spanning the width of the preceding title (give or\ntake up to two characters):\n\nThe default title underlines for each of the document levels are:\n\n\n  Level 0 (top level):     ======================\n  Level 1:                 ----------------------\n  Level 2:                 ~~~~~~~~~~~~~~~~~~~~~~\n  Level 3:                 ^^^^^^^^^^^^^^^^^^^^^^\n  Level 4 (bottom level):  ++++++++++++++++++++++\n\nExamples:\n\n  Level One Section Title\n  -----------------------\n\n  Level 2 Subsection Title\n  ~~~~~~~~~~~~~~~~~~~~~~~~\n\n[[X46]]\nOne line titles\n~~~~~~~~~~~~~~~\nOne line titles consist of a single line delimited on either side by\none or more equals characters (the number of equals characters\ncorresponds to the section level minus one).  Here are some examples:\n\n  = Document Title (level 0) =\n  == Section title (level 1) ==\n  === Section title (level 2) ===\n  ==== Section title (level 3) ====\n  ===== Section title (level 4) =====\n\n[NOTE]\n=====================================================================\n- One or more spaces must fall between the title and the delimiters.\n- The trailing title delimiter is optional.\n- The one-line title syntax can be changed by editing the\n  configuration file `[titles]` section `sect0`...`sect4` entries.\n=====================================================================\n\nFloating titles\n~~~~~~~~~~~~~~~\nSetting the title's first positional attribute or 'style' attribute to\n'float' generates a free-floating title. A free-floating title is\nrendered just like a normal section title but is not formally\nassociated with a text body and is not part of the regular section\nhierarchy so the normal ordering rules do not apply. Floating titles\ncan also be used in contexts where section titles are illegal: for\nexample sidebar and admonition blocks.  Example:\n\n  [float]\n  The second day\n  ~~~~~~~~~~~~~~\n\nFloating titles do not appear in a document's table of contents.\n\n\n[[X42]]\nBlock Titles\n------------\nA 'BlockTitle' element is a single line beginning with a period\nfollowed by the title text. A BlockTitle is applied to the immediately\nfollowing Paragraph, DelimitedBlock, List, Table or BlockMacro. For\nexample:\n\n........................\n.Notes\n- Note 1.\n- Note 2.\n........................\n\nis rendered as:\n\n.Notes\n- Note 1.\n- Note 2.\n\n\n[[X41]]\nBlockId Element\n---------------\nA 'BlockId' is a single line block element containing a unique\nidentifier enclosed in double square brackets. It is used to assign an\nidentifier to the ensuing block element. For example:\n\n  [[chapter-titles]]\n  Chapter titles can be ...\n\nThe preceding example identifies the ensuing paragraph so it can be\nreferenced from other locations, for example with\n`<<chapter-titles,chapter titles>>`.\n\n'BlockId' elements can be applied to Title, Paragraph, List,\nDelimitedBlock, Table and BlockMacro elements.  The BlockId element\nsets the `{id}` attribute for substitution in the subsequent block's\nmarkup template. If a second positional argument is supplied it sets\nthe `{reftext}` attribute which is used to set the DocBook `xreflabel`\nattribute.\n\nThe 'BlockId' element has the same syntax and serves the same function\nto the <<X30,anchor inline macro>>.\n\n[[X79]]\nAttributeList Element\n---------------------\nAn 'AttributeList' block element is an <<X21,attribute list>> on a\nline by itself:\n\n- 'AttributeList' attributes are only applied to the immediately\n  following block element -- the attributes are made available to the\n  block's markup template.\n- Multiple contiguous 'AttributeList' elements are additively combined\n  in the order they appear..\n- The first positional attribute in the list is often used to specify\n  the ensuing element's <<X23,style>>.\n\nAttribute value substitution\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nBy default, only substitutions that take place inside attribute list\nvalues are attribute references, this is because not all attributes\nare destined to be marked up and rendered as text (for example the\ntable 'cols' attribute). To perform normal inline text substitutions\n(special characters, quotes, macros, replacements) on an attribute\nvalue you need to enclose it in single quotes. In the following quote\nblock the second attribute value in the AttributeList is quoted to\nensure the 'http' macro is expanded to a hyperlink.\n\n---------------------------------------------------------------------\n[quote,'http://en.wikipedia.org/wiki/Samuel_Johnson[Samuel Johnson]']\n_____________________________________________________________________\nSir, a woman's preaching is like a dog's walking on his hind legs. It\nis not done well; but you are surprised to find it done at all.\n_____________________________________________________________________\n---------------------------------------------------------------------\n\nCommon attributes\n~~~~~~~~~~~~~~~~~\nMost block elements support the following attributes:\n\n[cols=\"1e,1,5a\",frame=\"topbot\",options=\"header\"]\n|====================================================================\n|Name |Backends |Description\n\n|id |html4, html5, xhtml11, docbook |\nUnique identifier typically serve as link targets.\nCan also be set by the 'BlockId' element.\n\n|role |html4, html5, xhtml11, docbook |\nRole contains a string used to classify or subclassify an element and\ncan be applied to AsciiDoc block elements.  The AsciiDoc 'role'\nattribute is translated to the 'role' attribute in DocBook outputs and\nis included in the 'class' attribute in HTML outputs, in this respect\nit behaves like the <<X96,quoted text role attribute>>.\n\nDocBook XSL Stylesheets translate DocBook 'role' attributes to HTML\n'class' attributes; CSS can then be used\nhttp://www.sagehill.net/docbookxsl/UsingCSS.html[to style the\ngenerated HTML].\n\n|reftext |docbook |\n'reftext' is used to set the DocBook 'xreflabel' attribute.\nThe 'reftext' attribute can an also be set by the 'BlockId' element.\n\n|====================================================================\n\n\nParagraphs\n----------\nParagraphs are blocks of text terminated by a blank line, the end of\nfile, or the start of a delimited block or a list.  There are three\nparagraph syntaxes: normal, indented (literal) and admonition which\nare rendered, by default, with the corresponding paragraph style.\n\nEach syntax has a default style, but you can explicitly apply any\nparagraph style to any paragraph syntax. You can also apply\n<<X104,delimited block>> styles to single paragraphs.\n\nThe built-in paragraph styles are: 'normal', 'literal', 'verse',\n'quote', 'listing', 'TIP', 'NOTE', 'IMPORTANT', 'WARNING', 'CAUTION',\n'abstract', 'partintro', 'comment', 'example', 'sidebar', 'source',\n'music', 'latex', 'graphviz'.\n\nnormal paragraph syntax\n~~~~~~~~~~~~~~~~~~~~~~~\nNormal paragraph syntax consists of one or more non-blank lines of\ntext. The first line must start hard against the left margin (no\nintervening white space). The default processing expectation is that\nof a normal paragraph of text.\n\n[[X85]]\nliteral paragraph syntax\n~~~~~~~~~~~~~~~~~~~~~~~~\nLiteral paragraphs are rendered verbatim in a monospaced font without\nany distinguishing background or border.  By default there is no text\nformatting or substitutions within Literal paragraphs apart from\nSpecial Characters and Callouts.\n\nThe 'literal' style is applied implicitly to indented paragraphs i.e.\nwhere the first line of the paragraph is indented by one or more space\nor tab characters.  For example:\n\n---------------------------------------------------------------------\n  Consul *necessitatibus* per id,\n  consetetur, eu pro everti postulant\n  homero verear ea mea, qui.\n---------------------------------------------------------------------\n\nRenders:\n\n  Consul *necessitatibus* per id,\n  consetetur, eu pro everti postulant\n  homero verear ea mea, qui.\n\nNOTE: Because <<X64,lists>> can be indented it's possible for your\nindented paragraph to be misinterpreted as a list -- in situations\nlike this apply the 'literal' style to a normal paragraph.\n\nInstead of using a paragraph indent you could apply the 'literal'\nstyle explicitly, for example:\n\n---------------------------------------------------------------------\n[literal]\nConsul *necessitatibus* per id,\nconsetetur, eu pro everti postulant\nhomero verear ea mea, qui.\n---------------------------------------------------------------------\n\nRenders:\n\n[literal]\nConsul *necessitatibus* per id,\nconsetetur, eu pro everti postulant\nhomero verear ea mea, qui.\n\n[[X94]]\nquote and verse paragraph styles\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe optional 'attribution' and 'citetitle' attributes (positional\nattributes 2 and 3) specify the author and source respectively.\n\nThe 'verse' style retains the line breaks, for example:\n\n---------------------------------------------------------------------\n[verse, William Blake, from Auguries of Innocence]\nTo see a world in a grain of sand,\nAnd a heaven in a wild flower,\nHold infinity in the palm of your hand,\nAnd eternity in an hour.\n---------------------------------------------------------------------\n\nWhich is rendered as:\n\n[verse, William Blake, from Auguries of Innocence]\nTo see a world in a grain of sand,\nAnd a heaven in a wild flower,\nHold infinity in the palm of your hand,\nAnd eternity in an hour.\n\nThe 'quote' style flows the text at left and right margins, for\nexample:\n\n---------------------------------------------------------------------\n[quote, Bertrand Russell, The World of Mathematics (1956)]\nA good notation has subtlety and suggestiveness which at times makes\nit almost seem like a live teacher.\n---------------------------------------------------------------------\n\nWhich is rendered as:\n\n[quote, Bertrand Russell, The World of Mathematics (1956)]\nA good notation has subtlety and suggestiveness which at times makes\nit almost seem like a live teacher.\n\n[[X28]]\nAdmonition Paragraphs\n~~~~~~~~~~~~~~~~~~~~~\n'TIP', 'NOTE', 'IMPORTANT', 'WARNING' and 'CAUTION' admonishment\nparagraph styles are generated by placing `NOTE:`, `TIP:`,\n`IMPORTANT:`, `WARNING:` or `CAUTION:` as the first word of the\nparagraph. For example:\n\n  NOTE: This is an example note.\n\nAlternatively, you can specify the paragraph admonition style\nexplicitly using an <<X79,AttributeList element>>. For example:\n\n  [NOTE]\n  This is an example note.\n\nRenders:\n\nNOTE: This is an example note.\n\nTIP: If your admonition requires more than a single paragraph use an\n<<X22,admonition block>> instead.\n\n[[X47]]\nAdmonition Icons and Captions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNOTE: Admonition customization with `icons`, `iconsdir`, `icon` and\n`caption` attributes does not apply when generating DocBook output. If\nyou are going the DocBook route then the <<X43,a2x(1)>> `--no-icons`\nand `--icons-dir` options can be used to set the appropriate XSL\nStylesheets parameters.\n\nBy default the asciidoc(1) HTML backends generate text captions\ninstead of admonition icon image links. To generate links to icon\nimages define the <<X45,`icons`>> attribute, for example using the `-a\nicons` command-line option.\n\nThe <<X44,`iconsdir`>> attribute sets the location of linked icon\nimages.\n\nYou can override the default icon image using the `icon` attribute to\nspecify the path of the linked image. For example:\n\n  [icon=\"./images/icons/wink.png\"]\n  NOTE: What lovely war.\n\nUse the `caption` attribute to customize the admonition captions (not\napplicable to `docbook` backend). The following example suppresses the\nicon image and customizes the caption of a 'NOTE' admonition\n(undefining the `icons` attribute with `icons=None` is only necessary\nif <<X45,admonition icons>> have been enabled):\n\n  [icons=None, caption=\"My Special Note\"]\n  NOTE: This is my special note.\n\nThis subsection also applies to <<X22,Admonition Blocks>>.\n\n\n[[X104]]\nDelimited Blocks\n----------------\nDelimited blocks are blocks of text enveloped by leading and trailing\ndelimiter lines (normally a series of four or more repeated\ncharacters). The behavior of Delimited Blocks is specified by entries\nin configuration file `[blockdef-*]` sections.\n\nPredefined Delimited Blocks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nAsciiDoc ships with a number of predefined DelimitedBlocks (see the\n`asciidoc.conf` configuration file in the asciidoc(1) program\ndirectory):\n\nPredefined delimited block underlines:\n\n  CommentBlock:     //////////////////////////\n  PassthroughBlock: ++++++++++++++++++++++++++\n  ListingBlock:     --------------------------\n  LiteralBlock:     ..........................\n  SidebarBlock:     **************************\n  QuoteBlock:       __________________________\n  ExampleBlock:     ==========================\n  OpenBlock:        --\n\n.Default DelimitedBlock substitutions\n[cols=\"2e,7*^\",frame=\"topbot\",options=\"header,autowidth\"]\n|=====================================================\n| |Attributes |Callouts |Macros | Quotes |Replacements\n|Special chars |Special words\n\n|PassthroughBlock |Yes |No  |Yes |No  |No  |No  |No\n|ListingBlock     |No  |Yes |No  |No  |No  |Yes |No\n|LiteralBlock     |No  |Yes |No  |No  |No  |Yes |No\n|SidebarBlock     |Yes |No  |Yes |Yes |Yes |Yes |Yes\n|QuoteBlock       |Yes |No  |Yes |Yes |Yes |Yes |Yes\n|ExampleBlock     |Yes |No  |Yes |Yes |Yes |Yes |Yes\n|OpenBlock        |Yes |No  |Yes |Yes |Yes |Yes |Yes\n|=====================================================\n\nListing Blocks\n~~~~~~~~~~~~~~\n'ListingBlocks' are rendered verbatim in a monospaced font, they\nretain line and whitespace formatting and are often distinguished by a\nbackground or border. There is no text formatting or substitutions\nwithin Listing blocks apart from Special Characters and Callouts.\nListing blocks are often used for computer output and file listings.\n\nHere's an example:\n\n[listing]\n......................................\n--------------------------------------\n#include <stdio.h>\n\nint main() {\n   printf(\"Hello World!\\n\");\n   exit(0);\n}\n--------------------------------------\n......................................\n\nWhich will be rendered like:\n\n--------------------------------------\n#include <stdio.h>\n\nint main() {\n    printf(\"Hello World!\\n\");\n    exit(0);\n}\n--------------------------------------\n\nBy convention <<X59,filter blocks>> use the listing block syntax and\nare implemented as distinct listing block styles.\n\n[[X65]]\nLiteral Blocks\n~~~~~~~~~~~~~~\n'LiteralBlocks' are rendered just like <<X85,literal paragraphs>>.\nExample:\n\n---------------------------------------------------------------------\n...................................\nConsul *necessitatibus* per id,\nconsetetur, eu pro everti postulant\nhomero verear ea mea, qui.\n...................................\n---------------------------------------------------------------------\n\nRenders:\n...................................\nConsul *necessitatibus* per id,\nconsetetur, eu pro everti postulant\nhomero verear ea mea, qui.\n...................................\n\nIf the 'listing' style is applied to a LiteralBlock it will be\nrendered as a ListingBlock (this is handy if you have a listing\ncontaining a ListingBlock).\n\nSidebar Blocks\n~~~~~~~~~~~~~~\nA sidebar is a short piece of text presented outside the narrative\nflow of the main text. The sidebar is normally presented inside a\nbordered box to set it apart from the main text.\n\nThe sidebar body is treated like a normal section body.\n\nHere's an example:\n\n---------------------------------------------------------------------\n.An Example Sidebar\n************************************************\nAny AsciiDoc SectionBody element (apart from\nSidebarBlocks) can be placed inside a sidebar.\n************************************************\n---------------------------------------------------------------------\n\nWhich will be rendered like:\n\n.An Example Sidebar\n************************************************\nAny AsciiDoc SectionBody element (apart from\nSidebarBlocks) can be placed inside a sidebar.\n************************************************\n\n[[X26]]\nComment Blocks\n~~~~~~~~~~~~~~\nThe contents of 'CommentBlocks' are not processed; they are useful for\nannotations and for excluding new or outdated content that you don't\nwant displayed. CommentBlocks are never written to output files.\nExample:\n\n---------------------------------------------------------------------\n//////////////////////////////////////////\nCommentBlock contents are not processed by\nasciidoc(1).\n//////////////////////////////////////////\n---------------------------------------------------------------------\n\nSee also <<X25,Comment Lines>>.\n\nNOTE: System macros are executed inside comment blocks.\n\n[[X76]]\nPassthrough Blocks\n~~~~~~~~~~~~~~~~~~\nBy default the block contents is subject only to 'attributes' and\n'macros' substitutions (use an explicit 'subs' attribute to apply\ndifferent substitutions).  PassthroughBlock content will often be\nbackend specific. Here's an example:\n\n---------------------------------------------------------------------\n[subs=\"quotes\"]\n++++++++++++++++++++++++++++++++++++++\n<table border=\"1\"><tr>\n  <td>*Cell 1*</td>\n  <td>*Cell 2*</td>\n</tr></table>\n++++++++++++++++++++++++++++++++++++++\n---------------------------------------------------------------------\n\nThe following styles can be applied to passthrough blocks:\n\npass::\n  No substitutions are performed. This is equivalent to `subs=\"none\"`.\n\nasciimath, latexmath::\n  By default no substitutions are performed, the contents are rendered\n  as <<X78,mathematical formulas>>.\n\nQuote Blocks\n~~~~~~~~~~~~\n'QuoteBlocks' are used for quoted passages of text. There are two\nstyles: 'quote' and 'verse'. The style behavior is identical to\n<<X94,quote and verse paragraphs>> except that blocks can contain\nmultiple paragraphs and, in the case of the 'quote' style, other\nsection elements.  The first positional attribute sets the style, if\nno attributes are specified the 'quote' style is used.  The optional\n'attribution' and 'citetitle' attributes (positional attributes 2 and\n3) specify the quote's author and source. For example:\n\n---------------------------------------------------------------------\n[quote, Sir Arthur Conan Doyle, The Adventures of Sherlock Holmes]\n____________________________________________________________________\nAs he spoke there was the sharp sound of horses' hoofs and\ngrating wheels against the curb, followed by a sharp pull at the\nbell. Holmes whistled.\n\n\"A pair, by the sound,\" said he. \"Yes,\" he continued, glancing\nout of the window. \"A nice little brougham and a pair of\nbeauties. A hundred and fifty guineas apiece. There's money in\nthis case, Watson, if there is nothing else.\"\n____________________________________________________________________\n---------------------------------------------------------------------\n\nWhich is rendered as:\n\n[quote, Sir Arthur Conan Doyle, The Adventures of Sherlock Holmes]\n____________________________________________________________________\nAs he spoke there was the sharp sound of horses' hoofs and\ngrating wheels against the curb, followed by a sharp pull at the\nbell. Holmes whistled.\n\n\"A pair, by the sound,\" said he. \"Yes,\" he continued, glancing\nout of the window. \"A nice little brougham and a pair of\nbeauties. A hundred and fifty guineas apiece. There's money in\nthis case, Watson, if there is nothing else.\"\n____________________________________________________________________\n\n[[X48]]\nExample Blocks\n~~~~~~~~~~~~~~\n'ExampleBlocks' encapsulate the DocBook Example element and are used\nfor, well, examples.  Example blocks can be titled by preceding them\nwith a 'BlockTitle'.  DocBook toolchains will normally automatically\nnumber examples and generate a 'List of Examples' backmatter section.\n\nExample blocks are delimited by lines of equals characters and can\ncontain any block elements apart from Titles, BlockTitles and\nSidebars) inside an example block. For example:\n\n---------------------------------------------------------------------\n.An example\n=====================================================================\nQui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.\n=====================================================================\n---------------------------------------------------------------------\n\nRenders:\n\n.An example\n=====================================================================\nQui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.\n=====================================================================\n\nA title prefix that can be inserted with the `caption` attribute\n(HTML backends). For example:\n\n---------------------------------------------------------------------\n[caption=\"Example 1: \"]\n.An example with a custom caption\n=====================================================================\nQui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.\n=====================================================================\n---------------------------------------------------------------------\n\n[[X22]]\nAdmonition Blocks\n~~~~~~~~~~~~~~~~~\nThe 'ExampleBlock' definition includes a set of admonition\n<<X23,styles>> ('NOTE', 'TIP', 'IMPORTANT', 'WARNING', 'CAUTION') for\ngenerating admonition blocks (admonitions containing more than a\n<<X28,single paragraph>>).  Just precede the 'ExampleBlock' with an\nattribute list specifying the admonition style name. For example:\n\n---------------------------------------------------------------------\n[NOTE]\n.A NOTE admonition block\n=====================================================================\nQui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.\n\n. Fusce euismod commodo velit.\n. Vivamus fringilla mi eu lacus.\n  .. Fusce euismod commodo velit.\n  .. Vivamus fringilla mi eu lacus.\n. Donec eget arcu bibendum\n  nunc consequat lobortis.\n=====================================================================\n---------------------------------------------------------------------\n\nRenders:\n\n[NOTE]\n.A NOTE admonition block\n=====================================================================\nQui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.\n\n. Fusce euismod commodo velit.\n. Vivamus fringilla mi eu lacus.\n  .. Fusce euismod commodo velit.\n  .. Vivamus fringilla mi eu lacus.\n. Donec eget arcu bibendum\n  nunc consequat lobortis.\n=====================================================================\n\nSee also <<X47,Admonition Icons and Captions>>.\n\n[[X29]]\nOpen Blocks\n~~~~~~~~~~~\nOpen blocks are special:\n\n- The open block delimiter is line containing two hyphen characters\n  (instead of four or more repeated characters).\n\n- They can be used to group block elements for <<X15,List item\n  continuation>>.\n\n- Open blocks can be styled to behave like any other type of delimited\n  block.  The  following built-in styles can be applied to open\n  blocks: 'literal', 'verse', 'quote', 'listing', 'TIP', 'NOTE',\n  'IMPORTANT', 'WARNING', 'CAUTION', 'abstract', 'partintro',\n  'comment', 'example', 'sidebar', 'source', 'music', 'latex',\n  'graphviz'. For example, the following open block and listing block\n  are functionally identical:\n\n  [listing]\n  --\n  Lorum ipsum ...\n  --\n\n  ---------------\n  Lorum ipsum ...\n  ---------------\n\n- An unstyled open block groups section elements but otherwise does\n  nothing.\n\nOpen blocks are used to generate document abstracts and book part\nintroductions:\n\n- Apply the 'abstract' style to generate an abstract, for example:\n\n  [abstract]\n  --\n  In this paper we will ...\n  --\n\n. Apply the 'partintro' style to generate a book part introduction for\n  a multi-part book, for example:\n\n  [partintro]\n  .Optional part introduction title\n  --\n  Optional part introduction goes here.\n  --\n\n\n[[X64]]\nLists\n-----\n.List types\n- Bulleted lists. Also known as itemized or unordered lists.\n- Numbered lists. Also called ordered lists.\n- Labeled lists. Sometimes called variable or definition lists.\n- Callout lists (a list of callout annotations).\n\n.List behavior\n- List item indentation is optional and does not determine nesting,\n  indentation does however make the source more readable.\n- Another list or a literal paragraph immediately following a list\n  item will be implicitly included in the list item; use <<X15, list\n  item continuation>> to explicitly append other block elements to a\n  list item.\n- A comment block or a comment line block macro element will terminate\n  a list -- use inline comment lines to put comments inside lists.\n- The `listindex` <<X60,intrinsic attribute>> is the current list item\n  index (1..). If this attribute is used outside a list then it's value\n  is the number of items in the most recently closed list. Useful for\n  displaying the number of items in a list.\n\nBulleted Lists\n~~~~~~~~~~~~~~\nBulleted list items start with a single dash or one to five asterisks\nfollowed by some white space then some text. Bulleted list syntaxes\nare:\n\n...................\n- List item.\n* List item.\n** List item.\n*** List item.\n**** List item.\n***** List item.\n...................\n\nNumbered Lists\n~~~~~~~~~~~~~~\nList item numbers are explicit or implicit.\n\n.Explicit numbering\nList items begin with a number followed by some white space then the\nitem text. The numbers can be decimal (arabic), roman (upper or lower\ncase) or alpha (upper or lower case). Decimal and alpha numbers are\nterminated with a period, roman numbers are terminated with a closing\nparenthesis. The different terminators are necessary to ensure 'i',\n'v' and 'x' roman numbers are are distinguishable from 'x', 'v' and\n'x' alpha numbers. Examples:\n\n.....................................................................\n1.   Arabic (decimal) numbered list item.\na.   Lower case alpha (letter) numbered list item.\nF.   Upper case alpha (letter) numbered list item.\niii) Lower case roman numbered list item.\nIX)  Upper case roman numbered list item.\n.....................................................................\n\n.Implicit numbering\nList items begin one to five period characters, followed by some white\nspace then the item text. Examples:\n\n.....................................................................\n. Arabic (decimal) numbered list item.\n.. Lower case alpha (letter) numbered list item.\n... Lower case roman numbered list item.\n.... Upper case alpha (letter) numbered list item.\n..... Upper case roman numbered list item.\n.....................................................................\n\nYou can use the 'style' attribute (also the first positional\nattribute) to specify an alternative numbering style.  The numbered\nlist style can be one of the following values: 'arabic', 'loweralpha',\n'upperalpha', 'lowerroman', 'upperroman'.\n\nHere are some examples of bulleted and numbered lists:\n\n---------------------------------------------------------------------\n- Praesent eget purus quis magna eleifend eleifend.\n  1. Fusce euismod commodo velit.\n    a. Fusce euismod commodo velit.\n    b. Vivamus fringilla mi eu lacus.\n    c. Donec eget arcu bibendum nunc consequat lobortis.\n  2. Vivamus fringilla mi eu lacus.\n    i)  Fusce euismod commodo velit.\n    ii) Vivamus fringilla mi eu lacus.\n  3. Donec eget arcu bibendum nunc consequat lobortis.\n  4. Nam fermentum mattis ante.\n- Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n  * Fusce euismod commodo velit.\n  ** Qui in magna commodo, est labitur dolorum an. Est ne magna primis\n     adolescens. Sit munere ponderum dignissim et. Minim luptatum et\n     vel.\n  ** Vivamus fringilla mi eu lacus.\n  * Donec eget arcu bibendum nunc consequat lobortis.\n- Nulla porttitor vulputate libero.\n  . Fusce euismod commodo velit.\n  . Vivamus fringilla mi eu lacus.\n[upperroman]\n    .. Fusce euismod commodo velit.\n    .. Vivamus fringilla mi eu lacus.\n  . Donec eget arcu bibendum nunc consequat lobortis.\n---------------------------------------------------------------------\n\nWhich render as:\n\n- Praesent eget purus quis magna eleifend eleifend.\n  1. Fusce euismod commodo velit.\n    a. Fusce euismod commodo velit.\n    b. Vivamus fringilla mi eu lacus.\n    c. Donec eget arcu bibendum nunc consequat lobortis.\n  2. Vivamus fringilla mi eu lacus.\n    i)  Fusce euismod commodo velit.\n    ii) Vivamus fringilla mi eu lacus.\n  3. Donec eget arcu bibendum nunc consequat lobortis.\n  4. Nam fermentum mattis ante.\n- Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n  * Fusce euismod commodo velit.\n  ** Qui in magna commodo, est labitur dolorum an. Est ne magna primis\n     adolescens. Sit munere ponderum dignissim et. Minim luptatum et\n     vel.\n  ** Vivamus fringilla mi eu lacus.\n  * Donec eget arcu bibendum nunc consequat lobortis.\n- Nulla porttitor vulputate libero.\n  . Fusce euismod commodo velit.\n  . Vivamus fringilla mi eu lacus.\n[upperroman]\n    .. Fusce euismod commodo velit.\n    .. Vivamus fringilla mi eu lacus.\n  . Donec eget arcu bibendum nunc consequat lobortis.\n\nA predefined 'compact' option is available to bulleted and numbered\nlists -- this translates to the DocBook 'spacing=\"compact\"' lists\nattribute which may or may not be processed by the DocBook toolchain.\nExample:\n\n  [options=\"compact\"]\n  - Compact list item.\n  - Another compact list item.\n\nTIP: To apply the 'compact' option globally define a document-wide\n'compact-option' attribute, e.g. using the `-a compact-option`\ncommand-line option.\n\nYou can set the list start number using the 'start' attribute (works\nfor HTML outputs and DocBook outputs processed by DocBook XSL\nStylesheets). Example:\n\n  [start=7]\n  . List item 7.\n  . List item 8.\n\nLabeled Lists\n~~~~~~~~~~~~~\nLabeled list items consist of one or more text labels followed by the\ntext of the list item.\n\nAn item label begins a line with an alphanumeric character hard\nagainst the left margin and ends with two, three or four colons or two\nsemi-colons. A list item can have multiple labels, one per line.\n\nThe list item text consists of one or more lines of text starting\nafter the last label (either on the same line or a new line) and can\nbe followed by nested List or ListParagraph elements. Item text can be\noptionally indented.\n\nHere are some examples:\n\n---------------------------------------------------------------------\nIn::\nLorem::\n  Fusce euismod commodo velit.\n\n  Fusce euismod commodo velit.\n\nIpsum:: Vivamus fringilla mi eu lacus.\n  * Vivamus fringilla mi eu lacus.\n  * Donec eget arcu bibendum nunc consequat lobortis.\nDolor::\n  Donec eget arcu bibendum nunc consequat lobortis.\n  Suspendisse;;\n    A massa id sem aliquam auctor.\n  Morbi;;\n    Pretium nulla vel lorem.\n  In;;\n    Dictum mauris in urna.\n    Vivamus::: Fringilla mi eu lacus.\n    Donec:::   Eget arcu bibendum nunc consequat lobortis.\n---------------------------------------------------------------------\n\nWhich render as:\n\nIn::\nLorem::\n  Fusce euismod commodo velit.\n\n  Fusce euismod commodo velit.\n\nIpsum:: Vivamus fringilla mi eu lacus.\n  * Vivamus fringilla mi eu lacus.\n  * Donec eget arcu bibendum nunc consequat lobortis.\nDolor::\n  Donec eget arcu bibendum nunc consequat lobortis.\n  Suspendisse;;\n    A massa id sem aliquam auctor.\n  Morbi;;\n    Pretium nulla vel lorem.\n  In;;\n    Dictum mauris in urna.\n    Vivamus::: Fringilla mi eu lacus.\n    Donec:::   Eget arcu bibendum nunc consequat lobortis.\n\nHorizontal labeled list style\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nThe 'horizontal' labeled list style (also the first positional\nattribute) places the list text side-by-side with the label instead of\nunder the label. Here is an example:\n\n---------------------------------------------------------------------\n[horizontal]\n*Lorem*:: Fusce euismod commodo velit.  Qui in magna commodo, est\nlabitur dolorum an. Est ne magna primis adolescens.\n\n  Fusce euismod commodo velit.\n\n*Ipsum*:: Vivamus fringilla mi eu lacus.\n- Vivamus fringilla mi eu lacus.\n- Donec eget arcu bibendum nunc consequat lobortis.\n\n*Dolor*::\n  - Vivamus fringilla mi eu lacus.\n  - Donec eget arcu bibendum nunc consequat lobortis.\n\n---------------------------------------------------------------------\n\nWhich render as:\n\n[horizontal]\n*Lorem*:: Fusce euismod commodo velit.  Qui in magna commodo, est\nlabitur dolorum an. Est ne magna primis adolescens.\n\n  Fusce euismod commodo velit.\n\n*Ipsum*:: Vivamus fringilla mi eu lacus.\n- Vivamus fringilla mi eu lacus.\n- Donec eget arcu bibendum nunc consequat lobortis.\n\n*Dolor*::\n  - Vivamus fringilla mi eu lacus.\n  - Donec eget arcu bibendum nunc consequat lobortis.\n\n[NOTE]\n=====================================================================\n- Current PDF toolchains do not make a good job of determining\n  the relative column widths for horizontal labeled lists.\n- Nested horizontal labeled lists will generate DocBook validation\n  errors because the 'DocBook XML V4.2' DTD does not permit nested\n  informal tables (although <<X13,DocBook XSL Stylesheets>> and\n  <<X31,dblatex>> process them correctly).\n- The label width can be set as a percentage of the total width by\n  setting the 'width' attribute e.g. `width=\"10%\"`\n=====================================================================\n\nQuestion and Answer Lists\n~~~~~~~~~~~~~~~~~~~~~~~~~\nAsciiDoc comes pre-configured with a 'qanda' style labeled list for generating\nDocBook question and answer (Q&A) lists. Example:\n\n---------------------------------------------------------------------\n[qanda]\nQuestion one::\n        Answer one.\nQuestion two::\n        Answer two.\n---------------------------------------------------------------------\n\nRenders:\n\n[qanda]\nQuestion one::\n        Answer one.\nQuestion two::\n        Answer two.\n\nGlossary Lists\n~~~~~~~~~~~~~~\nAsciiDoc comes pre-configured with a 'glossary' style labeled list for\ngenerating DocBook glossary lists. Example:\n\n---------------------------------------------------------------------\n[glossary]\nA glossary term::\n    The corresponding definition.\nA second glossary term::\n    The corresponding definition.\n---------------------------------------------------------------------\n\nFor working examples see the `article.txt` and `book.txt` documents in\nthe AsciiDoc `./doc` distribution directory.\n\nNOTE: To generate valid DocBook output glossary lists must be located\nin a section that uses the 'glossary' <<X93,section markup template>>.\n\nBibliography Lists\n~~~~~~~~~~~~~~~~~~\nAsciiDoc comes with a predefined 'bibliography' bulleted list style\ngenerating DocBook bibliography entries. Example:\n\n---------------------------------------------------------------------\n[bibliography]\n.Optional list title\n- [[[taoup]]] Eric Steven Raymond. 'The Art of UNIX\n  Programming'. Addison-Wesley. ISBN 0-13-142901-9.\n- [[[walsh-muellner]]] Norman Walsh & Leonard Muellner.\n  'DocBook - The Definitive Guide'. O'Reilly & Associates.\n  1999. ISBN 1-56592-580-7.\n---------------------------------------------------------------------\n\nThe `[[[<reference>]]]` syntax is a bibliography entry anchor, it\ngenerates an anchor named `<reference>` and additionally displays\n`[<reference>]` at the anchor position. For example `[[[taoup]]]`\ngenerates an anchor named `taoup` that displays `[taoup]` at the\nanchor position. Cite the reference from elsewhere your document using\n`<<taoup>>`, this displays a hyperlink (`[taoup]`) to the\ncorresponding bibliography entry anchor.\n\nFor working examples see the `article.txt` and `book.txt` documents in\nthe AsciiDoc `./doc` distribution directory.\n\nNOTE: To generate valid DocBook output bibliography lists must be\nlocated in a <<X93,bibliography section>>.\n\n[[X15]]\nList Item Continuation\n~~~~~~~~~~~~~~~~~~~~~~\nAnother list or a literal paragraph immediately following a list item\nis implicitly appended to the list item; to append other block\nelements to a list item you need to explicitly join them to the list\nitem with a 'list continuation' (a separator line containing a single\nplus character). Multiple block elements can be appended to a list\nitem using list continuations (provided they are legal list item\nchildren in the backend markup).\n\nHere are some examples of list item continuations: list item one\ncontains multiple continuations; list item two is continued with an\n<<X29,OpenBlock>> containing multiple elements:\n\n---------------------------------------------------------------------\n1. List item one.\n+\nList item one continued with a second paragraph followed by an\nIndented block.\n+\n.................\n$ ls *.sh\n$ mv *.sh ~/tmp\n.................\n+\nList item continued with a third paragraph.\n\n2. List item two continued with an open block.\n+\n--\nThis paragraph is part of the preceding list item.\n\na. This list is nested and does not require explicit item continuation.\n+\nThis paragraph is part of the preceding list item.\n\nb. List item b.\n\nThis paragraph belongs to item two of the outer list.\n--\n---------------------------------------------------------------------\n\nRenders:\n\n1. List item one.\n+\nList item one continued with a second paragraph followed by an\nIndented block.\n+\n.................\n$ ls *.sh\n$ mv *.sh ~/tmp\n.................\n+\nList item continued with a third paragraph.\n\n2. List item two continued with an open block.\n+\n--\nThis paragraph is part of the preceding list item.\n\na. This list is nested and does not require explicit item continuation.\n+\nThis paragraph is part of the preceding list item.\n\nb. List item b.\n\nThis paragraph belongs to item two of the outer list.\n--\n\n\n[[X92]]\nFootnotes\n---------\nThe shipped AsciiDoc configuration includes three footnote inline\nmacros:\n\n`footnote:[<text>]`::\n  Generates a footnote with text `<text>`.\n\n`footnoteref:[<id>,<text>]`::\n  Generates a footnote with a reference ID `<id>` and text `<text>`.\n\n`footnoteref:[<id>]`::\n  Generates a reference to the footnote with ID `<id>`.\n\nThe footnote text can span multiple lines.\n\nThe 'xhtml11' and 'html5' backends render footnotes dynamically using\nJavaScript; 'html4' outputs do not use JavaScript and leave the\nfootnotes inline; 'docbook' footnotes are processed by the downstream\nDocBook toolchain.\n\nExample footnotes:\n\n  A footnote footnote:[An example footnote.];\n  a second footnote with a reference ID footnoteref:[note2,Second footnote.];\n  finally a reference to the second footnote footnoteref:[note2].\n\nRenders:\n\nA footnote footnote:[An example footnote.];\na second footnote with a reference ID footnoteref:[note2,Second footnote.];\nfinally a reference to the second footnote footnoteref:[note2].\n\n\nIndexes\n-------\nThe shipped AsciiDoc configuration includes the inline macros for\ngenerating DocBook index entries.\n\n`indexterm:[<primary>,<secondary>,<tertiary>]`::\n`(((<primary>,<secondary>,<tertiary>)))`::\n    This inline macro generates an index term (the `<secondary>` and\n    `<tertiary>` positional attributes are optional). Example:\n    `indexterm:[Tigers,Big cats]` (or, using the alternative syntax\n    `(((Tigers,Big cats)))`.  Index terms that have secondary and\n    tertiary entries also generate separate index terms for the\n    secondary and tertiary entries. The index terms appear in the\n    index, not the primary text flow.\n\n`indexterm2:[<primary>]`::\n`((<primary>))`::\n    This inline macro generates an index term that appears in both the\n    index and the primary text flow.  The `<primary>` should not be\n    padded to the left or right with white space characters.\n\nFor working examples see the `article.txt` and `book.txt` documents in\nthe AsciiDoc `./doc` distribution directory.\n\nNOTE: Index entries only really make sense if you are generating\nDocBook markup -- DocBook conversion programs automatically generate\nan index at the point an 'Index' section appears in source document.\n\n\n[[X105]]\nCallouts\n--------\nCallouts are a mechanism for annotating verbatim text (for example:\nsource code, computer output and user input). Callout markers are\nplaced inside the annotated text while the actual annotations are\npresented in a callout list after the annotated text. Here's an\nexample:\n\n---------------------------------------------------------------------\n .MS-DOS directory listing\n -----------------------------------------------------\n 10/17/97   9:04         <DIR>    bin\n 10/16/97  14:11         <DIR>    DOS            \\<1>\n 10/16/97  14:40         <DIR>    Program Files\n 10/16/97  14:46         <DIR>    TEMP\n 10/17/97   9:04         <DIR>    tmp\n 10/16/97  14:37         <DIR>    WINNT\n 10/16/97  14:25             119  AUTOEXEC.BAT   \\<2>\n  2/13/94   6:21          54,619  COMMAND.COM    \\<2>\n 10/16/97  14:25             115  CONFIG.SYS     \\<2>\n 11/16/97  17:17      61,865,984  pagefile.sys\n  2/13/94   6:21           9,349  WINA20.386     \\<3>\n -----------------------------------------------------\n\n \\<1> This directory holds MS-DOS.\n \\<2> System startup code for DOS.\n \\<3> Some sort of Windows 3.1 hack.\n---------------------------------------------------------------------\n\nWhich renders:\n\n.MS-DOS directory listing\n-----------------------------------------------------\n10/17/97   9:04         <DIR>    bin\n10/16/97  14:11         <DIR>    DOS            <1>\n10/16/97  14:40         <DIR>    Program Files\n10/16/97  14:46         <DIR>    TEMP\n10/17/97   9:04         <DIR>    tmp\n10/16/97  14:37         <DIR>    WINNT\n10/16/97  14:25             119  AUTOEXEC.BAT   <2>\n 2/13/94   6:21          54,619  COMMAND.COM    <2>\n10/16/97  14:25             115  CONFIG.SYS     <2>\n11/16/97  17:17      61,865,984  pagefile.sys\n 2/13/94   6:21           9,349  WINA20.386     <3>\n-----------------------------------------------------\n\n<1> This directory holds MS-DOS.\n<2> System startup code for DOS.\n<3> Some sort of Windows 3.1 hack.\n\n.Explanation\n- The callout marks are whole numbers enclosed in angle brackets --\n  they refer to the correspondingly numbered item in the following\n  callout list.\n- By default callout marks are confined to 'LiteralParagraphs',\n  'LiteralBlocks' and 'ListingBlocks' (although this is a\n  configuration file option and can be changed).\n- Callout list item numbering is fairly relaxed -- list items can\n  start with `<n>`, `n>` or `>` where `n` is the optional list item\n  number (in the latter case list items starting with a single `>`\n  character are implicitly numbered starting at one).\n- Callout lists should not be nested.\n- Callout lists start list items hard against the left margin.\n- If you want to present a number inside angle brackets you'll need to\n  escape it with a backslash to prevent it being interpreted as a\n  callout mark.\n\nNOTE: Define the AsciiDoc 'icons' attribute (for example using the `-a\nicons` command-line option) to display callout icons.\n\nImplementation Notes\n~~~~~~~~~~~~~~~~~~~~\nCallout marks are generated by the 'callout' inline macro while\ncallout lists are generated using the 'callout' list definition. The\n'callout' macro and 'callout' list are special in that they work\ntogether. The 'callout' inline macro is not enabled by the normal\n'macros' substitutions option, instead it has its own 'callouts'\nsubstitution option.\n\nThe following attributes are available during inline callout macro\nsubstitution:\n\n`{index}`::\n    The callout list item index inside the angle brackets.\n`{coid}`::\n    An identifier formatted like `CO<listnumber>-<index>` that\n    uniquely identifies the callout mark. For example `CO2-4`\n    identifies the fourth callout mark in the second set of callout\n    marks.\n\nThe `{coids}` attribute can be used during callout list item\nsubstitution -- it is a space delimited list of callout IDs that refer\nto the explanatory list item.\n\nIncluding callouts in included code\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou can annotate working code examples with callouts -- just remember\nto put the callouts inside source code comments. This example displays\nthe `test.py` source file (containing a single callout) using the\n'source' (code highlighter) filter:\n\n.AsciiDoc source\n---------------------------------------------------------------------\n [source,python]\n -------------------------------------------\n \\include::test.py[]\n -------------------------------------------\n\n \\<1> Print statement.\n---------------------------------------------------------------------\n\n.Included `test.py` source\n---------------------------------------------------------------------\nprint 'Hello World!'   # \\<1>\n---------------------------------------------------------------------\n\n\nMacros\n------\nMacros are a mechanism for substituting parametrized text into output\ndocuments.\n\nMacros have a 'name', a single 'target' argument and an 'attribute\nlist'.  The usual syntax is `<name>:<target>[<attrlist>]` (for\ninline macros) and `<name>::<target>[<attrlist>]` (for block\nmacros).  Here are some examples:\n\n  http://www.docbook.org/[DocBook.org]\n  include::chapt1.txt[tabsize=2]\n  mailto:srackham@gmail.com[]\n\n.Macro behavior\n- `<name>` is the macro name. It can only contain letters, digits or\n  dash characters and cannot start with a dash.\n- The optional `<target>` cannot contain white space characters.\n- `<attrlist>` is a <<X21,list of attributes>> enclosed in square\n  brackets.\n- `]` characters inside attribute lists must be escaped with a\n  backslash.\n- Expansion of macro references can normally be escaped by prefixing a\n  backslash character (see the AsciiDoc 'FAQ' for examples of\n  exceptions to this rule).\n- Attribute references in block macros are expanded.\n- The substitutions performed prior to Inline macro macro expansion\n  are determined by the inline context.\n- Macros are processed in the order they appear in the configuration\n  file(s).\n- Calls to inline macros can be nested inside different inline macros\n  (an inline macro call cannot contain a nested call to itself).\n- In addition to `<name>`, `<target>` and `<attrlist>` the\n  `<passtext>` and `<subslist>` named groups are available to\n  <<X77,passthrough macros>>. A macro is a passthrough macro if the\n  definition includes a `<passtext>` named group.\n\nInline Macros\n~~~~~~~~~~~~~\nInline Macros occur in an inline element context. Predefined Inline\nmacros include 'URLs', 'image' and 'link' macros.\n\nURLs\n^^^^\n'http', 'https', 'ftp', 'file', 'mailto' and 'callto' URLs are\nrendered using predefined inline macros.\n\n- If you don't need a custom link caption you can enter the 'http',\n  'https', 'ftp', 'file' URLs and email addresses without any special\n  macro syntax.\n- If the `<attrlist>` is empty the URL is displayed.\n\nHere are some examples:\n\n  http://www.docbook.org/[DocBook.org]\n  http://www.docbook.org/\n  mailto:joe.bloggs@foobar.com[email Joe Bloggs]\n  joe.bloggs@foobar.com\n\nWhich are rendered:\n\nhttp://www.docbook.org/[DocBook.org]\n\nhttp://www.docbook.org/\n\nmailto:joe.bloggs@foobar.com[email Joe Bloggs]\n\njoe.bloggs@foobar.com\n\nIf the `<target>` necessitates space characters use `%20`, for example\n`large%20image.png`.\n\nInternal Cross References\n^^^^^^^^^^^^^^^^^^^^^^^^^\nTwo AsciiDoc inline macros are provided for creating hypertext links\nwithin an AsciiDoc document. You can use either the standard macro\nsyntax or the (preferred) alternative.\n\n[[X30]]\nanchor\n++++++\nUsed to specify hypertext link targets:\n\n  [[<id>,<xreflabel>]]\n  anchor:<id>[<xreflabel>]\n\nThe `<id>` is a unique string that conforms to the output markup's\nanchor syntax. The optional `<xreflabel>` is the text to be displayed\nby captionless 'xref' macros that refer to this anchor. The optional\n`<xreflabel>` is only really useful when generating DocBook output.\nExample anchor:\n\n  [[X1]]\n\nYou may have noticed that the syntax of this inline element is the\nsame as that of the <<X41,BlockId block element>>, this is no\ncoincidence since they are functionally equivalent.\n\nxref\n++++\nCreates a hypertext link to a document anchor.\n\n  <<<id>,<caption>>>\n  xref:<id>[<caption>]\n\nThe `<id>` refers to an anchor ID. The optional `<caption>` is the\nlink's displayed text. Example:\n\n  <<X21,attribute lists>>\n\nIf `<caption>` is not specified then the displayed text is\nauto-generated:\n\n- The AsciiDoc 'xhtml11' and 'html5' backends display the `<id>`\n  enclosed in square brackets.\n- If DocBook is produced the DocBook toolchain is responsible for the\n  displayed text which will normally be the referenced figure, table\n  or section title number followed by the element's title text.\n\nHere is an example:\n\n---------------------------------------------------------------------\n[[tiger_image]]\n.Tyger tyger\nimage::tiger.png[]\n\nThis can be seen in <<tiger_image>>.\n---------------------------------------------------------------------\n\nLinking to Local Documents\n^^^^^^^^^^^^^^^^^^^^^^^^^^\nHypertext links to files on the local file system are specified using\nthe 'link' inline macro.\n\n  link:<target>[<caption>]\n\nThe 'link' macro generates relative URLs. The link macro `<target>` is\nthe target file name (relative to the file system location of the\nreferring document). The optional `<caption>` is the link's displayed\ntext. If `<caption>` is not specified then `<target>` is displayed.\nExample:\n\n  link:downloads/foo.zip[download foo.zip]\n\nYou can use the `<filename>#<id>` syntax to refer to an anchor within\na target document but this usually only makes sense when targeting\nHTML documents.\n\n[[X9]]\nImages\n^^^^^^\nInline images are inserted into the output document using the 'image'\nmacro. The inline syntax is:\n\n  image:<target>[<attributes>]\n\nThe contents of the image file `<target>` is displayed. To display the\nimage its file format must be supported by the target backend\napplication. HTML and DocBook applications normally support PNG or JPG\nfiles.\n\n`<target>` file name paths are relative to the location of the\nreferring document.\n\n[[X55]]\n.Image macro attributes\n- The optional 'alt' attribute is also the first positional attribute,\n  it specifies alternative text which is displayed if the output\n  application is unable to display the image file (see also\n  http://htmlhelp.com/feature/art3.htm[Use of ALT texts in IMGs]). For\n  example:\n\n  image:images/logo.png[Company Logo]\n\n- The optional 'title' attribute provides a title for the image. The\n  <<X49,block image macro>> renders the title alongside the image.\n  The inline image macro displays the title as a popup ``tooltip'' in\n  visual browsers (AsciiDoc HTML outputs only).\n\n- The optional `width` and `height` attributes scale the image size\n  and can be used in any combination. The units are pixels.  The\n  following example scales the previous example to a height of 32\n  pixels:\n\n  image:images/logo.png[\"Company Logo\",height=32]\n\n- The optional `link` attribute is used to link the image to an\n  external document. The following example links a screenshot\n  thumbnail to a full size version:\n\n  image:screen-thumbnail.png[height=32,link=\"screen.png\"]\n\n- The optional `scaledwidth` attribute is only used in DocBook block\n  images (specifically for PDF documents). The following example\n  scales the images to 75% of the available print width:\n\n  image::images/logo.png[scaledwidth=\"75%\",alt=\"Company Logo\"]\n\n- The image `scale` attribute sets the DocBook `imagedata` element\n  `scale` attribute.\n\n- The optional `align` attribute is used for horizontal image\n  alignment.  Allowed values are `center`, `left` and `right`. For\n  example:\n\n  image::images/tiger.png[\"Tiger image\",align=\"left\"]\n\n- The optional `float` attribute floats the image `left` or `right` on\n  the page (works with HTML outputs only, has no effect on DocBook\n  outputs). `float` and `align` attributes are mutually exclusive.\n  Use the `unfloat::[]` block macro to stop floating.\n\nComment Lines\n^^^^^^^^^^^^^\nSee <<X25,comment block macro>>.\n\nBlock Macros\n~~~~~~~~~~~~\nA Block macro reference must be contained in a single line separated\neither side by a blank line or a block delimiter.\n\nBlock macros behave just like Inline macros, with the following\ndifferences:\n\n- They occur in a block context.\n- The default syntax is `<name>::<target>[<attrlist>]` (two\n  colons, not one).\n- Markup template section names end in `-blockmacro` instead of\n  `-inlinemacro`.\n\nBlock Identifier\n^^^^^^^^^^^^^^^^\nThe Block Identifier macro sets the `id` attribute and has the same\nsyntax as the <<X30,anchor inline macro>> since it performs\nessentially the same function -- block templates use the `id`\nattribute as a block element ID. For example:\n\n  [[X30]]\n\nThis is equivalent to the `[id=\"X30\"]` <<X79,AttributeList element>>).\n\n[[X49]]\nImages\n^^^^^^\nThe 'image' block macro is used to display images in a block context.\nThe syntax is:\n\n  image::<target>[<attributes>]\n\nThe block `image` macro has the same <<X55,macro attributes>> as it's\n<<X9,inline image macro>> counterpart.\n\nBlock images can be titled by preceding the 'image' macro with a\n'BlockTitle'.  DocBook toolchains normally number titled block images\nand optionally list them in an automatically generated 'List of\nFigures' backmatter section.\n\nThis example:\n\n  .Main circuit board\n  image::images/layout.png[J14P main circuit board]\n\nis equivalent to:\n\n  image::images/layout.png[\"J14P main circuit board\",\n                            title=\"Main circuit board\"]\n\nA title prefix that can be inserted with the `caption` attribute\n(HTML backends). For example:\n\n  .Main circuit board\n  [caption=\"Figure 2: \"]\n  image::images/layout.png[J14P main circuit board]\n\n[[X66]]\n.Embedding images in XHTML documents\n*********************************************************************\nIf you define the `data-uri` attribute then images will be embedded in\nXHTML outputs using the\nhttp://en.wikipedia.org/wiki/Data:_URI_scheme[data URI scheme].  You\ncan use the 'data-uri' attribute with the 'xhtml11' and 'html5'\nbackends to produce single-file XHTML documents with embedded images\nand CSS, for example:\n\n  $ asciidoc -a data-uri mydocument.txt\n\n[NOTE]\n======\n- All current popular browsers support data URIs, although versions\n  of Internet Explorer prior to version 8 do not.\n- Some browsers limit the size of data URIs.\n======\n*********************************************************************\n\n[[X25]]\nComment Lines\n^^^^^^^^^^^^^\nSingle lines starting with two forward slashes hard up against the\nleft margin are treated as comments. Comment lines do not appear in\nthe output unless the 'showcomments' attribute is defined.  Comment\nlines have been implemented as both block and inline macros so a\ncomment line can appear as a stand-alone block or within block elements\nthat support inline macro expansion. Example comment line:\n\n  // This is a comment.\n\nIf the 'showcomments' attribute is defined comment lines are written\nto the output:\n\n- In DocBook the comment lines are enclosed by the 'remark' element\n  (which may or may not be rendered by your toolchain).\n- The 'showcomments' attribute does not expose <<X26,Comment Blocks>>.\n  Comment Blocks are never passed to the output.\n\nSystem Macros\n~~~~~~~~~~~~~\nSystem macros are block macros that perform a predefined task and are\nhardwired into the asciidoc(1) program.\n\n- You can escape system macros with a leading backslash character\n  (as you can with other macros).\n- The syntax and tasks performed by system macros is built into\n  asciidoc(1) so they don't appear in configuration files.  You can\n  however customize the syntax by adding entries to a configuration\n  file `[macros]` section.\n\n[[X63]]\nInclude Macros\n^^^^^^^^^^^^^^\nThe `include` and `include1`  system macros to include the contents of\na named file into the source document.\n\nThe `include` macro includes a file as if it were part of the parent\ndocument -- tabs are expanded and system macros processed. The\ncontents of `include1` files are not subject to tab expansion or\nsystem macro processing nor are attribute or lower priority\nsubstitutions performed. The `include1` macro's intended use is to\ninclude verbatim embedded CSS or scripts into configuration file\nheaders.  Example:\n\n------------------------------------\n\\include::chapter1.txt[tabsize=4]\n------------------------------------\n\n.Include macro behavior\n- If the included file name is specified with a relative path then the\n  path is relative to the location of the referring document.\n- Include macros can appear inside configuration files.\n- Files included from within 'DelimitedBlocks' are read to completion\n  to avoid false end-of-block underline termination.\n- Attribute references are expanded inside the include 'target'; if an\n  attribute is undefined then the included file is silently skipped.\n- The 'tabsize' macro attribute sets the number of space characters to\n  be used for tab expansion in the included file (not applicable to\n  `include1` macro).\n- The 'depth' macro attribute sets the maximum permitted number of\n  subsequent nested includes (not applicable to `include1` macro which\n  does not process nested includes). Setting 'depth' to '1' disables\n  nesting inside the included file. By default, nesting is limited to\n  a depth of ten.\n- If the he 'warnings' attribute is set to 'False' (or any other\n  Python literal that evaluates to boolean false) then no warning\n  message is printed if the included file does not exist. By default\n  'warnings' are enabled.\n- Internally the `include1` macro is translated to the `include1`\n  system attribute which means it must be evaluated in a region where\n  attribute substitution is enabled. To inhibit nested substitution in\n  included files it is preferable to use the `include` macro and set\n  the attribute `depth=1`.\n\nConditional Inclusion Macros\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nLines of text in the source document can be selectively included or\nexcluded from processing based on the existence (or not) of a document\nattribute.\n\nDocument text between the `ifdef` and `endif` macros is included if a\ndocument attribute is defined:\n\n  ifdef::<attribute>[]\n  :\n  endif::<attribute>[]\n\nDocument text between the `ifndef` and `endif` macros is not included\nif a document attribute is defined:\n\n  ifndef::<attribute>[]\n  :\n  endif::<attribute>[]\n\n`<attribute>` is an attribute name which is optional in the trailing\n`endif` macro.\n\nIf you only want to process a single line of text then the text can be\nput inside the square brackets and the `endif` macro omitted, for\nexample:\n\n  ifdef::revnumber[Version number 42]\n\nIs equivalent to:\n\n  ifdef::revnumber[]\n  Version number 42\n  endif::revnumber[]\n\n'ifdef' and 'ifndef' macros also accept multiple attribute names:\n\n- Multiple ',' separated attribute names evaluate to defined if one\n  or more of the attributes is defined, otherwise it's value is\n  undefined.\n- Multiple '+' separated attribute names evaluate to defined if all\n  of the attributes is defined, otherwise it's value is undefined.\n\nDocument text between the `ifeval` and `endif` macros is included if\nthe Python expression inside the square brackets is true. Example:\n\n  ifeval::[{rs458}==2]\n  :\n  endif::[]\n\n- Document attribute references are expanded before the expression is\n  evaluated.\n- If an attribute reference is undefined then the expression is\n  considered false.\n\nTake a look at the `*.conf` configuration files in the AsciiDoc\ndistribution for examples of conditional inclusion macro usage.\n\nExecutable system macros\n^^^^^^^^^^^^^^^^^^^^^^^^\nThe 'eval', 'sys' and 'sys2' block macros exhibit the same behavior as\ntheir same named <<X24, system attribute references>>. The difference\nis that system macros occur in a block macro context whereas system\nattributes are confined to inline contexts where attribute\nsubstitution is enabled.\n\nThe following example displays a long directory listing inside a\nliteral block:\n\n  ------------------\n  sys::[ls -l *.txt]\n  ------------------\n\nNOTE: There are no block macro versions of the 'eval3' and 'sys3'\nsystem attributes.\n\nTemplate System Macro\n^^^^^^^^^^^^^^^^^^^^^\nThe `template` block macro allows the inclusion of one configuration\nfile template section within another.  The following example includes\nthe `[admonitionblock]` section in the `[admonitionparagraph]`\nsection:\n\n  [admonitionparagraph]\n  template::[admonitionblock]\n\n.Template macro behavior\n- The `template::[]` macro is useful for factoring configuration file\n  markup.\n- `template::[]` macros cannot be nested.\n- `template::[]` macro expansion is applied after all configuration\n  files have been read.\n\n\n[[X77]]\nPassthrough macros\n~~~~~~~~~~~~~~~~~~\nPassthrough macros are analogous to <<X76,passthrough blocks>> and are\nused to pass text directly to the output. The substitution performed\non the text is determined by the macro definition but can be overridden\nby the `<subslist>`.  The usual syntax is\n`<name>:<subslist>[<passtext>]` (for inline macros) and\n`<name>::<subslist>[<passtext>]` (for block macros). Passthroughs, by\ndefinition, take precedence over all other text substitutions.\n\npass::\n  Inline and block. Passes text unmodified (apart from explicitly\n  specified substitutions). Examples:\n\n  pass:[<q>To be or not to be</q>]\n  pass:attributes,quotes[<u>the '{author}'</u>]\n\nasciimath, latexmath::\n  Inline and block. Passes text unmodified.  Used for\n  <<X78,mathematical formulas>>.\n\n\\+++::\n  Inline and block. The triple-plus passthrough is functionally\n  identical to the 'pass' macro but you don't have to escape `]`\n  characters and you can prefix with quoted attributes in the inline\n  version. Example:\n\n  Red [red]+++`sum_(i=1)\\^n i=(n(n+1))/2`$+++ AsciiMathML formula\n\n$$::\n  Inline and block. The double-dollar passthrough is functionally\n  identical to the triple-plus passthrough with one exception: special\n  characters are escaped. Example:\n\n  $$`[[a,b],[c,d]]((n),(k))`$$\n\n[[X80]]`::\n  Text quoted with single backtick characters constitutes an 'inline\n  literal' passthrough. The enclosed text is rendered in a monospaced\n  font and is only subject to special character substitution.  This\n  makes sense since monospace text is usually intended to be rendered\n  literally and often contains characters that would otherwise have to\n  be escaped. If you need monospaced text containing inline\n  substitutions use a <<X81,plus character instead of a backtick>>.\n\nMacro Definitions\n~~~~~~~~~~~~~~~~~\nEach entry in the configuration `[macros]` section is a macro\ndefinition which can take one of the following forms:\n\n`<pattern>=<name>[<subslist]`:: Inline macro definition.\n`<pattern>=#<name>[<subslist]`:: Block macro definition.\n`<pattern>=+<name>[<subslist]`:: System macro definition.\n`<pattern>`:: Delete the existing macro with this `<pattern>`.\n\n`<pattern>` is a Python regular expression and `<name>` is the name of\na markup template. If `<name>` is omitted then it is the value of the\nregular expression match group named 'name'.  The optional\n`[<subslist]` is a comma-separated list of substitution names enclosed\nin `[]` brackets, it sets the default substitutions for passthrough\ntext, if omitted then no passthrough substitutions are performed.\n\n.Pattern named groups\nThe following named groups can be used in macro `<pattern>` regular\nexpressions and are available as markup template attributes:\n\nname::\n  The macro name.\n\ntarget::\n  The macro target.\n\nattrlist::\n  The macro attribute list.\n\npasstext::\n  Contents of this group are passed unmodified to the output subject\n  only to 'subslist' substitutions.\n\nsubslist::\n  Processed as a comma-separated list of substitution names for\n  'passtext' substitution, overrides the the macro definition\n  'subslist'.\n\n.Here's what happens during macro substitution\n- Each contextually relevant macro 'pattern' from the `[macros]`\n  section is matched against the input source line.\n- If a match is found the text to be substituted is loaded from a\n  configuration markup template section named like\n  `<name>-inlinemacro` or `<name>-blockmacro` (depending on the macro\n  type).\n- Global and macro attribute list attributes are substituted in the\n  macro's markup template.\n- The substituted template replaces the macro reference in the output\n  document.\n\n\n[[X98]]\nHTML 5 audio and video block macros\n-----------------------------------\nThe 'html5' backend 'audio' and 'video' block macros generate the HTML\n5 'audio' and 'video' elements respectively.  They follow the usual\nAsciiDoc block macro syntax `<name>::<target>[<attrlist>]` where:\n\n[horizontal]\n`<name>`:: 'audio' or 'video'.\n`<target>`:: The URL or file name of the video or audio file.\n`<attrlist>`:: A list of named attributes (see below).\n\n.Audio macro attributes\n[options=\"header\",cols=\"1,5\",frame=\"topbot\"]\n|====================================================================\n|Name | Value\n|options\n|A comma separated list of one or more of the following items:\n'autoplay', 'loop' which correspond to the same-named HTML 5 'audio'\nelement boolean attributes.  By default the player 'controls' are\nenabled, include the 'nocontrols' option value to hide them.\n|====================================================================\n\n.Video macro attributes\n[options=\"header\",cols=\"1,5\",frame=\"topbot\"]\n|====================================================================\n|Name   | Value\n|height | The height of the player in pixels.\n|width  | The width of the player in pixels.\n|poster | The URL or file name of an image representing the video.\n|options\n|A comma separated list of one or more of the following items:\n'autoplay', 'loop' and 'nocontrols'. The 'autoplay' and 'loop' options\ncorrespond to the same-named HTML 5 'video' element boolean\nattributes.  By default the player 'controls' are enabled, include the\n'nocontrols' option value to hide them.\n|====================================================================\n\nExamples:\n\n---------------------------------------------------------------------\naudio::images/example.ogg[]\n\nvideo::gizmo.ogv[width=200,options=\"nocontrols,autoplay\"]\n\n.Example video\nvideo::gizmo.ogv[]\n\nvideo::http://www.808.dk/pics/video/gizmo.ogv[]\n---------------------------------------------------------------------\n\nIf your needs are more complex put raw HTML 5 in a markup block, for\nexample (from http://www.808.dk/?code-html-5-video):\n\n---------------------------------------------------------------------\n++++\n<video poster=\"pics/video/gizmo.jpg\" id=\"video\" style=\"cursor: pointer;\" >\n  <source src=\"pics/video/gizmo.mp4\" />\n  <source src=\"pics/video/gizmo.webm\" type=\"video/webm\" />\n  <source src=\"pics/video/gizmo.ogv\" type=\"video/ogg\" />\n  Video not playing? <a href=\"pics/video/gizmo.mp4\">Download file</a> instead.\n</video>\n\n<script type=\"text/javascript\">\n  var video = document.getElementById('video');\n  video.addEventListener('click',function(){\n    video.play();\n  },false);\n</script>\n++++\n---------------------------------------------------------------------\n\n\nTables\n------\nThe AsciiDoc table syntax looks and behaves like other delimited block\ntypes and supports standard <<X73,block configuration entries>>.\nFormatting is easy to read and, just as importantly, easy to enter.\n\n- Cells and columns can be formatted using built-in customizable styles.\n- Horizontal and vertical cell alignment can be set on columns and\n  cell.\n- Horizontal and vertical cell spanning is supported.\n\n.Use tables sparingly\n*********************************************************************\nWhen technical users first start creating documents, tables (complete\nwith column spanning and table nesting) are often considered very\nimportant. The reality is that tables are seldom used, even in\ntechnical documentation.\n\nTry this exercise: thumb through your library of technical books,\nyou'll be surprised just how seldom tables are actually used, even\nless seldom are tables containing block elements (such as paragraphs\nor lists) or spanned cells. This is no accident, like figures, tables\nare outside the normal document flow -- tables are for consulting not\nfor reading.\n\nTables are designed for, and should normally only be used for,\ndisplaying column oriented tabular data.\n*********************************************************************\n\nExample tables\n~~~~~~~~~~~~~~\n\n.Simple table\n[width=\"15%\"]\n|=======\n|1 |2 |A\n|3 |4 |B\n|5 |6 |C\n|=======\n\n.AsciiDoc source\n---------------------------------------------------------------------\n[width=\"15%\"]\n|=======\n|1 |2 |A\n|3 |4 |B\n|5 |6 |C\n|=======\n---------------------------------------------------------------------\n\n.Columns formatted with strong, monospaced and emphasis styles\n[width=\"50%\",cols=\">s,^m,e\",frame=\"topbot\",options=\"header,footer\"]\n|==========================\n|      2+|Columns 2 and 3\n|1       |Item 1  |Item 1\n|2       |Item 2  |Item 2\n|3       |Item 3  |Item 3\n|4       |Item 4  |Item 4\n|footer 1|footer 2|footer 3\n|==========================\n\n.AsciiDoc source\n---------------------------------------------------------------------\n.An example table\n[width=\"50%\",cols=\">s,^m,e\",frame=\"topbot\",options=\"header,footer\"]\n|==========================\n|      2+|Columns 2 and 3\n|1       |Item 1  |Item 1\n|2       |Item 2  |Item 2\n|3       |Item 3  |Item 3\n|4       |Item 4  |Item 4\n|footer 1|footer 2|footer 3\n|==========================\n---------------------------------------------------------------------\n\n.Horizontal and vertical source data\n[width=\"80%\",cols=\"3,^2,^2,10\",options=\"header\"]\n|=========================================================\n|Date |Duration |Avg HR |Notes\n\n|22-Aug-08 |10:24 | 157 |\nWorked out MSHR (max sustainable heart rate) by going hard\nfor this interval.\n\n|22-Aug-08 |23:03 | 152 |\nBack-to-back with previous interval.\n\n|24-Aug-08 |40:00 | 145 |\nModerately hard interspersed with 3x 3min intervals (2min\nhard + 1min really hard taking the HR up to 160).\n\n|=========================================================\n\nShort cells can be entered horizontally, longer cells vertically.  The\ndefault behavior is to strip leading and trailing blank lines within a\ncell. These characteristics aid readability and data entry.\n\n.AsciiDoc source\n---------------------------------------------------------------------\n.Windtrainer workouts\n[width=\"80%\",cols=\"3,^2,^2,10\",options=\"header\"]\n|=========================================================\n|Date |Duration |Avg HR |Notes\n\n|22-Aug-08 |10:24 | 157 |\nWorked out MSHR (max sustainable heart rate) by going hard\nfor this interval.\n\n|22-Aug-08 |23:03 | 152 |\nBack-to-back with previous interval.\n\n|24-Aug-08 |40:00 | 145 |\nModerately hard interspersed with 3x 3min intervals (2min\nhard + 1min really hard taking the HR up to 160).\n\n|=========================================================\n---------------------------------------------------------------------\n\n.A table with externally sourced CSV data\n[format=\"csv\",cols=\"^1,4*2\",options=\"header\"]\n|===================================================\nID,Customer Name,Contact Name,Customer Address,Phone\ninclude::customers.csv[]\n|===================================================\n\n.AsciiDoc source\n---------------------------------------------------------------------\n[format=\"csv\",cols=\"^1,4*2\",options=\"header\"]\n|===================================================\nID,Customer Name,Contact Name,Customer Address,Phone\n\\include::customers.csv[]\n|===================================================\n---------------------------------------------------------------------\n\n\n.Cell spans, alignments and styles\n[cols=\"e,m,^,>s\",width=\"25%\"]\n|============================\n|1 >s|2 |3 |4\n^|5 2.2+^.^|6 .3+<.>m|7\n^|8\n|9 2+>|10\n|============================\n\n.AsciiDoc source\n---------------------------------------------------------------------\n[cols=\"e,m,^,>s\",width=\"25%\"]\n|============================\n|1 >s|2 |3 |4\n^|5 2.2+^.^|6 .3+<.>m|7\n^|8\n|9 2+>|10\n|============================\n---------------------------------------------------------------------\n\n[[X68]]\nTable input data formats\n~~~~~~~~~~~~~~~~~~~~~~~~\nAsciiDoc table data can be 'psv', 'dsv' or 'csv' formatted.  The\ndefault table format is 'psv'.\n\nAsciiDoc 'psv' ('Prefix Separated Values') and 'dsv' ('Delimiter\nSeparated Values') formats are cell oriented -- the table is treated\nas a sequence of cells -- there are no explicit row separators.\n\n- 'psv' prefixes each cell with a separator whereas 'dsv' delimits\n  cells with a separator.\n- 'psv' and 'dsv' separators are Python regular expressions.\n- The default 'psv' separator contains <<X84, cell specifier>> related\n  named regular expression groups.\n- The default 'dsv' separator is `:|\\n` (a colon or a new line\n  character).\n- 'psv' and 'dsv' cell separators can be escaped by preceding them\n  with a backslash character.\n\nHere are four 'psv' cells (the second item spans two columns; the\nlast contains an escaped separator):\n\n  |One 2+|Two and three |A \\| separator character\n\n'csv'  is the quasi-standard row oriented 'Comma Separated Values\n(CSV)' format commonly used to import and export spreadsheet and\ndatabase data.\n\n[[X69]]\nTable attributes\n~~~~~~~~~~~~~~~~\nTables can be customized by the following attributes:\n\nformat::\n'psv' (default), 'dsv' or 'csv' (See <<X68, Table Data Formats>>).\n\nseparator::\nThe cell separator. A Python regular expression ('psv' and 'dsv'\nformats) or a single character ('csv' format).\n\nframe::\nDefines the table border and can take the following values: 'topbot'\n(top and bottom), 'all' (all sides), 'none' and 'sides' (left and\nright sides). The default value is 'all'.\n\ngrid::\nDefines which ruler lines are drawn between table rows and columns.\nThe 'grid' attribute value can be any of the following values: 'none',\n'cols', 'rows' and 'all'. The default value is 'all'.\n\nalign::\nUse the 'align' attribute to horizontally align the table on the\npage (works with HTML outputs only, has no effect on DocBook outputs).\nThe following values are valid: 'left', 'right', and 'center'.\n\nfloat::\nUse the 'float' attribute to float the table 'left' or 'right' on the\npage (works with HTML outputs only, has no effect on DocBook outputs).\nFloating only makes sense in conjunction with a table 'width'\nattribute value of less than 100% (otherwise the table will take up\nall the available space).  'float' and 'align' attributes are mutually\nexclusive.  Use the `unfloat::[]` block macro to stop floating.\n\nhalign::\nUse the 'halign' attribute to horizontally align all cells in a table.\nThe following values are valid: 'left', 'right', and 'center'\n(defaults to 'left'). Overridden by <<X70,Column specifiers>>  and\n<<X84,Cell specifiers>>.\n\nvalign::\nUse the 'valign' attribute to vertically align all cells in a table.\nThe following values are valid: 'top', 'bottom', and 'middle'\n(defaults to 'top'). Overridden by <<X70,Column specifiers>>  and\n<<X84,Cell specifiers>>.\n\noptions::\nThe 'options' attribute can contain comma separated values, for\nexample: 'header', 'footer'. By default header and footer rows are\nomitted.  See <<X74,attribute options>> for a complete list of\navailable table options.\n\ncols::\nThe 'cols' attribute is a comma separated list of <<X70,column\nspecifiers>>. For example `cols=\"2<p,2*,4p,>\"`.\n\n- If 'cols' is present it must specify all columns.\n- If the 'cols' attribute is not specified the number of columns is\n  calculated as the number of data items in the *first line* of the\n  table.\n- The degenerate form for the 'cols' attribute is an integer\n  specifying the number of columns e.g. `cols=4`.\n\nwidth::\nThe 'width' attribute is expressed as a percentage value\n('\"1%\"'...'\"99%\"'). The width specifies the table width relative to\nthe available width. HTML backends use this value to set the table\nwidth attribute. It's a bit more complicated with DocBook, see the\n<<X89,DocBook table widths>> sidebar.\n\nfilter::\nThe 'filter' attribute defines an external shell command that is\ninvoked for each cell. The built-in 'asciidoc' table style is\nimplemented using a filter.\n\n[[X89]]\n.DocBook table widths\n**********************************************************************\nThe AsciiDoc docbook backend generates CALS tables. CALS tables do not\nsupport a table width attribute -- table width can only be controlled\nby specifying absolute column widths.\n\nSpecifying absolute column widths is not media independent because\ndifferent presentation media have different physical dimensions. To\nget round this limitation both\nhttp://www.sagehill.net/docbookxsl/Tables.html#TableWidth[DocBook XSL\nStylesheets] and\nhttp://dblatex.sourceforge.net/doc/manual/ch03s05.html#sec-table-width[dblatex]\nhave implemented table width processing instructions for setting the\ntable width as a percentage of the available width. AsciiDoc emits\nthese processing instructions if the 'width' attribute is set along\nwith proportional column widths (the AsciiDoc docbook backend\n'pageunits' attribute defaults to '*').\n\nTo generate DocBook tables with absolute column widths set the\n'pageunits' attribute to a CALS absolute unit such as 'pt' and set the\n'pagewidth' attribute to match the width of the presentation media.\n**********************************************************************\n\n[[X70]]\nColumn Specifiers\n~~~~~~~~~~~~~~~~~\nColumn specifiers define how columns are rendered and appear in the\ntable <<X69,cols attribute>>.  A column specifier consists of an\noptional column multiplier followed by optional alignment, width and\nstyle values and is formatted like:\n\n  [<multiplier>*][<align>][<width>][<style>]\n\n- All components are optional. The multiplier must be first and the\n  style last. The order of `<align>` or `<width>` is not important.\n- Column `<width>` can be either an integer proportional value (1...)\n  or a percentage (1%...100%). The default value is 1. To ensure\n  portability across different backends, there is no provision for\n  absolute column widths (not to be confused with output column width\n  <<X72,markup attributes>> which are available in both percentage and\n  absolute units).\n- The '<align>' column alignment specifier is formatted like:\n\n  [<horizontal>][.<vertical>]\n+\nWhere `<horizontal>` and `<vertical>` are one of the following\ncharacters: `<`, `^` or `>` which represent 'left', 'center' and\n'right' horizontal alignment or 'top', 'middle' and 'bottom' vertical\nalignment respectively.\n\n- A `<multiplier>` can be used to specify repeated columns e.g.\n  `cols=\"4*<\"` specifies four left-justified columns. The default\n  multiplier value is 1.\n- The `<style>` name specifies a <<X71,table style>> to used to markup\n  column cells (you can use the full style names if you wish but the\n  first letter is normally sufficient).\n- Column specific styles are not applied to header rows.\n\n[[X84]]\nCell Specifiers\n~~~~~~~~~~~~~~~\nCell specifiers allow individual cells in 'psv' formatted tables to be\nspanned, multiplied, aligned and styled.  Cell specifiers prefix 'psv'\n`|` delimiters and are formatted like:\n\n  [<span>*|+][<align>][<style>]\n\n- '<span>' specifies horizontal and vertical cell spans ('+' operator) or\n  the number of times the cell is replicated ('*' operator). '<span>'\n  is formatted like:\n\n  [<colspan>][.<rowspan>]\n+\nWhere `<colspan>` and `<rowspan>` are integers specifying the number of\ncolumns and rows to span.\n\n- `<align>` specifies horizontal and vertical cell alignment an is the\n  same as in <<X70,column specifiers>>.\n- A `<style>` value is the first letter of <<X71,table style>> name.\n\nFor example, the following 'psv' formatted cell will span two columns\nand the text will be centered and emphasized:\n\n  `2+^e| Cell text`\n\n[[X71]]\nTable styles\n~~~~~~~~~~~~\nTable styles can be applied to the entire table (by setting the\n'style' attribute in the table's attribute list) or on a per column\nbasis (by specifying the style in the table's <<X69,cols attribute>>).\nTable data can be formatted using the following predefined styles:\n\ndefault::\nThe default style: AsciiDoc inline text formatting; blank lines are\ntreated as paragraph breaks.\n\nemphasis::\nLike default but all text is emphasised.\n\nmonospaced::\nLike default but all text is in a monospaced font.\n\nstrong::\nLike default but all text is bold.\n\nheader::\nApply the same style as the table header. Normally used to create a\nvertical header in the first column.\n\nasciidoc::\nWith this style table cells can contain any of the AsciiDoc elements\nthat are allowed inside document sections. This style runs asciidoc(1)\nas a filter to process cell contents. See also <<X83,Docbook table\nlimitations>>.\n\nliteral::\nNo text formatting; monospaced font; all line breaks are retained\n(the same as the AsciiDoc <<X65,LiteralBlock>> element).\n\nverse::\nAll line breaks are retained (just like the AsciiDoc <<X94,verse\nparagraph style>>).\n\n[[X72]]\nMarkup attributes\n~~~~~~~~~~~~~~~~~\nAsciiDoc makes a number of attributes available to table markup\ntemplates and tags. Column specific attributes are available when\nsubstituting the 'colspec' cell data tags.\n\npageunits::\nDocBook backend only. Specifies table column absolute width units.\nDefaults to '*'.\n\npagewidth::\nDocBook backend only. The nominal output page width in 'pageunit'\nunits. Used to calculate CALS tables absolute column and table\nwidths. Defaults to '425'.\n\ntableabswidth::\nInteger value calculated from 'width' and 'pagewidth' attributes.\nIn 'pageunit' units.\n\ntablepcwidth::\nTable width expressed as a percentage of the available width. Integer\nvalue (0..100).\n\ncolabswidth::\nInteger value calculated from 'cols' column width, 'width' and\n'pagewidth' attributes.  In 'pageunit' units.\n\ncolpcwidth::\nColumn width expressed as a percentage of the table width. Integer\nvalue (0..100).\n\ncolcount::\nTotal number of table columns.\n\nrowcount::\nTotal number of table rows.\n\nhalign::\nHorizontal cell content alignment: 'left', 'right' or 'center'.\n\nvalign::\nVertical cell content alignment: 'top', 'bottom' or 'middle'.\n\ncolnumber, colstart::\nThe number of the leftmost column occupied by the cell (1...).\n\ncolend::\nThe number of the rightmost column occupied by the cell (1...).\n\ncolspan::\nNumber of columns the cell should span.\n\nrowspan::\nNumber of rows the cell should span (1...).\n\nmorerows::\nNumber of additional rows the cell should span (0...).\n\nNested tables\n~~~~~~~~~~~~~\nAn alternative 'psv' separator character '!' can be used (instead of\n'|') in nested tables. This allows a single level of table nesting.\nColumns containing nested tables must use the 'asciidoc' style. An\nexample can be found in `./examples/website/newtables.txt`.\n\n[[X83]]\nDocBook table limitations\n~~~~~~~~~~~~~~~~~~~~~~~~~\nFully implementing tables is not trivial, some DocBook toolchains do\nbetter than others.  AsciiDoc HTML table outputs are rendered\ncorrectly in all the popular browsers -- if your DocBook generated\ntables don't look right compare them with the output generated by the\nAsciiDoc 'xhtml11' backend or try a different DocBook toolchain.  Here\nis a list of things to be aware of:\n\n- Although nested tables are not legal in DocBook 4 the FOP and\n  dblatex toolchains will process them correctly.  If you use `a2x(1)`\n  you will need to include the `--no-xmllint` option to suppress\n  DocBook validation errors.\n+\nNOTE: In theory you can nest DocBook 4 tables one level using the\n'entrytbl' element, but not all toolchains process 'entrytbl'.\n\n- DocBook only allows a subset of block elements inside table cells so\n  not all AsciiDoc elements produce valid DocBook inside table cells.\n  If you get validation errors running `a2x(1)` try the `--no-xmllint`\n  option, toolchains will often process nested block elements such as\n  sidebar blocks and floating titles correctly even though, strictly\n  speaking, they are not legal.\n\n- Text formatting in cells using the 'monospaced' table style will\n  raise validation errors because the DocBook 'literal' element was\n  not designed to support formatted text (using the 'literal' element\n  is a kludge on the part of AsciiDoc as there is no easy way to set\n  the font style in DocBook.\n\n- Cell alignments are ignored for 'verse', 'literal' or 'asciidoc'\n  table styles.\n\n\n[[X1]]\nManpage Documents\n-----------------\nSooner or later, if you program in a UNIX environment, you're going\nto have to write a man page.\n\nBy observing a couple of additional conventions (detailed below) you\ncan write AsciiDoc files that will generate HTML and PDF man pages\nplus the native manpage roff format.  The easiest way to generate roff\nmanpages from AsciiDoc source is to use the a2x(1) command. The\nfollowing example generates a roff formatted manpage file called\n`asciidoc.1` (a2x(1) uses asciidoc(1) to convert `asciidoc.1.txt` to\nDocBook which it then converts to roff using DocBook XSL Stylesheets):\n\n  a2x --doctype manpage --format manpage asciidoc.1.txt\n\n.Viewing and printing manpage files\n**********************************************************************\nUse the `man(1)` command to view the manpage file:\n\n  $ man -l asciidoc.1\n\nTo print a high quality man page to a postscript printer:\n\n  $ man -l -Tps asciidoc.1 | lpr\n\nYou could also create a PDF version of the man page by converting\nPostScript to PDF using `ps2pdf(1)`:\n\n  $ man -l -Tps asciidoc.1 | ps2pdf - asciidoc.1.pdf\n\nThe `ps2pdf(1)` command is included in the Ghostscript distribution.\n**********************************************************************\n\nTo find out more about man pages view the `man(7)` manpage\n(`man 7 man` and `man man-pages` commands).\n\n\nDocument Header\n~~~~~~~~~~~~~~~\nA manpage document Header is mandatory. The title line contains the\nman page name followed immediately by the manual section number in\nbrackets, for example 'ASCIIDOC(1)'. The title name should not contain\nwhite space and the manual section number is a single digit optionally\nfollowed by a single character.\n\nThe NAME Section\n~~~~~~~~~~~~~~~~\nThe first manpage section is mandatory, must be titled 'NAME' and must\ncontain a single paragraph (usually a single line) consisting of a\nlist of one or more comma separated command name(s) separated from the\ncommand purpose by a dash character. The dash must have at least one\nwhite space character on either side. For example:\n\n  printf, fprintf, sprintf - print formatted output\n\nThe SYNOPSIS Section\n~~~~~~~~~~~~~~~~~~~~\nThe second manpage section is mandatory and must be titled 'SYNOPSIS'.\n\nrefmiscinfo attributes\n~~~~~~~~~~~~~~~~~~~~~~\nIn addition to the automatically created man page <<X60,intrinsic\nattributes>> you can assign DocBook\nhttp://www.docbook.org/tdg5/en/html/refmiscinfo.html[refmiscinfo]\nelement 'source', 'version' and 'manual' values using AsciiDoc\n`{mansource}`, `{manversion}` and `{manmanual}` attributes\nrespectively. This example is from the AsciiDoc header of a man page\nsource file:\n\n  :man source:   AsciiDoc\n  :man version:  {revnumber}\n  :man manual:   AsciiDoc Manual\n\n\n[[X78]]\nMathematical Formulas\n---------------------\nThe 'asciimath' and 'latexmath' <<X77,passthrough macros>> along with\n'asciimath' and 'latexmath'  <<X76,passthrough blocks>> provide a\n(backend dependent) mechanism for rendering mathematical formulas. You\ncan use the following math markups:\n\nNOTE: The 'latexmath' macro used to include 'LaTeX Math' in DocBook\noutputs is not the same as the 'latexmath' macro used to include\n'LaTeX MathML' in XHTML outputs.  'LaTeX Math' applies to DocBook\noutputs that are processed by <<X31,dblatex>> and is normally used to\ngenerate PDF files.  'LaTeXMathML' is very much a subset of 'LaTeX\nMath' and applies to XHTML documents.\n\nLaTeX Math\n~~~~~~~~~~\nftp://ftp.ams.org/pub/tex/doc/amsmath/short-math-guide.pdf[LaTeX\nmath] can be included in documents that are processed by\n<<X31,dblatex(1)>>.  Example inline formula:\n\n  latexmath:[$C = \\alpha + \\beta Y^{\\gamma} + \\epsilon$]\n\nFor more examples see the {website}[AsciiDoc website] or the\ndistributed `doc/latexmath.txt` file.\n\nASCIIMathML\n~~~~~~~~~~~\n/////////////////////////////////////////////////////////////////////\nThe older ASCIIMathML 1.47 version is used instead of version 2\nbecause:\n\n1. Version 2 doesn't work when embedded.\n2. Version 2 is much larger.\n/////////////////////////////////////////////////////////////////////\n\nhttp://www1.chapman.edu/~jipsen/mathml/asciimath.html[ASCIIMathML]\nformulas can be included in XHTML documents generated using the\n'xhtml11' and 'html5' backends. To enable ASCIIMathML support you must\ndefine the 'asciimath' attribute, for example using the `-a asciimath`\ncommand-line option.  Example inline formula:\n\n  asciimath:[`x/x={(1,if x!=0),(text{undefined},if x=0):}`]\n\nFor more examples see the {website}[AsciiDoc website] or the\ndistributed `doc/asciimathml.txt` file.\n\nLaTeXMathML\n~~~~~~~~~~~\n/////////////////////////////////////////////////////////////////////\nThere is an http://math.etsu.edu/LaTeXMathML/[extended LaTeXMathML\nversion] by Jeff Knisley, in addition to a JavaScript file it requires\nthe inclusion of a CSS file.\n/////////////////////////////////////////////////////////////////////\n\n'LaTeXMathML' allows LaTeX Math style formulas to be included in XHTML\ndocuments generated using the AsciiDoc 'xhtml11' and 'html5' backends.\nAsciiDoc uses the\nhttp://www.maths.nottingham.ac.uk/personal/drw/lm.html[original\nLaTeXMathML] by Douglas Woodall.  'LaTeXMathML' is derived from\nASCIIMathML and is for users who are more familiar with or prefer\nusing LaTeX math formulas (it recognizes a subset of LaTeX Math, the\ndifferences are documented on the 'LaTeXMathML' web page).  To enable\nLaTeXMathML support you must define the 'latexmath' attribute, for\nexample using the `-a latexmath` command-line option.  Example inline\nformula:\n\n  latexmath:[$\\sum_{n=1}^\\infty \\frac{1}{2^n}$]\n\nFor more examples see the {website}[AsciiDoc website] or the\ndistributed `doc/latexmathml.txt` file.\n\nMathML\n~~~~~~\nhttp://www.w3.org/Math/[MathML] is a low level XML markup for\nmathematics. AsciiDoc has no macros for MathML but users familiar with\nthis markup could use passthrough macros and passthrough blocks to\ninclude MathML in output documents.\n\n\n[[X7]]\nConfiguration Files\n-------------------\nAsciiDoc source file syntax and output file markup is largely\ncontrolled by a set of cascading, text based, configuration files.  At\nruntime The AsciiDoc default configuration files are combined with\noptional user and document specific configuration files.\n\nConfiguration File Format\n~~~~~~~~~~~~~~~~~~~~~~~~~\nConfiguration files contain named sections. Each section begins with a\nsection name in square brackets []. The section body consists of the\nlines of text between adjacent section headings.\n\n- Section names consist of one or more alphanumeric, underscore or\n  dash characters and cannot begin or end with a dash.\n- Lines starting with a '#' character are treated as comments and\n  ignored.\n- If the section name is prefixed with a '+' character then the\n  section contents is appended to the contents of an already existing\n  same-named section.\n- Otherwise same-named sections and section entries override\n  previously loaded sections and section entries (this is sometimes\n  referred to as 'cascading').  Consequently, downstream configuration\n  files need only contain those sections and section entries that need\n  to be overridden.\n\nTIP: When creating custom configuration files you only need to include\nthe sections and entries that differ from the default configuration.\n\nTIP: The best way to learn about configuration files is to read the\ndefault configuration files in the AsciiDoc distribution in\nconjunction with asciidoc(1) output files. You can view configuration\nfile load sequence by turning on the asciidoc(1) `-v` (`--verbose`)\ncommand-line option.\n\nAsciiDoc reserves the following section names for specific purposes:\n\nmiscellaneous::\n        Configuration options that don't belong anywhere else.\nattributes::\n        Attribute name/value entries.\nspecialcharacters::\n        Special characters reserved by the backend markup.\ntags::\n        Backend markup tags.\nquotes::\n        Definitions for quoted inline character formatting.\nspecialwords::\n        Lists of words and phrases singled out for special markup.\nreplacements, replacements2, replacements3::\n        Find and replace substitution definitions.\nspecialsections::\n        Used to single out special section names for specific markup.\nmacros::\n        Macro syntax definitions.\ntitles::\n        Heading, section and block title definitions.\nparadef-*::\n        Paragraph element definitions.\nblockdef-*::\n        DelimitedBlock element definitions.\nlistdef-*::\n        List element definitions.\nlisttags-*::\n        List element tag definitions.\ntabledef-*::\n        Table element definitions.\ntabletags-*::\n        Table element tag definitions.\n\nEach line of text in these sections is a 'section entry'. Section\nentries share the following syntax:\n\nname=value::\n        The entry value is set to value.\nname=::\n        The entry value is set to a zero length string.\nname!::\n        The entry is undefined (deleted from the configuration). This\n        syntax only applies to 'attributes' and 'miscellaneous'\n        sections.\n\n.Section entry behavior\n- All equals characters inside the `name` must be escaped with a\n  backslash character.\n- `name` and `value` are stripped of leading and trailing white space.\n- Attribute names, tag entry names and markup template section names\n  consist of one or more alphanumeric, underscore or dash characters.\n  Names should not begin or end with a dash.\n- A blank configuration file section (one without any entries) deletes\n  any preceding section with the same name (applies to non-markup\n  template sections).\n\n\nMiscellaneous section\n~~~~~~~~~~~~~~~~~~~~~\nThe optional `[miscellaneous]` section specifies the following\n`name=value` options:\n\nnewline::\n        Output file line termination characters. Can include any\n        valid Python string escape sequences. The default value is\n        `\\r\\n` (carriage return, line feed). Should not be quoted or\n        contain explicit spaces (use `\\x20` instead). For example:\n\n        $ asciidoc -a 'newline=\\n' -b docbook mydoc.txt\n\noutfilesuffix::\n        The default extension for the output file, for example\n        `outfilesuffix=.html`. Defaults to backend name.\ntabsize::\n        The number of spaces to expand tab characters, for example\n        `tabsize=4`. Defaults to 8. A 'tabsize' of zero suppresses tab\n        expansion (useful when piping included files through block\n        filters). Included files can override this option using the\n        'tabsize' attribute.\npagewidth, pageunits::\n        These global table related options are documented in the\n        <<X4,Table Configuration File Definitions>> sub-section.\n\nNOTE: `[miscellaneous]` configuration file entries can be set using\nthe asciidoc(1) `-a` (`--attribute`) command-line option.\n\nTitles section\n~~~~~~~~~~~~~~\nsectiontitle::\n        Two line section title pattern. The entry value is a Python\n        regular expression containing the named group 'title'.\n\nunderlines::\n        A comma separated list of document and section title underline\n        character pairs starting with the section level 0 and ending\n        with section level 4 underline. The default setting is:\n\n        underlines=\"==\",\"--\",\"~~\",\"^^\",\"++\"\n\nsect0...sect4::\n        One line section title patterns. The entry value is a Python\n        regular expression containing the named group 'title'.\n\nblocktitle::\n        <<X42,BlockTitle element>> pattern.  The entry value is a\n        Python regular expression containing the named group 'title'.\n\nsubs::\n        A comma separated list of substitutions that are performed on\n        the document header and section titles. Defaults to 'normal'\n        substitution.\n\nTags section\n~~~~~~~~~~~~\nThe `[tags]` section contains backend tag definitions (one per\nline). Tags are used to translate AsciiDoc elements to backend\nmarkup.\n\nAn AsciiDoc tag definition is formatted like\n`<tagname>=<starttag>|<endtag>`. For example:\n\n  emphasis=<em>|</em>\n\nIn this example asciidoc(1) replaces the | character with the\nemphasized text from the AsciiDoc input file and writes the result to\nthe output file.\n\nUse the `{brvbar}` attribute reference if you need to include a | pipe\ncharacter inside tag text.\n\nAttributes section\n~~~~~~~~~~~~~~~~~~\nThe optional `[attributes]` section contains predefined attributes.\n\nIf the attribute value requires leading or trailing spaces then the\ntext text should be enclosed in quotation mark (\") characters.\n\nTo delete a attribute insert a `name!` entry in a downstream\nconfiguration file or use the asciidoc(1) `--attribute name!`\ncommand-line option (an attribute name suffixed with a `!` character\ndeletes the attribute)\n\nSpecial Characters section\n~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe `[specialcharacters]` section specifies how to escape characters\nreserved by the backend markup. Each translation is specified on a\nsingle line formatted like:\n\n  <special_character>=<translated_characters>\n\nSpecial characters are normally confined to those that resolve\nmarkup ambiguity (in the case of HTML and XML markups the ampersand,\nless than and greater than characters).  The following example causes\nall occurrences of the `<` character to be replaced by `&lt;`.\n\n  <=&lt;\n\nQuoted Text section\n~~~~~~~~~~~~~~~~~~~\nQuoting is used primarily for text formatting.  The `[quotes]` section\ndefines AsciiDoc quoting characters and their corresponding backend\nmarkup tags.  Each section entry value is the name of a of a `[tags]`\nsection entry. The entry name is the character (or characters) that\nquote the text.  The following examples are taken from AsciiDoc\nconfiguration files:\n\n  [quotes]\n  _=emphasis\n\n  [tags]\n  emphasis=<em>|</em>\n\nYou can specify the left and right quote strings separately by\nseparating them with a | character, for example:\n\n  ``|''=quoted\n\nOmitting the tag will disable quoting, for example, if you don't want\nsuperscripts or subscripts put the following in a custom configuration\nfile or edit the global `asciidoc.conf` configuration file:\n\n  [quotes]\n  ^=\n  ~=\n\n<<X52,Unconstrained quotes>> are differentiated from constrained\nquotes by prefixing the tag name with a hash character, for example:\n\n  __=#emphasis\n\n.Quoted text behavior\n- Quote characters must be non-alphanumeric.\n- To minimize quoting ambiguity try not to use the same quote\n  characters in different quote types.\n\nSpecial Words section\n~~~~~~~~~~~~~~~~~~~~~\nThe `[specialwords]` section is used to single out words and phrases\nthat you want to consistently format in some way throughout your\ndocument without having to repeatedly specify the markup. The name of\neach entry corresponds to a markup template section and the entry\nvalue consists of a list of words and phrases to be marked up. For\nexample:\n\n  [specialwords]\n  strongwords=NOTE IMPORTANT\n\n  [strongwords]\n  <strong>{words}</strong>\n\nThe examples specifies that any occurrence of `NOTE` or `IMPORTANT`\nshould appear in a bold font.\n\nWords and word phrases are treated as Python regular expressions: for\nexample, the word `^NOTE` would only match `NOTE` if appeared at\nthe start of a line.\n\nAsciiDoc comes with three built-in Special Word types:\n'emphasizedwords', 'monospacedwords' and 'strongwords', each has a\ncorresponding (backend specific) markup template section. Edit the\nconfiguration files to customize existing Special Words and to add new\nones.\n\n.Special word behavior\n- Word list entries must be separated by space characters.\n- Word list entries with embedded spaces should be enclosed in quotation (\")\n  characters.\n- A `[specialwords]` section entry of the form\n  +name=word1{nbsp}[word2...]+ adds words to existing `name` entries.\n- A `[specialwords]` section entry of the form `name` undefines\n  (deletes) all existing `name` words.\n- Since word list entries are processed as Python regular expressions\n  you need to be careful to escape regular expression special\n  characters.\n- By default Special Words are substituted before Inline Macros, this\n  may lead to undesirable consequences. For example the special word\n  `foobar` would be expanded inside the macro call\n  `http://www.foobar.com[]`.  A possible solution is to emphasize\n  whole words only by defining the word using regular expression\n  characters, for example `\\bfoobar\\b`.\n- If the first matched character of a special word is a backslash then\n  the remaining characters are output without markup i.e. the\n  backslash can be used to escape special word markup.  For example\n  the special word `\\\\?\\b[Tt]en\\b` will mark up the words `Ten` and\n  `ten` only if they are not preceded by a backslash.\n\n[[X10]]\nReplacements section\n~~~~~~~~~~~~~~~~~~~~\n`[replacements]`, `[replacements2]` and `[replacements3]`\nconfiguration file entries specify find and replace text and are\nformatted like:\n\n  <find_pattern>=<replacement_text>\n\nThe find text can be a Python regular expression; the replace text can\ncontain Python regular expression group references.\n\nUse Replacement shortcuts for often used macro references, for\nexample (the second replacement allows us to backslash escape the\nmacro name):\n\n  NEW!=image:./images/smallnew.png[New!]\n  \\\\NEW!=NEW!\n\nThe only difference between the three replacement types is how they\nare applied. By default 'replacements' and 'replacement2' are applied\nin <<X102,normal>> substitution contexts whereas 'replacements3' needs\nto be configured explicitly and should only be used in backend\nconfiguration files.\n\n.Replacement behavior\n- The built-in replacements can be escaped with a backslash.\n- If the find or replace text has leading or trailing spaces then the\n  text should be enclosed in quotation (\") characters.\n- Since the find text is processed as a regular expression you need to\n  be careful to escape regular expression special characters.\n- Replacements are performed in the same order they appear in the\n  configuration file replacements section.\n\nMarkup Template Sections\n~~~~~~~~~~~~~~~~~~~~~~~~\nMarkup template sections supply backend markup for translating\nAsciiDoc elements.  Since the text is normally backend dependent\nyou'll find these sections in the backend specific configuration\nfiles. Template sections differ from other sections in that they\ncontain a single block of text instead of per line 'name=value'\nentries. A markup template section body can contain:\n\n- Attribute references\n- System macro calls.\n- A document content placeholder\n\nThe document content placeholder is a single | character and is\nreplaced by text from the source element.  Use the `{brvbar}`\nattribute reference if you need a literal | character in the template.\n\n[[X27]]\nConfiguration file names, precedence and locations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nConfiguration files have a `.conf` file name extension; they are\nloaded from the following locations:\n\n1. The directory containing the asciidoc executable.\n2. If there is no `asciidoc.conf` file in the directory containing the\n   asciidoc executable then load from the global configuration\n   directory (normally `/etc/asciidoc` or `/usr/local/etc/asciidoc`)\n   i.e. the global configuration files directory is skipped if\n   AsciiDoc configuration files are installed in the same directory as\n   the asciidoc executable. This allows both a system wide copy and\n   multiple local copies of AsciiDoc to coexist on the same host PC.\n3. The user's `$HOME/.asciidoc` directory (if it exists).\n4. The directory containing the AsciiDoc source file.\n5. Explicit configuration files specified using:\n   - The `conf-files` attribute (one or more file names separated by a\n     `|` character). These files are loaded in the order they are\n     specified and prior to files specified using the `--conf-file`\n     command-line option.\n   - The asciidoc(1) `--conf-file`) command-line option.  The\n     `--conf-file` option can be specified multiple times, in which\n     case configuration files will be processed in the same order they\n     appear on the command-line.\n6. <<X100,Backend plugin>> configuration files are loaded from\n   subdirectories named like `backends/<backend>` in locations 1, 2\n   and 3.\n7. <<X59,Filter>> configuration files are loaded from subdirectories\n   named like `filters/<filter>` in locations 1, 2 and 3.\n\nConfiguration files from the above locations are loaded in the\nfollowing order:\n\n- The `[attributes]` section only from:\n  * `asciidoc.conf` in location 3\n  * Files from location 5.\n+\nThis first pass makes locally set attributes available in the global\n`asciidoc.conf` file.\n\n- `asciidoc.conf` from locations 1, 2, 3.\n- 'attributes', 'titles' and 'specialcharacters' sections from the\n  `asciidoc.conf` in location 4.\n- The document header is parsed at this point and we can assume the\n  'backend' and 'doctype' have now been defined.\n- Backend plugin `<backend>.conf` and `<backend>-<doctype>.conf` files\n  from locations 6.  If a backend plugin is not found then try\n  locations 1, 2 and 3 for `<backend>.conf` and\n  `<backend>-<doctype>.conf` backend configuration files.\n- Filter conf files from locations 7.\n- `lang-<lang>.conf` from locations 1, 2, 3.\n- `asciidoc.conf` from location 4.\n- `<backend>.conf` and `<backend>-<doctype>.conf` from location 4.\n- Filter conf files from location 4.\n- `<docfile>.conf` and `<docfile>-<backend>.conf` from location 4.\n- Configuration files from location 5.\n\nWhere:\n\n- `<backend>` and `<doctype>` are values specified by the asciidoc(1)\n  `-b` (`--backend`) and `-d` (`--doctype`) command-line options.\n- `<infile>` is the path name of the AsciiDoc input file without the\n  file name extension.\n- `<lang>` is a two letter country code set by the the AsciiDoc 'lang'\n  attribute.\n\n[NOTE]\n=====================================================================\nThe backend and language global configuration files are loaded *after*\nthe header has been parsed.  This means that you can set most\nattributes in the document header. Here's an example header:\n\n  Life's Mysteries\n  ================\n  :author: Hu Nose\n  :doctype: book\n  :toc:\n  :icons:\n  :data-uri:\n  :lang: en\n  :encoding: iso-8859-1\n\nAttributes set in the document header take precedence over\nconfiguration file attributes.\n\n=====================================================================\n\nTIP: Use the asciidoc(1) `-v` (`--verbose`) command-line option to see\nwhich configuration files are loaded and the order in which they are\nloaded.\n\n\nDocument Attributes\n-------------------\nA document attribute is comprised of a 'name' and a textual 'value'\nand is used for textual substitution in AsciiDoc documents and\nconfiguration files. An attribute reference (an attribute name\nenclosed in braces) is replaced by the corresponding attribute\nvalue. Attribute names are case insensitive and can only contain\nalphanumeric, dash and underscore characters.\n\nThere are four sources of document attributes (from highest to lowest\nprecedence):\n\n- Command-line attributes.\n- AttributeEntry, AttributeList, Macro and BlockId elements.\n- Configuration file `[attributes]` sections.\n- Intrinsic attributes.\n\nWithin each of these divisions the last processed entry takes\nprecedence.\n\nNOTE: If an attribute is not defined then the line containing the\nattribute reference is dropped. This property is used extensively in\nAsciiDoc configuration files to facilitate conditional markup\ngeneration.\n\n\n[[X18]]\nAttribute Entries\n-----------------\nThe `AttributeEntry` block element allows document attributes to be\nassigned within an AsciiDoc document. Attribute entries are added to\nthe global document attributes dictionary. The attribute name/value\nsyntax is a single line like:\n\n  :<name>: <value>\n\nFor example:\n\n  :Author Initials: JB\n\nThis will set an attribute reference `{authorinitials}` to the value\n'JB' in the current document.\n\nTo delete (undefine) an attribute use the following syntax:\n\n  :<name>!:\n\n.AttributeEntry behavior\n- The attribute entry line begins with colon -- no white space allowed\n  in left margin.\n- AsciiDoc converts the `<name>` to a legal attribute name (lower\n  case, alphanumeric, dash and underscore characters only -- all other\n  characters deleted). This allows more human friendly text to be\n  used.\n- Leading and trailing white space is stripped from the `<value>`.\n- Lines ending in a space followed by a plus character are continued\n  to the next line, for example:\n\n  :description: AsciiDoc is a text document format for writing notes, +\n                documentation, articles, books, slideshows, web pages +\n                and man pages.\n\n- If the `<value>` is blank then the corresponding attribute value is\n  set to an empty string.\n- Attribute references contained in the entry `<value>` will be\n  expanded.\n- By default AttributeEntry values are substituted for\n  `specialcharacters` and `attributes` (see above), if you want to\n  change or disable AttributeEntry substitution use the <<X77,pass:[]\n  inline macro>> syntax.\n- Attribute entries in the document Header are available for header\n  markup template substitution.\n- Attribute elements override configuration file and intrinsic\n  attributes but do not override command-line attributes.\n\nHere are some more attribute entry examples:\n\n---------------------------------------------------------------------\nAsciiDoc User Manual\n====================\n:author:    Stuart Rackham\n:email:     srackham@gmail.com\n:revdate:   April 23, 2004\n:revnumber: 5.1.1\n---------------------------------------------------------------------\n\nWhich creates these attributes:\n\n  {author}, {firstname}, {lastname}, {authorinitials}, {email},\n  {revdate}, {revnumber}\n\nThe previous example is equivalent to this <<X95,document header>>:\n\n---------------------------------------------------------------------\nAsciiDoc User Manual\n====================\nStuart Rackham <srackham@gmail.com>\n5.1.1, April 23, 2004\n---------------------------------------------------------------------\n\nSetting configuration entries\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nA variant of the Attribute Entry syntax allows configuration file\nsection entries and markup template sections to be set from within an\nAsciiDoc document:\n\n  :<section_name>.[<entry_name>]: <entry_value>\n\nWhere `<section_name>` is the configuration section name,\n`<entry_name>` is the name of the entry and `<entry_value>` is the\noptional entry value. This example sets the default labeled list\nstyle to 'horizontal':\n\n  :listdef-labeled.style: horizontal\n\nIt is exactly equivalent to a configuration file containing:\n\n  [listdef-labeled]\n  style=horizontal\n\n- If the `<entry_name>` is omitted then the entire section is\n  substituted with the `<entry_value>`. This feature should only be\n  used to set markup template sections. The following example sets the\n  'xref2' inline macro markup template:\n\n  :xref2-inlinemacro.: <a href=\"#{1}\">{2?{2}}</a>\n\n- No substitution is performed on configuration file attribute entries\n  and they cannot be undefined.\n- This feature can only be used in attribute entries -- configuration\n  attributes cannot be set using the asciidoc(1) command `--attribute`\n  option.\n\n[[X62]]\n.Attribute entries promote clarity and eliminate repetition\n*********************************************************************\nURLs and file names in AsciiDoc macros are often quite long -- they\nbreak paragraph flow and readability suffers.  The problem is\ncompounded by redundancy if the same name is used repeatedly.\nAttribute entries can be used to make your documents easier to read\nand write, here are some examples:\n\n  :1:         http://freshmeat.net/projects/asciidoc/\n  :homepage:  http://methods.co.nz/asciidoc/[AsciiDoc home page]\n  :new:       image:./images/smallnew.png[]\n  :footnote1: footnote:[A meaningless latin term]\n\n  Using previously defined attributes: See the {1}[Freshmeat summary]\n  or the {homepage} for something new {new}. Lorem ispum {footnote1}.\n\n.Note\n- The attribute entry definition must precede it's usage.\n- You are not limited to URLs or file names, entire macro calls or\n  arbitrary lines of text can be abbreviated.\n- Shared attributes entries could be grouped into a separate file and\n  <<X63,included>> in multiple documents.\n*********************************************************************\n\n\n[[X21]]\nAttribute Lists\n---------------\n- An attribute list is a comma separated list of attribute values.\n- The entire list is enclosed in square brackets.\n- Attribute lists are used to pass parameters to macros, blocks (using\n  the <<X79,AttributeList element>>) and inline quotes.\n\nThe list consists of zero or more positional attribute values followed\nby zero or more named attribute values.  Here are three examples: a\nsingle unquoted positional attribute; three unquoted positional\nattribute values; one positional attribute followed by two named\nattributes; the unquoted attribute value in the final example contains\ncomma (`&#44;`) and double-quote (`&#34;`) character entities:\n\n  [Hello]\n  [quote, Bertrand Russell, The World of Mathematics (1956)]\n  [\"22 times\", backcolor=\"#0e0e0e\", options=\"noborders,wide\"]\n  [A footnote&#44; &#34;with an image&#34; image:smallnew.png[]]\n\n.Attribute list behavior\n- If one or more attribute values contains a comma the all string\n  values must be quoted (enclosed in double quotation mark\n  characters).\n- If the list contains any named or quoted attributes then all string\n  attribute values must be quoted.\n- To include a double quotation mark (\") character in a quoted\n  attribute value the the quotation mark must be escaped with a\n  backslash.\n- List attributes take precedence over existing attributes.\n- List attributes can only be referenced in configuration file markup\n  templates and tags, they are not available elsewhere in the\n  document.\n- Setting a named attribute to `None` undefines the attribute.\n- Positional attributes are referred to as `{1}`,`{2}`,`{3}`,...\n- Attribute `{0}` refers to the entire list (excluding the enclosing\n  square brackets).\n- Named attribute names cannot contain dash characters.\n\n[[X75]]\nOptions attribute\n~~~~~~~~~~~~~~~~~\nIf the attribute list contains an attribute named `options` it is\nprocessed as a comma separated list of option names:\n\n- Each name generates an attribute named like `<option>-option` (where\n  `<option>` is the option name) with an empty string value.  For\n  example `[options=\"opt1,opt2,opt3\"]` is equivalent to setting the\n  following three attributes\n  `[opt1-option=\"\",opt2-option=\"\",opt2-option=\"\"]`.\n- If you define a an option attribute globally (for example with an\n  <<X18,attribute entry>>) then it will apply to all elements in the\n  document.\n- AsciiDoc implements a number of predefined options which are listed\n  in the <<X74,Attribute Options appendix>>.\n\nMacro Attribute lists\n~~~~~~~~~~~~~~~~~~~~~\nMacros calls are suffixed with an attribute list. The list may be\nempty but it cannot be omitted. List entries are used to pass\nattribute values to macro markup templates.\n\n\nAttribute References\n--------------------\nAn attribute reference is an attribute name (possibly followed by an\nadditional parameters) enclosed in curly braces.  When an attribute\nreference is encountered it is evaluated and replaced by its\ncorresponding text value.  If the attribute is undefined the line\ncontaining the attribute is dropped.\n\nThere are three types of attribute reference: 'Simple', 'Conditional'\nand 'System'.\n\n.Attribute reference evaluation\n- You can suppress attribute reference expansion by placing a\n  backslash character immediately in front of the opening brace\n  character.\n- By default attribute references are not expanded in\n  'LiteralParagraphs', 'ListingBlocks' or 'LiteralBlocks'.\n- Attribute substitution proceeds line by line in reverse line order.\n- Attribute reference evaluation is performed in the following order:\n  'Simple' then 'Conditional' and finally 'System'.\n\nSimple Attributes References\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSimple attribute references take the form `{<name>}`. If the\nattribute name is defined its text value is substituted otherwise the\nline containing the reference is dropped from the output.\n\nConditional Attribute References\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nAdditional parameters are used in conjunction with attribute names to\ncalculate a substitution value. Conditional attribute references take\nthe following forms:\n\n`{<names>=<value>}`::\n        `<value>` is substituted if the attribute `<names>` is\n        undefined otherwise its value is substituted. `<value>` can\n        contain simple attribute references.\n\n`{<names>?<value>}`::\n        `<value>` is substituted if the attribute `<names>` is defined\n        otherwise an empty string is substituted.  `<value>` can\n        contain simple attribute references.\n\n`{<names>!<value>}`::\n        `<value>` is substituted if the attribute `<names>` is\n        undefined otherwise an empty string is substituted.  `<value>`\n        can contain simple attribute references.\n\n`{<names>#<value>}`::\n        `<value>` is substituted if the attribute `<names>` is defined\n        otherwise the undefined attribute entry causes the containing\n        line to be dropped.  `<value>` can contain simple attribute\n        references.\n\n`{<names>%<value>}`::\n        `<value>` is substituted if the attribute `<names>` is not\n        defined otherwise the containing line is dropped.  `<value>`\n        can contain simple attribute references.\n\n`{<names>@<regexp>:<value1>[:<value2>]}`::\n        `<value1>` is substituted if the value of attribute `<names>`\n        matches the regular expression `<regexp>` otherwise `<value2>`\n        is substituted. If attribute `<names>` is not defined the\n        containing line is dropped. If `<value2>` is omitted an empty\n        string is assumed. The values and the regular expression can\n        contain simple attribute references.  To embed colons in the\n        values or the regular expression escape them with backslashes.\n\n`{<names>$<regexp>:<value1>[:<value2>]}`::\n        Same behavior as the previous ternary attribute except for\n        the following cases:\n\n        `{<names>$<regexp>:<value>}`;;\n                Substitutes `<value>` if `<names>` matches `<regexp>`\n                otherwise the result is undefined and the containing\n                line is dropped.\n\n        `{<names>$<regexp>::<value>}`;;\n                Substitutes `<value>` if `<names>` does not match\n                `<regexp>` otherwise the result is undefined and the\n                containing line is dropped.\n\nThe attribute `<names>` parameter normally consists of a single\nattribute name but it can be any one of the following:\n\n- A single attribute name which evaluates to the attributes value.\n- Multiple ',' separated attribute names which evaluates to an empty\n  string if one or more of the attributes is defined, otherwise it's\n  value is undefined.\n- Multiple '+' separated attribute names which evaluates to an empty\n  string if all of the attributes are defined, otherwise it's value is\n  undefined.\n\nConditional attributes with single attribute names are evaluated first\nso they can be used inside the multi-attribute conditional `<value>`.\n\nConditional attribute examples\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nConditional attributes are mainly used in AsciiDoc configuration\nfiles -- see the distribution `.conf` files for examples.\n\nAttribute equality test::\n  If `{backend}` is 'docbook45' or 'xhtml11' the example evaluates to\n  ``DocBook 4.5 or XHTML 1.1 backend'' otherwise it evaluates to\n  ``some other backend'':\n\n  {backend@docbook45|xhtml11:DocBook 4.5 or XHTML 1.1 backend:some other backend}\n\nAttribute value map::\n  This example maps the `frame` attribute values [`topbot`, `all`,\n  `none`, `sides`] to [`hsides`, `border`, `void`, `vsides`]:\n\n  {frame@topbot:hsides}{frame@all:border}{frame@none:void}{frame@sides:vsides}\n\n\n[[X24]]\nSystem Attribute References\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSystem attribute references generate the attribute text value by\nexecuting a predefined action that is parametrized by one or more\narguments. The syntax is `{<action>:<arguments>}`.\n\n`{counter:<attrname>[:<seed>]}`::\n        Increments the document attribute (if the attribute is\n        undefined it is set to `1`). Returns the new attribute value.\n\n        - Counters generate global (document wide) attributes.\n        - The optional `<seed>` specifies the counter's initial value;\n          it can be a number or a single letter; defaults to '1'.\n        - `<seed>` can contain simple and conditional attribute\n          references.\n        - The 'counter' system attribute will not be executed if the\n          containing line is dropped by the prior evaluation of an\n          undefined attribute.\n\n`{counter2:<attrname>[:<seed>]}`::\n        Same as `counter` except the it always returns a blank string.\n\n`{eval:<expression>}`::\n        Substitutes the result of the Python `<expression>`.\n\n        - If `<expression>` evaluates to `None` or `False` the\n          reference is deemed undefined and the line containing the\n          reference is dropped from the output.\n        - If the expression evaluates to `True` the attribute\n          evaluates to an empty string.\n        - `<expression>` can contain simple and conditional attribute\n          references.\n        - The 'eval' system attribute can be nested inside other\n          system attributes.\n\n`{eval3:<command>}`::\n        Passthrough version of `{eval:<expression>}` -- the generated\n        output is written directly to the output without any further\n        substitutions.\n\n`{include:<filename>}`::\n        Substitutes contents of the file named `<filename>`.\n\n        - The included file is read at the time of attribute\n          substitution.\n        - If the file does not exist a warning is emitted and the line\n          containing the reference is dropped from the output file.\n        - Tabs are expanded based on the current 'tabsize' attribute\n          value.\n\n`{set:<attrname>[!][:<value>]}`::\n        Sets or unsets document attribute. Normally only used in\n        configuration file markup templates (use\n        <<X18,AttributeEntries>> in AsciiDoc documents).\n\n        - If the attribute name is followed by an exclamation mark\n          the attribute becomes undefined.\n        - If `<value>` is omitted the attribute is set to a blank\n          string.\n        - `<value>` can contain simple and conditional attribute\n          references.\n        - Returns a blank string unless the attribute is undefined in\n          which case the return value is undefined and the enclosing\n          line will be dropped.\n\n`{set2:<attrname>[!][:<value>]}`::\n        Same as `set` except that the attribute scope is local to the\n        template.\n\n`{sys:<command>}`::\n        Substitutes the stdout generated by the execution of the shell\n        `<command>`.\n\n`{sys2:<command>}`::\n        Substitutes the stdout and stderr generated by the execution\n        of the shell `<command>`.\n\n`{sys3:<command>}`::\n        Passthrough version of `{sys:<command>}` -- the generated\n        output is written directly to the output without any further\n        substitutions.\n\n`{template:<template>}`::\n        Substitutes the contents of the configuration file section\n        named `<template>`. Attribute references contained in the\n        template are substituted.\n\n.System reference behavior\n- System attribute arguments can contain non-system attribute\n  references.\n- Closing brace characters inside system attribute arguments must be\n  escaped with a backslash.\n\n[[X60]]\nIntrinsic Attributes\n--------------------\nIntrinsic attributes are simple attributes that are created\nautomatically from: AsciiDoc document header parameters; asciidoc(1)\ncommand-line arguments; attributes defined in the default\nconfiguration files; the execution context.  Here's the list of\npredefined intrinsic attributes:\n\n  {amp}                 ampersand (&) character entity\n  {asciidoc-args}       used to pass inherited arguments to asciidoc filters\n  {asciidoc-confdir}    the asciidoc(1) global configuration directory\n  {asciidoc-dir}        the asciidoc(1) application directory\n  {asciidoc-file}       the full path name of the asciidoc(1) script\n  {asciidoc-version}    the version of asciidoc(1)\n  {author}              author's full name\n  {authored}            empty string '' if {author} or {email} defined,\n  {authorinitials}      author initials (from document header)\n  {backend-<backend>}   empty string ''\n  {<backend>-<doctype>} empty string ''\n  {backend}             document backend specified by `-b` option\n  {backend-confdir}     the directory containing the <backend>.conf file\n  {backslash}           backslash character\n  {basebackend-<base>}  empty string ''\n  {basebackend}         html or docbook\n  {blockname}           current block name (note 8).\n  {brvbar}              broken vertical bar (|) character\n  {docdate}             document last modified date\n  {docdir}              document input directory name  (note 5)\n  {docfile}             document file name  (note 5)\n  {docname}             document file name without extension (note 6)\n  {doctime}             document last modified time\n  {doctitle}            document title (from document header)\n  {doctype-<doctype>}   empty string ''\n  {doctype}             document type specified by `-d` option\n  {email}               author's email address (from document header)\n  {empty}               empty string ''\n  {encoding}            specifies input and output encoding\n  {filetype-<fileext>}  empty string ''\n  {filetype}            output file name file extension\n  {firstname}           author first name (from document header)\n  {gt}                  greater than (>) character entity\n  {id}                  running block id generated by BlockId elements\n  {indir}               input file directory name (note 2,5)\n  {infile}              input file name (note 2,5)\n  {lastname}            author last name (from document header)\n  {ldquo}               Left double quote character (note 7)\n  {level}               title level 1..4 (in section titles)\n  {listindex}           the list index (1..) of the most recent list item\n  {localdate}           the current date\n  {localtime}           the current time\n  {lsquo}               Left single quote character (note 7)\n  {lt}                  less than (<) character entity\n  {manname}             manpage name (defined in NAME section)\n  {manpurpose}          manpage (defined in NAME section)\n  {mantitle}            document title minus the manpage volume number\n  {manvolnum}           manpage volume number (1..8) (from document header)\n  {middlename}          author middle name (from document header)\n  {nbsp}                non-breaking space character entity\n  {notitle}             do not display the document title\n  {outdir}              document output directory name (note 2)\n  {outfile}             output file name (note 2)\n  {python}              the full path name of the Python interpreter executable\n  {rdquo}               Right double quote character (note 7)\n  {reftext}             running block xreflabel generated by BlockId elements\n  {revdate}             document revision date (from document header)\n  {revnumber}           document revision number (from document header)\n  {rsquo}               Right single quote character (note 7)\n  {sectnum}             formatted section number (in section titles)\n  {sp}                  space character\n  {showcomments}        send comment lines to the output\n  {title}               section title (in titled elements)\n  {two-colons}          Two colon characters\n  {two-semicolons}      Two semicolon characters\n  {user-dir}            the ~/.asciidoc directory (if it exists)\n  {verbose}             defined as '' if --verbose command option specified\n  {wj}                  Word-joiner\n  {zwsp}                Zero-width space character entity\n\n[NOTE]\n======\n1. Intrinsic attributes are global so avoid defining custom attributes\n   with the same names.\n2. `{outfile}`, `{outdir}`, `{infile}`, `{indir}` attributes are\n   effectively read-only (you can set them but it won't affect the\n   input or output file paths).\n3.  See also the <<X88,Backend Attributes>> section for attributes\n    that relate to AsciiDoc XHTML file generation.\n4. The entries that translate to blank strings are designed to be used\n   for conditional text inclusion. You can also use the `ifdef`,\n   `ifndef` and `endif` System macros for conditional inclusion.\n   footnote:[Conditional inclusion using `ifdef` and `ifndef` macros\n   differs from attribute conditional inclusion in that the former\n   occurs when the file is read while the latter occurs when the\n   contents are written.]\n5. `{docfile}` and `{docdir}` refer to root document specified on the\n   asciidoc(1) command-line; `{infile}` and `{indir}` refer to the\n   current input file which may be the root document or an included\n   file. When the input is being read from the standard input\n   (`stdin`) these attributes are undefined.\n6. If the input file is the standard input and the output file is not\n   the standard output then `{docname}` is the output file name sans\n   file extension.\n7. See\n   http://en.wikipedia.org/wiki/Non-English_usage_of_quotation_marks[non-English\n   usage of quotation marks].\n8. The `{blockname}` attribute identifies the style of the current\n   block. It applies to delimited blocks, lists and tables. Here is a\n   list of `{blockname}` values (does not include filters or custom\n   block and style names):\n\n   delimited blocks:: comment, sidebar, open, pass, literal, verse,\n   listing, quote, example, note, tip, important, caution, warning,\n   abstract, partintro\n\n   lists:: arabic, loweralpha, upperalpha, lowerroman, upperroman,\n   labeled, labeled3, labeled4, qanda, horizontal, bibliography,\n   glossary\n\n   tables:: table\n\n======\n\n\n[[X73]]\nBlock Element Definitions\n-------------------------\nThe syntax and behavior of Paragraph, DelimitedBlock, List and Table\nblock elements is determined by block definitions contained in\n<<X7,AsciiDoc configuration file>> sections.\n\nEach definition consists of a section title followed by one or more\nsection entries. Each entry defines a block parameter controlling some\naspect of the block's behavior. Here's an example:\n\n---------------------------------------------------------------------\n[blockdef-listing]\ndelimiter=^-{4,}$\ntemplate=listingblock\npresubs=specialcharacters,callouts\n---------------------------------------------------------------------\n\nConfiguration file block definition sections are processed\nincrementally after each configuration file is loaded. Block\ndefinition section entries are merged into the block definition, this\nallows block parameters to be overridden and extended by later\n<<X27,loading configuration files>>.\n\nAsciiDoc Paragraph, DelimitedBlock, List and Table block elements\nshare a common subset of configuration file parameters:\n\ndelimiter::\n  A Python regular expression that matches the first line of a block\n  element -- in the case of DelimitedBlocks and Tables it also matches\n  the last line.\n\ntemplate::\n  The name of the configuration file markup template section that will\n  envelope the block contents. The pipe ('|') character is substituted\n  for the block contents. List elements use a set of (list specific)\n  tag parameters instead of a single template. The template name can\n  contain attribute references allowing dynamic template selection a\n  the time of template substitution.\n\noptions::\n  A comma delimited list of element specific option names. In addition\n  to being used internally, options are available during markup tag\n  and template substitution as attributes with an empty string value\n  named like `<option>-option` (where `<option>` is the option name).\n  See <<X74,attribute options>> for a complete list of available\n  options.\n\nsubs, presubs, postsubs::\n  * 'presubs' and 'postsubs' are lists of comma separated substitutions that are\n    performed on the block contents. 'presubs' is applied first,\n    'postsubs' (if specified) second.\n\n  * 'subs' is an alias for 'presubs'.\n\n  * If a 'filter' is allowed (Paragraphs, DelimitedBlocks and Tables)\n    and has been specified then 'presubs' and 'postsubs' substitutions\n    are performed before and after the filter is run respectively.\n\n  * Allowed values: 'specialcharacters', 'quotes', 'specialwords',\n    'replacements', 'macros', 'attributes', 'callouts'.\n\n  * [[X102]]The following composite values are also allowed:\n\n    'none';;\n        No substitutions.\n    'normal';;\n        The following substitutions in the following order:\n        'specialcharacters', 'quotes', 'attributes', 'specialwords',\n        'replacements', 'macros', 'replacements2'.\n    'verbatim';;\n        The following substitutions in the following order:\n        'specialcharacters' and 'callouts'.\n\n  * 'normal' and 'verbatim' substitutions can be redefined by with\n    `subsnormal` and `subsverbatim` entries in a configuration file\n    `[miscellaneous]` section.\n\n  * The substitutions are processed in the order in which they are\n    listed and can appear more than once.\n\nfilter::\n  This optional entry specifies an executable shell command for\n  processing block content (Paragraphs, DelimitedBlocks and Tables).\n  The filter command can contain attribute references.\n\nposattrs::\n  Optional comma separated list of positional attribute names. This\n  list maps positional attributes (in the block's <<X21,attribute\n  list>>) to named block attributes. The following example, from the\n  QuoteBlock definition, maps the first and section positional\n  attributes:\n\n  posattrs=attribution,citetitle\n\nstyle::\n  This optional parameter specifies the default style name.\n\n\n<stylename>-style::\n  Optional style definition (see <<X23,Styles>> below).\n\nThe following block parameters behave like document attributes and can\nbe set in block attribute lists and style definitions: 'template',\n'options', 'subs', 'presubs', 'postsubs', 'filter'.\n\n[[X23]]\nStyles\n~~~~~~\nA style is a set of block parameter bundled as a single named\nparameter. The following example defines a style named 'verbatim':\n\n  verbatim-style=template=\"literalblock\",subs=\"verbatim\"\n\nIf a block's <<X21,attribute list>> contains a 'style' attribute then\nthe corresponding style parameters are be merged into the default\nblock definition parameters.\n\n- All style parameter names must be suffixed with `-style` and the\n  style parameter value is in the form of a list of <<X21,named\n  attributes>>.\n- The 'template' style parameter is mandatory, other parameters can be\n  omitted in which case they inherit their values from the default\n  block definition parameters.\n- Multi-item style parameters ('subs','presubs','postsubs','posattrs')\n  must be specified using Python tuple syntax (rather than a simple\n  list of values as they in separate entries) e.g.\n  `postsubs=(\"callouts\",)` not `postsubs=\"callouts\"`.\n\nParagraphs\n~~~~~~~~~~\nParagraph translation is controlled by `[paradef-*]` configuration\nfile section entries. Users can define new types of paragraphs and\nmodify the behavior of existing types by editing AsciiDoc\nconfiguration files.\n\nHere is the shipped Default paragraph definition:\n\n--------------------------------------------------------------------\n[paradef-default]\ndelimiter=(?P<text>\\S.*)\ntemplate=paragraph\n--------------------------------------------------------------------\n\nThe normal paragraph definition has a couple of special properties:\n\n1. It must exist and be defined in a configuration file section named\n   `[paradef-default]`.\n2. Irrespective of its position in the configuration files default\n   paragraph document matches are attempted only after trying all\n   other paragraph types.\n\nParagraph specific block parameter notes:\n\ndelimiter::\n  This regular expression must contain the named group 'text' which\n  matches the text on the first line.  Paragraphs are terminated by a\n  blank line, the end of file, or the start of a DelimitedBlock.\n\noptions::\n  The 'listelement' option specifies that paragraphs of this type will\n  automatically be considered part of immediately preceding list\n  items.  The 'skip' option causes the paragraph to be treated as a\n  comment (see <<X26,CommentBlocks>>).\n\n.Paragraph processing proceeds as follows:\n1. The paragraph text is aligned to the left margin.\n2. Optional 'presubs' inline substitutions are performed on the\n   paragraph text.\n3. If a filter command is specified it is executed and the paragraph\n   text piped to its standard input; the filter output replaces the\n   paragraph text.\n4. Optional 'postsubs' inline substitutions are performed on the\n   paragraph text.\n5. The paragraph text is enveloped by the paragraph's markup template\n   and written to the output file.\n\nDelimited Blocks\n~~~~~~~~~~~~~~~~\nDelimitedBlock 'options' values are:\n\nsectionbody::\n    The block contents are processed as a SectionBody.\n\nskip::\n    The block is treated as a comment (see <<X26,CommentBlocks>>).\n    Preceding <<X21,attribute lists>> and <<X42,block titles>> are not\n    consumed.\n\n'presubs', 'postsubs' and 'filter' entries are ignored when\n'sectionbody' or 'skip' options are set.\n\nDelimitedBlock processing proceeds as follows:\n\n1. Optional 'presubs' substitutions are performed on the block\n   contents.\n2. If a filter is specified it is executed and the block's contents\n   piped to its standard input. The filter output replaces the block\n   contents.\n3. Optional 'postsubs' substitutions are performed on the block\n   contents.\n4. The block contents is enveloped by the block's markup template and\n   written to the output file.\n\nTIP: Attribute expansion is performed on the block filter command\nbefore it is executed, this is useful for passing arguments to the\nfilter.\n\nLists\n~~~~~\nList behavior and syntax is determined by `[listdef-*]` configuration\nfile sections. The user can change existing list behavior and add new\nlist types by editing configuration files.\n\nList specific block definition notes:\n\ntype::\n  This is either 'bulleted','numbered','labeled' or 'callout'.\n\ndelimiter::\n  A Python regular expression that matches the first line of a\n  list element entry. This expression can contain the named groups\n  'text' (bulleted groups), 'index' and 'text' (numbered lists),\n  'label' and 'text' (labeled lists).\n\ntags::\n  The `<name>` of the `[listtags-<name>]` configuration file section\n  containing list markup tag definitions.  The tag entries ('list',\n  'entry', 'label', 'term', 'text') map the AsciiDoc list structure to\n  backend markup; see the 'listtags' sections in the AsciiDoc\n  distributed backend `.conf` configuration files for examples.\n\nTables\n~~~~~~\nTable behavior and syntax is determined by `[tabledef-*]` and\n`[tabletags-*]` configuration file sections. The user can change\nexisting table behavior and add new table types by editing\nconfiguration files.  The following `[tabledef-*]` section entries\ngenerate table output markup elements:\n\ncolspec::\n  The table 'colspec' tag definition.\n\nheadrow, footrow, bodyrow::\n  Table header, footer and body row tag definitions. 'headrow' and\n  'footrow' table definition entries default to 'bodyrow' if\n  they are undefined.\n\nheaddata, footdata, bodydata::\n  Table header, footer and body data tag definitions. 'headdata' and\n  'footdata' table definition entries default to 'bodydata' if they\n  are undefined.\n\nparagraph::\n  If the 'paragraph' tag is specified then blank lines in the cell\n  data are treated as paragraph delimiters and marked up using this\n  tag.\n\n[[X4]]\nTable behavior is also influenced by the following `[miscellaneous]`\nconfiguration file entries:\n\npagewidth::\n  This integer value is the printable width of the output media. See\n  <<X69,table attributes>>.\n\npageunits::\n  The units of width in output markup width attribute values.\n\n.Table definition behavior\n- The output markup generation is specifically designed to work with\n  the HTML and CALS (DocBook) table models, but should be adaptable to\n  most XML table schema.\n- Table definitions can be ``mixed in'' from multiple cascading\n  configuration files.\n- New table definitions inherit the default table and table tags\n  definitions (`[tabledef-default]` and `[tabletags-default]`) so you\n  only need to override those conf file entries that require\n  modification.\n\n\n[[X59]]\nFilters\n-------\nAsciiDoc filters allow external commands to process AsciiDoc\n'Paragraphs', 'DelimitedBlocks' and 'Table' content. Filters are\nprimarily an extension mechanism for generating specialized outputs.\nFilters are implemented using external commands which are specified in\nconfiguration file definitions.\n\nThere's nothing special about the filters, they're just standard UNIX\nfilters: they read text from the standard input, process it, and write\nto the standard output.\n\nThe asciidoc(1) command `--filter` option can be used to install and\nremove filters. The same option is used to unconditionally load a\nfilter.\n\nAttribute substitution is performed on the filter command prior to\nexecution -- attributes can be used to pass parameters from the\nAsciiDoc source document to the filter.\n\nWARNING: Filters sometimes included executable code. Before installing\na filter you should verify that it is from a trusted source.\n\nFilter Search Paths\n~~~~~~~~~~~~~~~~~~~\nIf the filter command does not specify a directory path then\nasciidoc(1) recursively searches for the executable filter command:\n\n- First it looks in the user's `$HOME/.asciidoc/filters` directory.\n- Next the global filters directory (usually `/etc/asciidoc/filters`\n  or `/usr/local/etc/asciidoc`) directory is searched.\n- Then it looks in the asciidoc(1) `./filters` directory.\n- Finally it relies on the executing shell to search the environment\n  search path (`$PATH`).\n\nStandard practice is to install each filter in it's own sub-directory\nwith the same name as the filter's style definition. For example the\nmusic filter's style name is 'music' so it's configuration and filter\nfiles are stored in the `filters/music` directory.\n\nFilter Configuration Files\n~~~~~~~~~~~~~~~~~~~~~~~~~~\nFilters are normally accompanied by a configuration file containing a\nParagraph or DelimitedBlock definition along with corresponding markup\ntemplates.\n\nWhile it is possible to create new 'Paragraph' or 'DelimitedBlock'\ndefinitions the preferred way to implement a filter is to add a\n<<X23,style>> to the existing Paragraph and ListingBlock definitions\n(all filters shipped with AsciiDoc use this technique). The filter is\napplied to the paragraph or delimited block by preceding it with an\nattribute list: the first positional attribute is the style name,\nremaining attributes are normally filter specific parameters.\n\nasciidoc(1) auto-loads all `.conf` files found in the filter search\npaths unless the container directory also contains a file named\n`__noautoload__` (see previous section). The `__noautoload__` feature\nis used for filters that will be loaded manually using the `--filter`\noption.\n\n[[X56]]\nExample Filter\n~~~~~~~~~~~~~~\nAsciiDoc comes with a toy filter for highlighting source code keywords\nand comments.  See also the `./filters/code/code-filter-readme.txt`\nfile.\n\nNOTE: The purpose of this toy filter is to demonstrate how to write a\nfilter -- it's much to simplistic to be passed off as a code syntax\nhighlighter.  If you want a full featured multi-language highlighter\nuse the {website}source-highlight-filter.html[source code highlighter\nfilter].\n\nBuilt-in filters\n~~~~~~~~~~~~~~~~\nThe AsciiDoc distribution includes 'source', 'music', 'latex' and\n'graphviz' filters, details are on the\n{website}index.html#_filters[AsciiDoc website].\n\n[cols=\"1e,5\",frame=\"topbot\",options=\"header\"]\n.Built-in filters list\n|====================================================================\n|Filter name |Description\n\n|music\n|A {website}music-filter.html[music filter] is included in the\ndistribution `./filters/` directory. It translates music in\nhttp://lilypond.org/[LilyPond] or http://abcnotation.org.uk/[ABC]\nnotation to standard classical notation.\n\n|source\n|A {website}source-highlight-filter.html[source code highlight filter]\nis included in the distribution `./filters/` directory.\n\n|latex\n|The {website}latex-filter.html[AsciiDoc LaTeX filter] translates\nLaTeX source to a PNG image that is automatically inserted into the\nAsciiDoc output documents.\n\n|graphviz\n|Gouichi Iisaka has written a http://www.graphviz.org/[Graphviz]\nfilter for AsciiDoc.  Graphviz generates diagrams from a textual\nspecification. Gouichi Iisaka's Graphviz filter is included in the\nAsciiDoc distribution. Here are some\n{website}asciidoc-graphviz-sample.html[AsciiDoc Graphviz examples].\n\n|====================================================================\n\n[[X58]]\nFilter plugins\n~~~~~~~~~~~~~~\nFilter <<X101,plugins>> are a mechanism for distributing AsciiDoc\nfilters.  A filter plugin is a Zip file containing the files that\nconstitute a filter.  The asciidoc(1) `--filter` option is used to\nload and manage filer <<X101,plugins>>.\n\n- Filter plugins <<X27,take precedence>> over built-in filters with\n  the same name.\n- By default filter plugins are installed in\n  `$HOME/.asciidoc/filters/<filter>` where `<filter>` is the filter\n  name.\n\n\n[[X101]]\nPlugins\n-------\nThe AsciiDoc plugin architecture is an extension mechanism that allows\nadditional <<X100,backends>>, <<X58,filters>> and <<X99,themes>> to be\nadded to AsciiDoc.\n\n- A plugin is a Zip file containing an AsciiDoc backend, filter or\n  theme (configuration files, stylesheets, scripts, images).\n- The asciidoc(1) `--backend`, `--filter` and `--theme` command-line\n  options are used to load and manage plugins. Each of these options\n  responds to the plugin management 'install', 'list', 'remove' and\n  'build' commands.\n- The plugin management command names are reserved and cannot be used\n  for filter, backend or theme names.\n- The plugin Zip file name always begins with the backend, filter or\n  theme name.\n\nPlugin commands and conventions are documented in the asciidoc(1) man\npage.  You can find lists of plugins on the\n{website}plugins.html[AsciiDoc website].\n\n\n[[X36]]\nHelp Commands\n-------------\nThe asciidoc(1) command has a `--help` option which prints help topics\nto stdout. The default topic summarizes asciidoc(1) usage:\n\n  $ asciidoc --help\n\nTo print a help topic specify the topic name as a command argument.\nHelp topic names can be shortened so long as they are not ambiguous.\nExamples:\n\n  $ asciidoc --help manpage\n  $ asciidoc -h m              # Short version of previous example.\n  $ asciidoc --help syntax\n  $ asciidoc -h s              # Short version of previous example.\n\nCustomizing Help\n~~~~~~~~~~~~~~~~\nTo change, delete or add your own help topics edit a help\nconfiguration file.  The help file name `help-<lang>.conf` is based on\nthe setting of the `lang` attribute, it defaults to `help.conf`\n(English).  The <<X27,help file location>> will depend on whether you\nwant the topics to apply to all users or just the current user.\n\nThe help topic files have the same named section format as other\n<<X7,configuration files>>. The `help.conf` files are stored in the\nsame locations and loaded in the same order as other configuration\nfiles.\n\nWhen the `--help` command-line option is specified AsciiDoc loads the\nappropriate help files and then prints the contents of the section\nwhose name matches the help topic name.  If a topic name is not\nspecified `default` is used. You don't need to specify the whole help\ntopic name on the command-line, just enough letters to ensure it's not\nambiguous. If a matching help file section is not found a list of\navailable topics is printed.\n\n\nTips and Tricks\n---------------\n\nKnow Your Editor\n~~~~~~~~~~~~~~~~\nWriting AsciiDoc documents will be a whole lot more pleasant if you\nknow your favorite text editor. Learn how to indent and reformat text\nblocks, paragraphs, lists and sentences. <<X20,Tips for 'vim' users>>\nfollow.\n\n[[X20]]\nVim Commands for Formatting AsciiDoc\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nText Wrap Paragraphs\n^^^^^^^^^^^^^^^^^^^^\nUse the vim `:gq` command to reformat paragraphs. Setting the\n'textwidth' sets the right text wrap margin; for example:\n\n  :set textwidth=70\n\nTo reformat a paragraph:\n\n1. Position the cursor at the start of the paragraph.\n2. Type `gq}`.\n\nExecute `:help gq` command to read about the vim gq command.\n\n[TIP]\n=====================================================================\n- Assign the `gq}` command to the Q key with the `nnoremap Q gq}`\n  command or put it in your `~/.vimrc` file to so it's always\n  available (see the <<X61, Example `~/.vimrc` file>>).\n- Put `set` commands in your `~/.vimrc` file so you don't have to\n  enter them manually.\n- The Vim website (http://www.vim.org) has a wealth of resources,\n  including scripts for automated spell checking and ASCII Art\n  drawing.\n=====================================================================\n\nFormat Lists\n^^^^^^^^^^^^\nThe `gq` command can also be used to format bulleted, numbered and\ncallout lists. First you need to set the `comments`, `formatoptions`\nand `formatlistpat` (see the <<X61, Example `~/.vimrc` file>>).\n\nNow you can format simple lists that use dash, asterisk, period and\nplus bullets along with numbered ordered lists:\n\n1. Position the cursor at the start of the list.\n2. Type `gq}`.\n\nIndent Paragraphs\n^^^^^^^^^^^^^^^^^\nIndent whole paragraphs by indenting the fist line with the desired\nindent and then executing the `gq}` command.\n\n[[X61]]\nExample `~/.vimrc` File\n^^^^^^^^^^^^^^^^^^^^^^^\n---------------------------------------------------------------------\n\" Use bold bright fonts.\nset background=dark\n\n\" Show tabs and trailing characters.\nset listchars=tab:��,trail:�\nset list\n\n\" Don't highlight searched text.\nhighlight clear Search\n\n\" Don't move to matched text while search pattern is being entered.\nset noincsearch\n\n\" Reformat paragraphs and list.\nnnoremap R gq}\n\n\" Delete trailing white space and Dos-returns and to expand tabs to spaces.\nnnoremap S :set et<CR>:retab!<CR>:%s/[\\r \\t]\\+$//<CR>\n\nautocmd BufRead,BufNewFile *.txt,README,TODO,CHANGELOG,NOTES\n        \\ setlocal autoindent expandtab tabstop=8 softtabstop=2 shiftwidth=2 filetype=asciidoc\n        \\ textwidth=70 wrap formatoptions=tcqn\n        \\ formatlistpat=^\\\\s*\\\\d\\\\+\\\\.\\\\s\\\\+\\\\\\\\|^\\\\s*<\\\\d\\\\+>\\\\s\\\\+\\\\\\\\|^\\\\s*[a-zA-Z.]\\\\.\\\\s\\\\+\\\\\\\\|^\\\\s*[ivxIVX]\\\\+\\\\.\\\\s\\\\+\n        \\ comments=s1:/*,ex:*/,://,b:#,:%,:XCOMM,fb:-,fb:*,fb:+,fb:.,fb:>\n---------------------------------------------------------------------\n\nTroubleshooting\n~~~~~~~~~~~~~~~\nAsciiDoc diagnostic features are detailed in the <<X82,Diagnostics\nappendix>>.\n\nGotchas\n~~~~~~~\nIncorrect character encoding::\n    If you get an error message like `'UTF-8' codec can't decode ...`\n    then you source file contains invalid UTF-8 characters -- set the\n    AsciiDoc <<X54,encoding attribute>> for the correct character set\n    (typically ISO-8859-1 (Latin-1) for European languages).\n\nInvalid output::\n    AsciiDoc attempts to validate the input AsciiDoc source but makes\n    no attempt to validate the output markup, it leaves that to\n    external tools such as `xmllint(1)` (integrated into `a2x(1)`).\n    Backend validation cannot be hardcoded into AsciiDoc because\n    backends are dynamically configured. The following example\n    generates valid HTML but invalid DocBook (the DocBook `literal`\n    element cannot contain an `emphasis` element):\n\n    +monospaced text with an _emphasized_ word+\n\nMisinterpreted text formatting::\n    You can suppress markup expansion by placing a backslash character\n    immediately in front of the element. The following example\n    suppresses inline monospaced formatting:\n\n    \\+1 for C++.\n\nOverlapping text formatting::\n    Overlapping text formatting will generate illegal overlapping\n    markup tags which will result in downstream XML parsing errors.\n    Here's an example:\n\n    Some *strong markup _that overlaps* emphasized markup_.\n\nAmbiguous underlines::\n    A DelimitedBlock can immediately follow a paragraph without an\n    intervening blank line, but be careful, a single line paragraph\n    underline may be misinterpreted as a section title underline\n    resulting in a ``closing block delimiter expected'' error.\n\nAmbiguous ordered list items::\n    Lines beginning with numbers at the end of sentences will be\n    interpreted as ordered list items.  The following example\n    (incorrectly) begins a new list with item number 1999:\n\n    He was last sighted in\n    1999. Since then things have moved on.\n+\nThe 'list item out of sequence' warning makes it unlikely that this\nproblem will go unnoticed.\n\nSpecial characters in attribute values::\n    Special character substitution precedes attribute substitution so\n    if attribute values contain special characters you may, depending\n    on the substitution context, need to escape the special characters\n    yourself. For example:\n\n    $ asciidoc -a 'orgname=Bill &amp; Ben Inc.' mydoc.txt\n\nAttribute lists::\n    If any named attribute entries are present then all string\n    attribute values must be quoted.  For example:\n\n    [\"Desktop screenshot\",width=32]\n\n[[X90]]\nCombining separate documents\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou have a number of stand-alone AsciiDoc documents that you want to\nprocess as a single document. Simply processing them with a series of\n`include` macros won't work because the documents contain (level 0)\ndocument titles.  The solution is to create a top level wrapper\ndocument and use the `leveloffset` attribute to push them all down one\nlevel. For example:\n\n[listing]\n.....................................................................\nCombined Document Title\n=======================\n\n// Push titles down one level.\n:leveloffset: 1\n\n\\include::document1.txt[]\n\n// Return to normal title levels.\n:leveloffset: 0\n\nA Top Level Section\n-------------------\nLorum ipsum.\n\n// Push titles down one level.\n:leveloffset: 1\n\n\\include::document2.txt[]\n\n\\include::document3.txt[]\n.....................................................................\n\nThe document titles in the included documents will now be processed as\nlevel 1 section titles, level 1 sections as level 2 sections and so\non.\n\n- Put a blank line between the `include` macro lines to ensure the\n  title of the included document is not seen as part of the last\n  paragraph of the previous document.\n- You won't want non-title document header lines (for example, Author\n  and Revision lines) in the included files -- conditionally exclude\n  them if they are necessary for stand-alone processing.\n\nProcessing document sections separately\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou have divided your AsciiDoc document into separate files (one per\ntop level section) which are combined and processed with the following\ntop level document:\n\n---------------------------------------------------------------------\nCombined Document Title\n=======================\nJoe Bloggs\nv1.0, 12-Aug-03\n\n\\include::section1.txt[]\n\n\\include::section2.txt[]\n\n\\include::section3.txt[]\n---------------------------------------------------------------------\n\nYou also want to process the section files as separate documents.\nThis is easy because asciidoc(1) will quite happily process\n`section1.txt`, `section2.txt` and `section3.txt` separately -- the\nresulting output documents contain the section but have no document\ntitle.\n\nProcessing document snippets\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nUse the `-s` (`--no-header-footer`) command-line option to suppress\nheader and footer output, this is useful if the processed output is to\nbe included in another file. For example:\n\n  $ asciidoc -sb docbook section1.txt\n\nasciidoc(1) can be used as a filter, so you can pipe chunks of text\nthrough it. For example:\n\n  $ echo 'Hello *World!*' | asciidoc -s -\n  <div class=\"paragraph\"><p>Hello <strong>World!</strong></p></div>\n\nBadges in HTML page footers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSee the `[footer]` section in the AsciiDoc distribution `xhtml11.conf`\nconfiguration file.\n\nPretty printing AsciiDoc output\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIf the indentation and layout of the asciidoc(1) output is not to your\nliking you can:\n\n1. Change the indentation and layout of configuration file markup\n   template sections. The `{empty}` attribute is useful for outputting\n   trailing blank lines in markup templates.\n\n2. Use Dave Raggett's http://tidy.sourceforge.net/[HTML Tidy] program\n   to tidy asciidoc(1) output. Example:\n\n   $ asciidoc -b docbook -o - mydoc.txt | tidy -indent -xml >mydoc.xml\n\n3. Use the `xmllint(1)` format option. Example:\n\n   $ xmllint --format mydoc.xml\n\nSupporting minor DocBook DTD variations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe conditional inclusion of DocBook SGML markup at the end of the\ndistribution `docbook45.conf` file illustrates how to support minor\nDTD variations. The included sections override corresponding entries\nfrom preceding sections.\n\nCreating stand-alone HTML documents\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIf you've ever tried to send someone an HTML document that includes\nstylesheets and images you'll know that it's not as straight-forward\nas exchanging a single file.  AsciiDoc has options to create\nstand-alone documents containing embedded images, stylesheets and\nscripts.  The following AsciiDoc command creates a single file\ncontaining <<X66,embedded images>>, CSS stylesheets, and JavaScript\n(for table of contents and footnotes):\n\n  $ asciidoc -a data-uri -a icons -a toc -a max-width=55em article.txt\n\nYou can view the HTML file here: {website}article-standalone.html[]\n\nShipping stand-alone AsciiDoc source\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nReproducing presentation documents from someone else's source has one\nmajor problem: unless your configuration files are the same as the\ncreator's you won't get the same output.\n\nThe solution is to create a single backend specific configuration file\nusing the asciidoc(1) `-c` (`--dump-conf`) command-line option. You\nthen ship this file along with the AsciiDoc source document plus the\n`asciidoc.py` script. The only end user requirement is that they have\nPython installed (and that they consider you a trusted source). This\nexample creates a composite HTML configuration file for `mydoc.txt`:\n\n  $ asciidoc -cb xhtml11 mydoc.txt > mydoc-xhtml11.conf\n\nShip `mydoc.txt`, `mydoc-html.conf`, and `asciidoc.py`. With\nthese three files (and a Python interpreter) the recipient can\nregenerate the HMTL output:\n\n  $ ./asciidoc.py -eb xhtml11 mydoc.txt\n\nThe `-e` (`--no-conf`) option excludes the use of implicit\nconfiguration files, ensuring that only entries from the\n`mydoc-html.conf` configuration are used.\n\nInserting blank space\n~~~~~~~~~~~~~~~~~~~~~\nAdjust your style sheets to add the correct separation between block\nelements. Inserting blank paragraphs containing a single non-breaking\nspace character `{nbsp}` works but is an ad hoc solution compared\nto using style sheets.\n\nClosing open sections\n~~~~~~~~~~~~~~~~~~~~~\nYou can close off section tags up to level `N` by calling the\n`eval::[Section.setlevel(N)]` system macro. This is useful if you\nwant to include a section composed of raw markup. The following\nexample includes a DocBook glossary division at the top section level\n(level 0):\n\n---------------------------------------------------------------------\n\\ifdef::basebackend-docbook[]\n\n\\eval::[Section.setlevel(0)]\n\n+++++++++++++++++++++++++++++++\n<glossary>\n  <title>Glossary</title>\n  <glossdiv>\n  ...\n  </glossdiv>\n</glossary>\n+++++++++++++++++++++++++++++++\n\\endif::basebackend-docbook[]\n---------------------------------------------------------------------\n\nValidating output files\n~~~~~~~~~~~~~~~~~~~~~~~\nUse `xmllint(1)` to check the AsciiDoc generated markup is both well\nformed and valid. Here are some examples:\n\n  $ xmllint --nonet --noout --valid docbook-file.xml\n  $ xmllint --nonet --noout --valid xhtml11-file.html\n  $ xmllint --nonet --noout --valid --html html4-file.html\n\nThe `--valid` option checks the file is valid against the document\ntype's DTD, if the DTD is not installed in your system's catalog then\nit will be fetched from its Internet location. If you omit the\n`--valid` option the document will only be checked that it is well\nformed.\n\nThe online http://validator.w3.org/#validate_by_uri+with_options[W3C\nMarkup Validation Service] is the defacto standard when it comes to\nvalidating HTML (it validates all HTML standards including HTML5).\n\n\n:numbered!:\n\n[glossary]\nGlossary\n--------\n[glossary]\n[[X8]] Block element::\n    An AsciiDoc block element is a document entity composed of one or\n    more whole lines of text.\n\n[[X34]] Inline element::\n    AsciiDoc inline elements occur within block element textual\n    content, they perform formatting and substitution tasks.\n\nFormal element::\n    An AsciiDoc block element that has a BlockTitle. Formal elements\n    are normally listed in front or back matter, for example lists of\n    tables, examples and figures.\n\nVerbatim element::\n    The word verbatim indicates that white space and line breaks in\n    the source document are to be preserved in the output document.\n\n\n[appendix]\nMigration Notes\n---------------\n[[X53]]\nVersion 7 to version 8\n~~~~~~~~~~~~~~~~~~~~~~\n- A new set of quotes has been introduced which may match inline text\n  in existing documents -- if they do you'll need to escape the\n  matched text with backslashes.\n- The index entry inline macro syntax has changed -- if your documents\n  include indexes you may need to edit them.\n- Replaced a2x(1) `--no-icons` and `--no-copy` options with their\n  negated equivalents: `--icons` and `--copy` respectively. The\n  default behavior has also changed -- the use of icons and copying of\n  icon and CSS files must be specified explicitly with the `--icons`\n  and `--copy` options.\n\nThe rationale for the changes can be found in the AsciiDoc\n`CHANGELOG`.\n\nNOTE: If you want to disable unconstrained quotes, the new alternative\nconstrained quotes syntax and the new index entry syntax then you can\ndefine the attribute `asciidoc7compatible` (for example by using the\n`-a asciidoc7compatible` command-line option).\n\n[[X38]]\n[appendix]\nPackager Notes\n--------------\nRead the `README` and `INSTALL` files (in the distribution root\ndirectory) for install prerequisites and procedures.  The distribution\n`Makefile.in` (used by `configure` to generate the `Makefile`) is the\ncanonical installation procedure.\n\n\n[[X39]]\n[appendix]\nAsciiDoc Safe Mode\n-------------------\nAsciiDoc 'safe mode' skips potentially dangerous scripted sections in\nAsciiDoc source files by inhibiting the execution of arbitrary code or\nthe inclusion of arbitrary files.\n\nThe safe mode is disabled by default, it can be enabled with the\nasciidoc(1) `--safe` command-line option.\n\n.Safe mode constraints\n- `eval`, `sys` and `sys2` executable attributes and block macros are\n  not executed.\n- `include::<filename>[]` and `include1::<filename>[]` block macro\n  files must reside inside the parent file's directory.\n- `{include:<filename>}` executable attribute files must reside\n  inside the source document directory.\n- Passthrough Blocks are dropped.\n\n[WARNING]\n=====================================================================\nThe safe mode is not designed to protect against unsafe AsciiDoc\nconfiguration files. Be especially careful when:\n\n1. Implementing filters.\n2. Implementing elements that don't escape special characters.\n3. Accepting configuration files from untrusted sources.\n=====================================================================\n\n\n[appendix]\nUsing AsciiDoc with non-English Languages\n-----------------------------------------\nAsciiDoc can process UTF-8 character sets but there are some things\nyou need to be aware of:\n\n- If you are generating output documents using a DocBook toolchain\n  then you should set the AsciiDoc `lang` attribute to the appropriate\n  language (it defaults to `en` (English)). This will ensure things\n  like table of contents, figure and table captions and admonition\n  captions are output in the specified language.  For example:\n\n  $ a2x -a lang=es doc/article.txt\n\n- If you are outputting HTML directly from asciidoc(1) you'll\n  need to set the various `*_caption` attributes to match your target\n  language (see the list of captions and titles in the `[attributes]`\n  section of the distribution `lang-*.conf` files). The easiest way is\n  to create a language `.conf` file (see the AsciiDoc's `lang-en.conf`\n  file).\n+\nNOTE: You still use the 'NOTE', 'CAUTION', 'TIP', 'WARNING',\n'IMPORTANT' captions in the AsciiDoc source, they get translated in\nthe HTML output file.\n\n- asciidoc(1) automatically loads configuration files named like\n  `lang-<lang>.conf` where `<lang>` is a two letter language code that\n  matches the current AsciiDoc `lang` attribute. See also\n  <<X27,Configuration File Names and Locations>>.\n\n\n[appendix]\nVim Syntax Highlighter\n----------------------\nSyntax highlighting is incredibly useful, in addition to making\nreading AsciiDoc documents much easier syntax highlighting also helps\nyou catch AsciiDoc syntax errors as you write your documents.\n\nThe AsciiDoc `./vim/` distribution directory contains Vim syntax\nhighlighter and filetype detection scripts for AsciiDoc.  Syntax\nhighlighting makes it much easier to spot AsciiDoc syntax errors.\n\nIf Vim is installed on your system the AsciiDoc installer\n(`install.sh`) will automatically install the vim scripts in the Vim\nglobal configuration directory (`/etc/vim`).\n\nYou can also turn on syntax highlighting by adding the following line\nto the end of you AsciiDoc source files:\n\n  // vim: set syntax=asciidoc:\n\nTIP: Bold fonts are often easier to read, use the Vim `:set\nbackground=dark` command to set bold bright fonts.\n\nNOTE: There are a number of alternative syntax highlighters for\nvarious editors listed on the {website}[AsciiDoc website].\n\nLimitations\n~~~~~~~~~~~\nThe current implementation does a reasonable job but on occasions gets\nthings wrong:\n\n- Nested quoted text formatting is highlighted according to the outer\n  format.\n- If a closing Example Block delimiter is sometimes mistaken for a\n  title underline. A workaround is to insert a blank line before the\n  closing delimiter.\n- Lines within a paragraph starting with equals characters may be\n  highlighted as single-line titles.\n- Lines within a paragraph beginning with a period may be highlighted\n  as block titles.\n\n\n[[X74]]\n[appendix]\nAttribute Options\n-----------------\nHere is the list of predefined <<X75,attribute list options>>:\n\n\n[cols=\"2e,2,2,5\",frame=\"topbot\",options=\"header\"]\n|====================================================================\n|Option|Backends|AsciiDoc Elements|Description\n\n|autowidth |xhtml11, html5, html4 |table|\nThe column widths are determined by the browser, not the AsciiDoc\n'cols' attribute. If there is no 'width' attribute the table width is\nalso left up to the browser.\n\n|unbreakable |xhtml11, html5 |block elements|\n'unbreakable' attempts to keep the block element together on a single\nprinted page c.f. the 'breakable' and 'unbreakable' docbook (XSL/FO)\noptions below.\n\n|breakable, unbreakable |docbook (XSL/FO) |table, example, block image|\nThe 'breakable' options allows block elements to break across page\nboundaries; 'unbreakable' attempts to keep the block element together\non a single page. If neither option is specified the default XSL\nstylesheet behavior prevails.\n\n|compact |docbook, xhtml11, html5 |bulleted list, numbered list|\nMinimizes vertical space in the list\n\n|footer |docbook, xhtml11, html5, html4 |table|\nThe last row of the table is rendered as a footer.\n\n|header |docbook, xhtml11, html5, html4 |table|\nThe first row of the table is rendered as a header.\n\n|pgwide |docbook (XSL/FO) |table, block image, horizontal labeled list|\nSpecifies that the element should be rendered across the full text\nwidth of the page irrespective of the current indentation.\n\n|strong |xhtml11, html5, html4 |labeled lists|\nEmboldens label text.\n|====================================================================\n\n\n[[X82]]\n[appendix]\nDiagnostics\n-----------\nThe `asciidoc(1)` `--verbose` command-line option prints additional\ninformation to stderr: files processed, filters processed, warnings,\nsystem attribute evaluation.\n\nA special attribute named 'trace' enables the output of\nelement-by-element diagnostic messages detailing output markup\ngeneration to stderr.  The 'trace' attribute can be set on the\ncommand-line or from within the document using <<X18,Attribute\nEntries>> (the latter allows tracing to be confined to specific\nportions of the document).\n\n- Trace messages print the source file name and line number and the\n  trace name followed by related markup.\n- 'trace names' are normally the names of AsciiDoc elements (see the\n  list below).\n- The trace message is only printed if the 'trace' attribute value\n  matches the start of a 'trace name'. The 'trace' attribute value can\n  be any Python regular expression.  If a trace value is not specified\n  all trace messages will be printed (this can result in large amounts\n  of output if applied to the whole document).\n\n- In the case of inline substitutions:\n  * The text before and after the substitution is printed; the before\n    text is preceded by a line containing `<<<` and the after text by\n    a line containing `>>>`.\n  * The 'subs' trace value is an alias for all inline substitutions.\n\n.Trace names\n.....................................................................\n<blockname> block close\n<blockname> block open\n<subs>\ndropped line (a line containing an undefined attribute reference).\nfloating title\nfooter\nheader\nlist close\nlist entry close\nlist entry open\nlist item close\nlist item open\nlist label close\nlist label open\nlist open\nmacro block (a block macro)\nname (man page NAME section)\nparagraph\npreamble close\npreamble open\npush blockname\npop blockname\nsection close\nsection open: level <level>\nsubs (all inline substitutions)\ntable\n.....................................................................\n\nWhere:\n\n- `<level>` is section level number '0...4'.\n- `<blockname>` is a delimited block name: 'comment', 'sidebar',\n  'open', 'pass', 'listing', 'literal', 'quote', 'example'.\n- `<subs>` is an inline substitution type:\n  'specialcharacters','quotes','specialwords', 'replacements',\n  'attributes','macros','callouts', 'replacements2', 'replacements3'.\n\nCommand-line examples:\n\n. Trace the entire document.\n\n  $ asciidoc -a trace mydoc.txt\n\n. Trace messages whose names start with `quotes` or `macros`:\n\n  $ asciidoc -a 'trace=quotes|macros'  mydoc.txt\n\n. Print the first line of each trace message:\n\n  $ asciidoc -a trace mydoc.txt 2>&1 | grep ^TRACE:\n\nAttribute Entry examples:\n\n. Begin printing all trace messages:\n\n  :trace:\n\n. Print only matched trace messages:\n\n  :trace: quotes|macros\n\n. Turn trace messages off:\n\n  :trace!:\n\n\n[[X88]]\n[appendix]\nBackend Attributes\n------------------\nThis table contains a list of optional attributes that influence the\ngenerated outputs.\n\n[cols=\"1e,1,5a\",frame=\"topbot\",options=\"header\"]\n|====================================================================\n|Name |Backends |Description\n\n|badges |xhtml11, html5 |\nLink badges ('XHTML 1.1' and 'CSS') in document footers. By default\nbadges are omitted ('badges' is undefined).\n\nNOTE: The path names of images, icons and scripts are relative path\nnames to the output document not the source document.\n\n|data-uri |xhtml11, html5 |\nEmbed images using the <<X66,data: uri scheme>>.\n\n|css-signature |html5, xhtml11 |\nSet a 'CSS signature' for the document (sets the 'id' attribute of the\nHTML 'body' element). CSS signatures provide a mechanism that allows\nusers to personalize the document appearance. The term 'CSS signature'\nwas http://archivist.incutio.com/viewlist/css-discuss/13291[coined by\nEric Meyer].\n\n\n|disable-javascript |xhtml11, html5 |\nIf the `disable-javascript` attribute is defined the `asciidoc.js`\nJavaScript is not embedded or linked to the output document.  By\ndefault AsciiDoc automatically embeds or links the `asciidoc.js`\nJavaScript to the output document. The script dynamically generates\n<<X91,table of contents>> and <<X92,footnotes>>.\n\n|[[X97]] docinfo, docinfo1, docinfo2 |All backends |\nThese three attributes control which <<X87,document information\nfiles>> will be included in the the header of the output file:\n\ndocinfo:: Include `<filename>-docinfo.<ext>`\ndocinfo1:: Include `docinfo.<ext>`\ndocinfo2:: Include `docinfo.<ext>` and `<filename>-docinfo.<ext>`\n\nWhere `<filename>` is the file name (sans extension) of the AsciiDoc\ninput file and `<ext>` is `.html` for HTML outputs or `.xml` for\nDocBook outputs. If the input file is the standard input then the\noutput file name is used. The following example will include the\n`mydoc-docinfo.xml` docinfo file in the DocBook `mydoc.xml` output\nfile:\n\n  $ asciidoc -a docinfo -b docbook mydoc.txt\n\nThis next example will include `docinfo.html` and `mydoc-docinfo.html`\ndocinfo files in the HTML output file:\n\n  $ asciidoc -a docinfo2 -b html4 mydoc.txt\n\n\n|[[X54]]encoding |html4, html5, xhtml11, docbook |\nSet the input and output document character set encoding. For example\nthe `--attribute encoding=ISO-8859-1` command-line option will set the\ncharacter set encoding to `ISO-8859-1`.\n\n- The default encoding is UTF-8.\n- This attribute specifies the character set in the output document.\n- The encoding name must correspond to a Python codec name or alias.\n- The 'encoding' attribute can be set using an AttributeEntry inside\n  the document header. For example:\n\n  :encoding: ISO-8859-1\n\n|[[X45]]icons |xhtml11, html5 |\nLink admonition paragraph and admonition block icon images and badge\nimages. By default 'icons' is undefined and text is used in place of\nicon images.\n\n|[[X44]]iconsdir |html4, html5, xhtml11, docbook |\nThe name of the directory containing linked admonition icons,\nnavigation icons and the `callouts` sub-directory (the `callouts`\nsub-directory contains <<X105,callout>> number images). 'iconsdir'\ndefaults to `./images/icons`.\n\n|imagesdir |html4, html5, xhtml11, docbook |\nIf this attribute is defined it is prepended to the target image file\nname paths in inline and block image macros.\n\n|keywords, description, title |html4, html5, xhtml11 |\nThe 'keywords' and 'description' attributes set the correspondingly\nnamed HTML meta tag contents; the 'title' attribute sets the HTML\ntitle tag contents.  Their principle use is for SEO (Search Engine\nOptimisation).  All three are optional, but if they are used they must\nappear in the document header (or on the command-line). If 'title' is\nnot specified the AsciiDoc document title is used.\n\n|linkcss |html5, xhtml11 |\nLink CSS stylesheets and JavaScripts. By default 'linkcss' is\nundefined in which case stylesheets and scripts are automatically\nembedded in the output document.\n\n|[[X103]]max-width |html5, xhtml11 |\nSet the document maximum display width (sets the 'body' element CSS\n'max-width' property).\n\n|numbered |html4, html5, xhtml11, docbook (XSL Stylesheets) |\nAdds section numbers to section titles. The 'docbook' backend ignores\n'numbered' attribute entries after the document header.\n\n|plaintext | All backends |\nIf this global attribute is defined all inline substitutions are\nsuppressed and block indents are retained.  This option is useful when\ndealing with large amounts of imported plain text.\n\n|quirks |xhtml11 |\nInclude the `xhtml11-quirks.conf` configuration file and\n`xhtml11-quirks.css` <<X35,stylesheet>> to work around IE6 browser\nincompatibilities. This feature is deprecated and its use is\ndiscouraged -- documents are still viewable in IE6 without it.\n\n|revremark |docbook |\nA short summary of changes in this document revision. Must be defined\nprior to the first document section. The document also needs to be\ndated to output this attribute.\n\n|scriptsdir |html5, xhtml11 |\nThe name of the directory containing linked JavaScripts.\nSee <<X35,HTML stylesheets and JavaScript locations>>.\n\n|sgml |docbook45 |\nThe `--backend=docbook45` command-line option produces DocBook 4.5\nXML.  You can produce the older DocBook SGML format using the\n`--attribute sgml` command-line option.\n\n|stylesdir |html5, xhtml11 |\nThe name of the directory containing linked or embedded\n<<X35,stylesheets>>.\nSee <<X35,HTML stylesheets and JavaScript locations>>.\n\n|stylesheet |html5, xhtml11 |\nThe file name of an optional additional CSS <<X35,stylesheet>>.\n\n|theme |html5, xhtml11 |\nUse alternative stylesheet (see <<X35,Stylesheets>>).\n\n|[[X91]]toc |html5, xhtml11, docbook (XSL Stylesheets) |\nAdds a table of contents to the start of an article or book document.\nThe `toc` attribute can be specified using the `--attribute toc`\ncommand-line option or a `:toc:` attribute entry in the document\nheader. The 'toc' attribute is defined by default when the 'docbook'\nbackend is used. To disable table of contents generation undefine the\n'toc' attribute by putting a `:toc!:` attribute entry in the document\nheader or from the command-line with an `--attribute toc!` option.\n\n*xhtml11 and html5 backends*\n\n- JavaScript needs to be enabled in your browser.\n- The following example generates a numbered table of contents using a\n  JavaScript embedded in the `mydoc.html` output document:\n\n  $ asciidoc -a toc -a numbered mydoc.txt\n\n|toc2 |html5, xhtml11 |\nAdds a scrollable table of contents in the left hand margin of an\narticle or book document. Use the 'max-width' attribute to change the\ncontent width. In all other respects behaves the same as the 'toc'\nattribute.\n\n|toc-placement |html5, xhtml11 |\nWhen set to 'auto' (the default value) asciidoc(1) will place the\ntable of contents in the document header. When 'toc-placement' is set\nto 'manual' the TOC can be positioned anywhere in the document by\nplacing the `toc::[]` block macro at the point you want the TOC to\nappear.\n\nNOTE: If you use 'toc-placement' then you also have to define the\n<<X91,toc>> attribute.\n\n|toc-title |html5, xhtml11 |\nSets the table of contents title (defaults to 'Table of Contents').\n\n|toclevels |html5, xhtml11 |\nSets the number of title levels (1..4) reported in the table of\ncontents (see the 'toc' attribute above). Defaults to 2 and must be\nused with the 'toc' attribute. Example usage:\n\n  $ asciidoc -a toc -a toclevels=3 doc/asciidoc.txt\n\n|====================================================================\n\n\n[appendix]\nLicense\n-------\nAsciiDoc is free software; you can redistribute it and/or modify it\nunder the terms of the 'GNU General Public License version 2' (GPLv2)\nas published by the Free Software Foundation.\n\nAsciiDoc is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License version 2 for more details.\n\nAsciiDoc Highlighter sponsored by O'Reilly Media\n\nCopyright (C) 2002-2011 Stuart Rackham.\n"
        }
      ],
      "id": "tDhk-3Cs",
      "createdAt": 1659495355948,
      "updatedAt": 1659495379957
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "ASL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "asl",
          "value": "/*\n * Intel ACPI Component Architecture\n * AML/ASL+ Disassembler version 20180105\n *\n * ASL example\n */\nDefinitionBlock (\"\", \"SSDT\", 1, \"PmRef\", \"Cpu0Ist\", 0x00003000)\n{\n    External (_PR_.CPU0, DeviceObj)\n    External (_SB_.CPUP, UnknownObj)\n\n    Scope (\\_PR.CPU0)\n    {\n        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control\n        {\n            If (((CFGD & One) && (PDC0 & One)))\n            {\n                Return (Package (0x02)\n                {\n                    ResourceTemplate ()\n                    {\n                        Register (FFixedHW, \n                            0x00,               // Bit Width\n                            0x00,               // Bit Offset\n                            0x0000000000000000, // Address\n                            ,)\n                    }, \n\n                    ResourceTemplate ()\n                    {\n                        Register (FFixedHW, \n                            0x00,               // Bit Width\n                            0x00,               // Bit Offset\n                            0x0000000000000000, // Address\n                            ,)\n                    }\n                })\n            }\n\n            Return (Package (0x02)\n            {\n                ResourceTemplate ()\n                {\n                    Register (SystemIO, \n                        0x10,               // Bit Width\n                        0x00,               // Bit Offset\n                        0x0000000000001000, // Address\n                        ,)\n                }, \n\n                ResourceTemplate ()\n                {\n                    Register (SystemIO, \n                        0x08,               // Bit Width\n                        0x00,               // Bit Offset\n                        0x00000000000000B3, // Address\n                        ,)\n                }\n            })\n        }\n\n        Name (PSDF, Zero)\n        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies\n        {\n            If (!PSDF)\n            {\n                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */\n                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */\n                PSDF = Ones\n            }\n\n            If ((PDC0 & 0x0800))\n            {\n                Return (HPSD) /* \\_PR_.CPU0.HPSD */\n            }\n\n            Return (SPSD) /* \\_PR_.CPU0.SPSD */\n        }\n    }\n}\n\n"
        }
      ],
      "id": "Rn6BOXbG",
      "createdAt": 1659495382193,
      "updatedAt": 1659495397930
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "ASP vb.NET / VBScript",
      "content": [
        {
          "label": "Fragment 1",
          "language": "asp_vb_net",
          "value": "myfilename = \"C:\\Wikipedia - VBScript - Example - Hello World.txt\"\nMakeHelloWorldFile myfilename\n \nSub MakeHelloWorldFile (FileName)\n   'Create a new file in C: drive or overwrite existing file\n   Set FSO = CreateObject(\"Scripting.FileSystemObject\")\n   If FSO.FileExists(FileName) Then \n      Answer = MsgBox (\"File \" & FileName & \" exists ... OK to overwrite?\", vbOKCancel)\n      'If button selected is not OK, then quit now\n      'vbOK is a language constant\n      If Answer <> vbOK Then Exit Sub\n   Else\n      'Confirm OK to create\n      Answer = MsgBox (\"File \" & FileName & \" ... OK to create?\", vbOKCancel)\n      If Answer <> vbOK Then Exit Sub\n   End If\n   'Create new file (or replace an existing file)\n   Set FileObject = FSO.CreateTextFile (FileName)\n   FileObject.WriteLine \"Time ... \" & Now()\n   FileObject.WriteLine \"Hello World\"\n   FileObject.Close()\n   MsgBox \"File \" & FileName & \" ... updated.\"\nEnd Sub"
        }
      ],
      "id": "HVqfS-xI",
      "createdAt": 1659495399059,
      "updatedAt": 1659495473147
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Assembly x86",
      "content": [
        {
          "label": "Fragment 1",
          "language": "assembly_x86",
          "value": "section\t.text\n    global main         ;must be declared for using gcc\n\nmain:\t                ;tell linker entry point\n\n\tmov\tedx, len\t    ;message length\n\tmov\tecx, msg\t    ;message to write\n\tmov\tebx, 1\t        ;file descriptor (stdout)\n\tmov\teax, 4\t        ;system call number (sys_write)\n\tint\t0x80\t        ;call kernel\n\n\tmov\teax, 1\t        ;system call number (sys_exit)\n\tint\t0x80\t        ;call kernel\n\nsection\t.data\n\nmsg\tdb\t'Hello, world!',0xa\t;our dear string\nlen\tequ\t$ - msg\t\t\t;length of our dear string\n"
        }
      ],
      "id": "eXuPh5Es",
      "createdAt": 1659495407360,
      "updatedAt": 1659495444742
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "AutoHotkey / Autoit",
      "content": [
        {
          "label": "Fragment 1",
          "language": "autohotkey",
          "value": "#NoEnv\nSetBatchLines -1\n\nCoordMode Mouse, Screen\nOnExit GuiClose\n\nzoom := 9\n\ncomputeSize(){\n\tglobal as_x\n\tas_x := Round(ws_x/zoom/2 - 0.5)\n\tif (zoom>1) {\n\t\tpix := Round(zoom)\n\t} ele {\n\t\tpix := 1\n\t}\n    ToolTip Message %as_x% %zoom% %ws_x% %hws_x% \n}\n\nhdc_frame := DllCall(\"GetDC\", UInt, MagnifierID)\n\n; comment\nDrawCross(byRef x=\"\", rX,rY,z, dc){\n        ;specify the style, thickness and color of the cross lines\n    h_pen := DllCall( \"gdi32.dll\\CreatePen\", Int, 0, Int, 1, UInt, 0x0000FF)\n}\n\n;Ctrl ^; Shift +; Win #; Alt !\n^NumPadAdd::\n^WheelUp::   \n^;::   ;comment\n    If(zoom < ws_x and ( A_ThisHotKey = \"^WheelUp\" or A_ThisHotKey =\"^NumPadAdd\") )\n\t\tzoom *= 1.189207115         ; sqrt(sqrt(2))\n\tGosub,setZoom\nreturn\n"
        }
      ],
      "id": "h9uzH9Df",
      "createdAt": 1659495475278,
      "updatedAt": 1659495970811
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Bash / Shell",
      "content": [
        {
          "label": "Fragment 1",
          "language": "sh",
          "value": "#!/bin/sh\n\n# Script to open a browser to current branch\n# Repo formats:\n# ssh   git@github.com:richo/gh_pr.git\n# http  https://richoH@github.com/richo/gh_pr.git\n# git   git://github.com/richo/gh_pr.git\n\nusername=`git config --get github.user`\n\nget_repo() {\n    git remote -v | grep ${@:-$username} | while read remote; do\n      if repo=`echo $remote | grep -E -o \"git@github.com:[^ ]*\"`; then\n          echo $repo | sed -e \"s/^git@github\\.com://\" -e \"s/\\.git$//\"\n          exit 1\n      fi\n      if repo=`echo $remote | grep -E -o \"https?://([^@]*@)?github.com/[^ ]*\\.git\"`; then\n          echo $repo | sed -e \"s|^https?://||\" -e \"s/^.*github\\.com\\///\" -e \"s/\\.git$//\"\n          exit 1\n      fi\n      if repo=`echo $remote | grep -E -o \"git://github.com/[^ ]*\\.git\"`; then\n          echo $repo | sed -e \"s|^git://github.com/||\" -e \"s/\\.git$//\"\n          exit 1\n      fi\n    done\n\n    if [ $? -eq 0 ]; then\n        echo \"Couldn't find a valid remote\" >&2\n        exit 1\n    fi\n}\n\necho ${#x[@]}\n\nif repo=`get_repo $@`; then\n    branch=`git symbolic-ref HEAD 2>/dev/null`\n    echo \"http://github.com/$repo/pull/new/${branch##refs/heads/}\"\nelse\n    exit 1\nfi\n"
        }
      ],
      "id": "GMIZPvNc",
      "createdAt": 1659496009403,
      "updatedAt": 1659496046361
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "BatchFile",
      "content": [
        {
          "label": "Fragment 1",
          "language": "batchfile",
          "value": ":: batch file highlighting in Ace!\n@echo off\n\nCALL set var1=%cd%\necho unhide everything in %var1%!\n\n:: FOR loop in bat is super strange!\nFOR /f \"tokens=*\" %%G IN ('dir /A:D /b') DO (\necho %var1%%%G\nattrib -r -a -h -s \"%var1%%%G\" /D /S\n)\n\npause\n\nREM that's all\n"
        }
      ],
      "id": "JZ3lQT7I",
      "createdAt": 1659496051082,
      "updatedAt": 1659496082487
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "C & C++",
      "content": [
        {
          "label": "Fragment 1",
          "language": "c_cpp",
          "value": "// compound assignment operators\n\n#include <iostream>\n\n#include \\\n   <iostream>\n\n#include \\\n   \\\n   <iostream>\n\n#include \\\n   \\\n   \"iostream\"\n\n#include <boost/asio/io_service.hpp>\n#include \"boost/asio/io_service.hpp\"\n\n#include \\\n   \\\n   \"iostream\" \\\n   \"string\" \\\n   <vector>\n   \nusing namespace std;\n\n//\nint main ()\n{\n    int a, b=3; /* foobar */\n    a = b; // single line comment\\\n        continued\n    a+=2; // equivalent to a=a+2\n    cout << a;\n    #if VERBOSE >= 2\n        prints(\"trace message\\n\");\n    #endif\n    return 0;\n}\n\n/* Print an error message and get out */\n#define ABORT                             \\\n    do {                                  \\\n        print( \"Abort\\n\" );                \\\n        exit(8);                          \\\n} while (0)                      /* Note: No semicolon */"
        }
      ],
      "id": "1pea5dPy",
      "createdAt": 1659496085994,
      "updatedAt": 1659496111732
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "C#",
      "content": [
        {
          "label": "Fragment 1",
          "language": "csharp",
          "value": "public void HelloWorld() {\n    //Say Hello!\n    Console.WriteLine(\"Hello World\");\n}"
        }
      ],
      "id": "wEHTLKi1",
      "createdAt": 1659496115792,
      "updatedAt": 1659496137710
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Cirru",
      "content": [
        {
          "label": "Fragment 1",
          "language": "cirru",
          "value": "-- https://github.com/Cirru/cirru-gopher/blob/master/code/scope.cr,\n\nset a (int 2)\n\nprint (self)\n\nset c (child)\n\nunder c\n  under parent\n    print a\n\nprint $ get c a\n\nset c x (int 3)\nprint $ get c x\n\nset just-print $ code\n  print a\n\nprint just-print\n\neval (self) just-print\neval just-print\n\nprint (string \"string with space\")\nprint (string \"escapes \\n \\\"\\\\\")\n\nbrackets ((((()))))\n\n\"eval\" $ string \"eval\"\n\nprint (add $ (int 1) (int 2))\n\nprint $ unwrap $\n  map (a $ int 1) (b $ int 2)\n\nprint a\n  int 1\n  , b c\n  int 2\n  , d"
        }
      ],
      "id": "jb3ZmJqm",
      "createdAt": 1659496321101,
      "updatedAt": 1659496366135
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Clojure",
      "content": [
        {
          "label": "Fragment 1",
          "language": "clojure",
          "value": "(defn parting\n  \"returns a String parting in a given language\"\n  ([] (parting \"World\"))\n  ([name] (parting name \"en\"))\n  ([name language]\n    ; condp is similar to a case statement in other languages.\n    ; It is described in more detail later.\n    ; It is used here to take different actions based on whether the\n    ; parameter \"language\" is set to \"en\", \"es\" or something else.\n    (condp = language\n      \"en\" (str \"Goodbye, \" name)\n      \"es\" (str \"Adios, \" name)\n      (throw (IllegalArgumentException.\n        (str \"unsupported language \" language))))))\n\n(println (parting)) ; -> Goodbye, World\n(println (parting \"Mark\")) ; -> Goodbye, Mark\n(println (parting \"Mark\" \"es\")) ; -> Adios, Mark\n(println (parting \"Mark\", \"xy\")) ; -> java.lang.IllegalArgumentException: unsupported language xy"
        }
      ],
      "id": "n8stzXZu",
      "createdAt": 1659496368210,
      "updatedAt": 1659496386902
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Cobol",
      "content": [
        {
          "label": "Fragment 1",
          "language": "cobol",
          "value": "GNU    >>SOURCE FORMAT IS FIXED\nCobol *> ***************************************************************\n      *> Purpose:   Say hello to GNU Cobol\nHello *> Tectonics: cobc -x bigworld.cob\nmoney *> ***************************************************************\n       identification division.\n       program-id. bigworld.\n\nDATA   data division.\n       working-storage section.\n       01 hello                pic $$$$,$$$,$$$,$$$,$$$,$$$.99.\n       01 world                pic s9(18)v99 value zero.\n\n       01 people               pic ZZZ,ZZZ,ZZZ,ZZ9.\n       01 persons              pic 9(18) value 7182044470.\n\n       01 each                 pic 9(5)v99 value 26202.42.\n\n      *> ***************************************************************\nCODE   procedure division.\n\n       multiply persons by each giving world\n           on size error\n             display \"We did it.  We broke the world bank\" end-display\n       end-multiply\n\n       move world to hello\n       move persons to people\n\n       display \"Hello, world\" end-display\n       display \" \" end-display\n       display\n           \"On \" function locale-date(20130927)\n           \" at \" function locale-time(120000)\n           \", according to UN estimates:\" \n       end-display\n       display\n           \"You were home to some \" people  \" people,\"\n           \" with an estimated worth of \" hello\n       end-display\n\n       goback.\n       end program bigworld.\n"
        }
      ],
      "id": "OvDpcRnU",
      "createdAt": 1659496388215,
      "updatedAt": 1659496404486
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "CoffeeScipt",
      "content": [
        {
          "label": "Fragment 1",
          "language": "coffee",
          "value": "#!/usr/bin/env coffee\n\ntry\n    throw URIError decodeURI(0xC0ffee * 123456.7e-8 / .9)\ncatch e\n    console.log 'qstring' + \"qqstring\" + '''\n        qdoc\n    ''' + \"\"\"\n        qqdoc\n    \"\"\"\n\ndo ->\n    ###\n    herecomment\n    ###\n    re = /regex/imgy.test ///\n        heregex  # comment\n    ///imgy\n    this isnt: `just JavaScript`\n    undefined\n    \nsentence = \"#{ 22 / 7 } is a decent approximation of π\""
        }
      ],
      "id": "mtXYn9sv",
      "createdAt": 1659496405486,
      "updatedAt": 1659496434410
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "ColdFusion",
      "content": [
        {
          "label": "Fragment 1",
          "language": "coldfusion",
          "value": "<!--- hello world --->\n\n<cfset welcome=\"Hello World!\">\n\n<cfoutput>#welcome#</cfoutput>"
        }
      ],
      "id": "5M0DEhNa",
      "createdAt": 1659496437877,
      "updatedAt": 1659496663556
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Crystal",
      "content": [
        {
          "label": "Fragment 1",
          "language": "crystal",
          "value": "# crystal comment\n\nrequire \"llvm\"\n\nNUM_CELLS          = 30000\nCELL_SIZE_IN_BYTES =     1\n\nabstract class Instruction\n  abstract def compile(program, bb)\nend\n\nclass Increment < Instruction\n  def initialize(@amount : Int32)\n  end\n\n  def compile(program, bb)\n    cell_val_is_zero = builder.icmp LLVM::IntPredicate::EQ, cell_val, zero\n    call_args = [@ctx.int32.const_int(NUM_CELLS), @ctx.int32.const_int(CELL_SIZE_IN_BYTES)]\n    builder.cond cell_val_is_zero, loop_after, loop_body_block\n\n    @body.each do |instruction|\n      loop_body_block = instruction.compile(program, loop_body_block)\n    end\n\n    builder.position_at_end loop_body_block\n\n    unless matching_close_index\n      error \"Unmatched '[' at position #{i}\"\n    end\n\n    bb\n  end\nend\n"
        }
      ],
      "id": "dAN42Kbk",
      "createdAt": 1659496807660,
      "updatedAt": 1659496827338
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Csound",
      "content": [
        {
          "label": "Fragment 1",
          "language": "csound_orchestra",
          "value": "/*\n * comment\n */\n; comment\n// comment\n\ninstr/**/1,/**/N_a_M_e_,/**/+Name/**///\n  iDuration = p3\n  outc:a(aSignal)\nendin\n\nopcode/**/aUDO,/**/i[],/**/aik//\n  aUDO\nendop\n\n123 0123456789\n0xabcdef0123456789 0XABCDEF\n1e2 3e+4 5e-6 7E8 9E+0 1E-2 3. 4.56 .789\n\n\"characters$MACRO.\"\n\"\\\\\\a\\b\\n\\r\\t\\012\\345\\67\\\"\"\n\n{{\ncharacters$MACRO.\n}}\n{{\\\\\\a\\b\\n\\r\\t\\\"\\012\\345\\67}}\n\n+ - ~ ¬ ! * / ^ % << >> < > <= >= == != & # | && || ? : += -= *= /=\n\n0dbfs A4 kr ksmps nchnls nchnls_i sr\n\ndo else elseif endif enduntil fi if ithen kthen od then until while\nreturn rireturn\n\naLabel:\n label2:\n\ngoto aLabel\nreinit aLabel\ncggoto 1==0, aLabel\ntimout 0, 0, aLabel\nloop_ge 0, 0, 0, aLabel\n\nreadscore {{\ni 1 0 0\n}}\npyrun {{\n# Python\n}}\nlua_exec {{\n-- Lua\n}}\n\n#include/**/\"file.udo\"\n#include/**/|file.udo|\n\n#ifdef MACRO\n#else\n#ifndef MACRO\n#endif\n#undef MACRO\n\n#   define MACRO#macro_body#\n#define/**/\nMACRO/**/\n#\\#macro\nbody\\##\n\n#define MACRO(ARG1#ARG2) #macro_body#\n#define/**/\nMACRO(ARG1'ARG2'ARG3)/**/\n#\\#macro\nbody\\##\n\n$MACRO $MACRO.\n$MACRO(x)\n@0\n@@ 1\n$MACRO.(((x#y\\)))' \"(#'x)\\)x\\))\"# {{x\\))x)\\)(#'}});\n"
        }
      ],
      "id": "B3duvVHk",
      "createdAt": 1659496829249,
      "updatedAt": 1659496898816
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Csound Document",
      "content": [
        {
          "label": "Fragment 1",
          "language": "csound_document",
          "value": "text\n<CsoundSynthesizer>\n<CsInstruments>\n0dbfs = 1\nprints \"hello, world\\n\"\n</CsInstruments>\n<CsScore>\ni 1 0 0\n</CsScore>\n<html>\n<!DOCTYPE html>\n</html>\n</CsoundSynthesizer>\n"
        }
      ],
      "id": "u9rXri7I",
      "createdAt": 1659496900901,
      "updatedAt": 1659496925580
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Csound Score",
      "content": [
        {
          "label": "Fragment 1",
          "language": "csound_score",
          "value": "/*\n * comment\n */\n; comment\n// comment\na B b C d e f i q s t v x y\nz\nnp0 nP1 Np2 NP3\nm/**/label;\nn label\n123 0123456789\n0xabcdef0123456789 0XABCDEF\n1e2 3e+4 5e-6 7E8 9E+0 1E-2 3. 4.56 .789\n\"characters$MACRO.\"\n{ 1 I\n  { 2 J\n    { 3 K\n      $I $J $K\n    }\n  }\n}\n#include \"score.sco\"\n"
        }
      ],
      "id": "WPZVP1_O",
      "createdAt": 1659496928964,
      "updatedAt": 1659497009485
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "CSS",
      "content": [
        {
          "label": "Fragment 1",
          "language": "css",
          "value": ".text-layer {\n    font: 12px Monaco, \"Courier New\", monospace;\n    font-size: 3vmin;\n    cursor: text;\n}\n\n.blinker {\n    animation: blink 1s linear infinite alternate;\n}\n\n@keyframes blink {\n    0%, 40% {\n        opacity: 0; /*\n        */\n        opacity: 1\n    }\n\n    40.5%, 100% {\n        opacity: 1\n    }\n}\n\n@document url(http://c9.io/), url-prefix(http://ace.c9.io/build/),\n   domain(c9.io), regexp(\"https:.*\") /**/\n{\n    /**/\n    img[title]:before \n    {\n        content: attr(title) \"\\AImage \\\n            retrieved from\"\n            attr(src); /*\n            */\n        white-space: pre;\n        display: block;\n        background: url(asdasd); \"err\n    }\n}\n\n@viewport {\n    min-zoom: 1;\n    max-zoom: 200%;\n    user-zoom: fixed;\n}\n"
        }
      ],
      "id": "kmxoH0Wa",
      "createdAt": 1659497023275,
      "updatedAt": 1659497059514
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Curly",
      "content": [
        {
          "label": "Fragment 1",
          "language": "curly",
          "value": "<html>\n    <head>\n\n    <style type=\"text/css\">\n        .text-layer {\n            font-family: Monaco, \"Courier New\", monospace;\n            font-size: 12px;\n            cursor: text;\n        }\n    </style>\n\n    </head>\n    <body>\n        <h1 style=\"color:red\">{{author_name}}</h1>\n    </body>\n</html>\n"
        }
      ],
      "id": "W4SWjdMO",
      "createdAt": 1659497060906,
      "updatedAt": 1659497085847
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "D",
      "content": [
        {
          "label": "Fragment 1",
          "language": "d",
          "value": "#!/usr/bin/env rdmd\n// Computes average line length for standard input.\nimport std.stdio;\n\nvoid main() {\n    ulong lines = 0;\n    double sumLength = 0;\n    foreach (line; stdin.byLine()) {\n        ++lines;\n        sumLength += line.length;\n    }\n    writeln(\"Average line length: \",\n        lines ? sumLength / lines : 0);\n}"
        }
      ],
      "id": "GNeWkatM",
      "createdAt": 1659497081648,
      "updatedAt": 1659497109051
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Dart",
      "content": [
        {
          "label": "Fragment 1",
          "language": "dart",
          "value": "// Go ahead and modify this example.\n\nimport \"dart:html\";\n\n// Computes the nth Fibonacci number.\nint fibonacci(int n) {\n  if (n < 2) return n;\n  return fibonacci(n - 1) + fibonacci(n - 2);\n}\n\n// Displays a Fibonacci number.\nvoid main() {\n  int i = 20;\n  String message = \"fibonacci($i) = ${fibonacci(i)}\";\n\n  // This example uses HTML to display the result and it will appear\n  // in a nested HTML frame (an iframe).\n  document.body.append(new HeadingElement.h1()..appendText(message));\n}\n"
        }
      ],
      "id": "Nw7CRmhq",
      "createdAt": 1659497110578,
      "updatedAt": 1659497122970
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Diff",
      "content": [
        {
          "label": "Fragment 1",
          "language": "diff",
          "value": "diff --git a/lib/ace/edit_session.js b/lib/ace/edit_session.js\nindex 23fc3fc..ed3b273 100644\n--- a/lib/ace/edit_session.js\n+++ b/lib/ace/edit_session.js\n@@ -51,6 +51,7 @@ var TextMode = require(\"./mode/text\").Mode;\n var Range = require(\"./range\").Range;\n var Document = require(\"./document\").Document;\n var BackgroundTokenizer = require(\"./background_tokenizer\").BackgroundTokenizer;\n+var SearchHighlight = require(\"./search_highlight\").SearchHighlight;\n \n /**\n  * class EditSession\n@@ -307,6 +308,13 @@ var EditSession = function(text, mode) {\n         return token;\n     };\n \n+    this.highlight = function(re) {\n+        if (!this.$searchHighlight) {\n+            var highlight = new SearchHighlight(null, \"ace_selected-word\", \"text\");\n+            this.$searchHighlight = this.addDynamicMarker(highlight);\n+        }\n+        this.$searchHighlight.setRegexp(re);\n+    }\n     /**\n     * EditSession.setUndoManager(undoManager)\n     * - undoManager (UndoManager): The new undo manager\n@@ -556,7 +564,8 @@ var EditSession = function(text, mode) {\n             type : type || \"line\",\n             renderer: typeof type == \"function\" ? type : null,\n             clazz : clazz,\n-            inFront: !!inFront\n+            inFront: !!inFront,\n+            id: id\n         }\n \n         if (inFront) {\ndiff --git a/lib/ace/editor.js b/lib/ace/editor.js\nindex 834e603..b27ec73 100644\n--- a/lib/ace/editor.js\n+++ b/lib/ace/editor.js\n@@ -494,7 +494,7 @@ var Editor = function(renderer, session) {\n      * Emitted when a selection has changed.\n      **/\n     this.onSelectionChange = function(e) {\n-        var session = this.getSession();\n+        var session = this.session;\n \n         if (session.$selectionMarker) {\n             session.removeMarker(session.$selectionMarker);\n@@ -509,12 +509,40 @@ var Editor = function(renderer, session) {\n             this.$updateHighlightActiveLine();\n         }\n \n-        var self = this;\n-        if (this.$highlightSelectedWord && !this.$wordHighlightTimer)\n-            this.$wordHighlightTimer = setTimeout(function() {\n-                self.session.$mode.highlightSelection(self);\n-                self.$wordHighlightTimer = null;\n-            }, 30, this);\n+        var re = this.$highlightSelectedWord && this.$getSelectionHighLightRegexp()\n     };\ndiff --git a/lib/ace/search_highlight.js b/lib/ace/search_highlight.js\nnew file mode 100644\nindex 0000000..b2df779\n--- /dev/null\n+++ b/lib/ace/search_highlight.js\n@@ -0,0 +1,3 @@\n+new\n+empty file"
        }
      ],
      "id": "XVlqRbTf",
      "createdAt": 1659497123657,
      "updatedAt": 1659497359400
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Django",
      "content": [
        {
          "label": "Fragment 1",
          "language": "django",
          "value": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  {% block title %}<title>Local Library</title>{% endblock %}\n</head>\n<body>\n  {% block sidebar %}<!-- insert default navigation text for every page -->{% endblock %}\n  {% block content %}<!-- default content text (typically empty) -->{% endblock %}\n</body>\n</html>"
        }
      ],
      "id": "SlHomc5j",
      "createdAt": 1659497360765,
      "updatedAt": 1659498962118
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Dockerfile",
      "content": [
        {
          "label": "Fragment 1",
          "language": "dockerfile",
          "value": "#\n# example Dockerfile for http://docs.docker.io/en/latest/examples/postgresql_service/\n#\n\nFROM ubuntu\nMAINTAINER SvenDowideit@docker.com\n\n# Add the PostgreSQL PGP key to verify their Debian packages.\n# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc \nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\n\n# Add PostgreSQL's repository. It contains the most recent stable release\n#     of PostgreSQL, ``9.3``.\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n\n# Update the Ubuntu and PostgreSQL repository indexes\nRUN apt-get update\n\n# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3\n#  There are some warnings (in red) that show up during the build. You can hide\n#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive\nRUN apt-get -y -q install python-software-properties software-properties-common\nRUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3\n\n# Note: The official Debian and Ubuntu images automatically ``apt-get clean``\n# after each ``apt-get`` \n\n# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``\nUSER postgres\n\n# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and\n# then create a database `docker` owned by the ``docker`` role.\n# Note: here we use ``&&\\`` to run commands one after the other - the ``\\``\n#       allows the RUN command to span multiple lines.\nRUN    /etc/init.d/postgresql start &&\\\n    psql --command \"CREATE USER docker WITH SUPERUSER PASSWORD 'docker';\" &&\\\n    createdb -O docker docker\n\n# Adjust PostgreSQL configuration so that remote connections to the\n# database are possible. \nRUN echo \"host all  all    0.0.0.0/0  md5\" >> /etc/postgresql/9.3/main/pg_hba.conf\n\n# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/9.3/main/postgresql.conf\n\n# Expose the PostgreSQL port\nEXPOSE 5432\n\n# Add VOLUMEs to allow backup of config, logs and databases\nVOLUME\t[\"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\"]\n\n# Set the default command to run when starting the container\nCMD [\"/usr/lib/postgresql/9.3/bin/postgres\", \"-D\", \"/var/lib/postgresql/9.3/main\", \"-c\", \"config_file=/etc/postgresql/9.3/main/postgresql.conf\"]"
        }
      ],
      "id": "zARrocL3",
      "createdAt": 1659497758750,
      "updatedAt": 1659497805813
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Dot",
      "content": [
        {
          "label": "Fragment 1",
          "language": "dot",
          "value": "// Original source: http://www.graphviz.org/content/lion_share\n##\"A few people in the field of genetics are using dot to draw \"marriage node diagram\"  pedigree drawings.  Here is one I have done of a test pedigree from the FTREE pedigree drawing package (Lion Share was a racehorse).\" Contributed by David Duffy.\n\n##Command to get the layout: \"dot -Tpng thisfile > thisfile.png\"\n\ndigraph Ped_Lion_Share           {\n# page = \"8.2677165,11.692913\" ;\nratio = \"auto\" ;\nmincross = 2.0 ;\nlabel = \"Pedigree Lion_Share\" ;\n\n\"001\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"002\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"003\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"004\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"005\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"006\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"007\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"009\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"014\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"015\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"016\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"ZZ01\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"ZZ02\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"017\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"012\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"008\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"011\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"013\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"010\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"023\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"020\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"021\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"018\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"025\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"019\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"022\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"024\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"027\" [shape=circle  , regular=1,style=filled,fillcolor=white   ] ;\n\"026\" [shape=box     , regular=1,style=filled,fillcolor=white   ] ;\n\"028\" [shape=box     , regular=1,style=filled,fillcolor=grey    ] ;\n\"marr0001\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"001\" -> \"marr0001\" [dir=none,weight=1] ;\n\"007\" -> \"marr0001\" [dir=none,weight=1] ;\n\"marr0001\" -> \"017\" [dir=none, weight=2] ;\n\"marr0002\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"001\" -> \"marr0002\" [dir=none,weight=1] ;\n\"ZZ02\" -> \"marr0002\" [dir=none,weight=1] ;\n\"marr0002\" -> \"012\" [dir=none, weight=2] ;\n\"marr0003\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"002\" -> \"marr0003\" [dir=none,weight=1] ;\n\"003\" -> \"marr0003\" [dir=none,weight=1] ;\n\"marr0003\" -> \"008\" [dir=none, weight=2] ;\n\"marr0004\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"002\" -> \"marr0004\" [dir=none,weight=1] ;\n\"006\" -> \"marr0004\" [dir=none,weight=1] ;\n\"marr0004\" -> \"011\" [dir=none, weight=2] ;\n\"marr0005\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"002\" -> \"marr0005\" [dir=none,weight=1] ;\n\"ZZ01\" -> \"marr0005\" [dir=none,weight=1] ;\n\"marr0005\" -> \"013\" [dir=none, weight=2] ;\n\"marr0006\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"004\" -> \"marr0006\" [dir=none,weight=1] ;\n\"009\" -> \"marr0006\" [dir=none,weight=1] ;\n\"marr0006\" -> \"010\" [dir=none, weight=2] ;\n\"marr0007\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"005\" -> \"marr0007\" [dir=none,weight=1] ;\n\"015\" -> \"marr0007\" [dir=none,weight=1] ;\n\"marr0007\" -> \"023\" [dir=none, weight=2] ;\n\"marr0008\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"005\" -> \"marr0008\" [dir=none,weight=1] ;\n\"016\" -> \"marr0008\" [dir=none,weight=1] ;\n\"marr0008\" -> \"020\" [dir=none, weight=2] ;\n\"marr0009\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"005\" -> \"marr0009\" [dir=none,weight=1] ;\n\"012\" -> \"marr0009\" [dir=none,weight=1] ;\n\"marr0009\" -> \"021\" [dir=none, weight=2] ;\n\"marr0010\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"008\" -> \"marr0010\" [dir=none,weight=1] ;\n\"017\" -> \"marr0010\" [dir=none,weight=1] ;\n\"marr0010\" -> \"018\" [dir=none, weight=2] ;\n\"marr0011\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"011\" -> \"marr0011\" [dir=none,weight=1] ;\n\"023\" -> \"marr0011\" [dir=none,weight=1] ;\n\"marr0011\" -> \"025\" [dir=none, weight=2] ;\n\"marr0012\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"013\" -> \"marr0012\" [dir=none,weight=1] ;\n\"014\" -> \"marr0012\" [dir=none,weight=1] ;\n\"marr0012\" -> \"019\" [dir=none, weight=2] ;\n\"marr0013\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"010\" -> \"marr0013\" [dir=none,weight=1] ;\n\"021\" -> \"marr0013\" [dir=none,weight=1] ;\n\"marr0013\" -> \"022\" [dir=none, weight=2] ;\n\"marr0014\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"019\" -> \"marr0014\" [dir=none,weight=1] ;\n\"020\" -> \"marr0014\" [dir=none,weight=1] ;\n\"marr0014\" -> \"024\" [dir=none, weight=2] ;\n\"marr0015\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"022\" -> \"marr0015\" [dir=none,weight=1] ;\n\"025\" -> \"marr0015\" [dir=none,weight=1] ;\n\"marr0015\" -> \"027\" [dir=none, weight=2] ;\n\"marr0016\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"024\" -> \"marr0016\" [dir=none,weight=1] ;\n\"018\" -> \"marr0016\" [dir=none,weight=1] ;\n\"marr0016\" -> \"026\" [dir=none, weight=2] ;\n\"marr0017\" [shape=diamond,style=filled,label=\"\",height=.1,width=.1] ;\n\"026\" -> \"marr0017\" [dir=none,weight=1] ;\n\"027\" -> \"marr0017\" [dir=none,weight=1] ;\n\"marr0017\" -> \"028\" [dir=none, weight=2] ;\n}\n"
        }
      ],
      "id": "zsE7DGS6",
      "createdAt": 1659497806776,
      "updatedAt": 1659497822789
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Drools",
      "content": [
        {
          "label": "Fragment 1",
          "language": "drools",
          "value": "/*\n * Copyright 2010 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n Original source\n https://github.com/droolsjbpm/drools/blob/master/drools-examples/\n http://docs.jboss.org/drools/\n*/\npackage com.example.ace\n\nimport java.math.BigDecimal\nimport function my.package.Foo.hello\n\ndeclare FactType\n  @author( Bob )\n  id : String\n  name : String @maxLength(100) @notnull\n\n  value : BigDecimal\nend\n\ndeclare FactType2 extends AnotherType\nend\n\ndeclare trait TraitType extends com.package.AnotherType\nend\n\n\ndeclare trait GoldenCustomer\n    balance : long @Alias( \"org.acme.foo.accountBalance\" )\nend\n\nglobal org.slf4j.Logger logger\n\n/**\n * @param name who we'll salute?\n */\nfunction String hello(String name) {\n    return \"Hello \"+name+\"!\";\n}\n\nrule \"Trim all strings\"\n  dialect \"java\"\n  no-loop\nwhen // fdsfds\n  $s : String(a == null || == \"empty\", $g : size)\n  Cheese( name matches \"(Buffalo)?\\\\S*Mozarella\" )\n    CheeseCounter( cheeses contains $var ) // contains with a variable\n    CheeseCounter( cheese memberof $matureCheeses )\n    Cheese( name soundslike 'foobar' )\n    Message( routingValue str[startsWith] \"R1\" )\n    Cheese( name in ( \"stilton\", \"cheddar\", $cheese ) )\n    Person( eval( age == girlAge + 2 ), sex = 'M' )\nthen\n  /**\n   * TODO There mus be better way\n   */\n  retract($s);\n  String a = \"fd\";\n  a.toString();\n\n  insert($s.trim());\nend\n\nquery isContainedIn( String x, String y )\n  Location( x, y; )\n  or\n  ( Location( z, y; ) and isContainedIn( x, z; ) )\nend\n\nrule \"go\" salience 10\nwhen\n    $s : String(  )\nthen\n    System.out.println( $s );\nend\n\nrule \"When all English buses are not red\"\nwhen\n    not(forall( $bus : Bus( nationality == 'english')\n                Bus( this == $bus, color = 'red' ) ))\nthen\n    // What if all english buses are not red?\nend\n\nrule \"go1\"\nwhen\n    String( this == \"go1\" )\n    isContainedIn(\"Office\", \"House\"; )\nthen\n    System.out.println( \"office is in the house\" );\nend\n\nrule \"go2\"\nwhen\n    String( this == \"go2\" )\n    isContainedIn(\"Draw\", \"House\"; )\nthen\n    System.out.println( \"Draw in the House\" );\nend\n\n/**\n * Go Right\n */\nrule GoRight dialect \"mvel\"  salience (Math.abs( $df.colDiff ))  when\n    $df   : DirectionDiff(colDiff > 0 )\n    $target : Cell(  row == $df.row, col == ($df.col + 1) )\n    CellContents( cell == $target, cellType != CellType.WALL )\n    not Direction(character == $df.fromChar, horizontal == Direction.RIGHT )\nthen\n    System.out.println( \"monster right\" );\n    retract( $df );\n    insert( new Direction($df.fromChar, Direction.RIGHT, Direction.NONE ) );\nend\n"
        }
      ],
      "id": "q7ltgu98",
      "createdAt": 1659497823169,
      "updatedAt": 1659497838753
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Eifact",
      "content": [
        {
          "label": "Fragment 1",
          "language": "edifact",
          "value": "UNB+UNOA:1+005435656:1+006415160:1+060515:1434+00000000000778'\nUNH+00000000000117+INVnrOIC:D:97B:UN'\nBGM+380+342459+9'\nDTM+3:20060515:102'\nRFF+ON:521052'\nNAD+BY+792820524::16++CUMMINS MID-RANGE ENGINE PLANT'\nNAD+SE+005435656::16++GENERAL WIDGET COMPANY'\nCUX+1:USD'\nLIN+1++157870:IN'\nIMD+F++:::WIDGET'\nQTY+47:1020:EA'\nALI+US'\nMOA+203:1202.58'\nPRI+INV:1.179'\nLIN+2++157871:IN'\nIMD+F++:::DIFFERENT WIDGET'\nQTY+47:20:EA'\nALI+JP'\nMOA+203:410'\nPRI+INV:20.5'\nUNS+S'\nMOA+39:2137.58'\nALC+C+ABG'\nMOA+8:525'\nUNT+23+00000000000117'\nUNZ+1+00000000000778'"
        }
      ],
      "id": "kd4AwKPE",
      "createdAt": 1659497839277,
      "updatedAt": 1659497866736
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Eiffel",
      "content": [
        {
          "label": "Fragment 1",
          "language": "eiffel",
          "value": "note\n\tdescription: \"Represents a person.\"\n\nclass\n\tPERSON\n\ncreate\n\tmake, make_unknown\n\nfeature {NONE} -- Creation\n\n\tmake (a_name: like name)\n\t\t\t-- Create a person with `a_name' as `name'.\n\t\tdo\n\t\t\tname := a_name\n\t\tensure\n\t\t\tname = a_name\n\t\tend\n\n\tmake_unknown\n\t\tdo ensure\n\t\t\tname = Void\n\t\tend\n\nfeature -- Access\n\n\tname: detachable STRING\n\t\t\t-- Full name or Void if unknown.\n\nend"
        }
      ],
      "id": "oLy18nv7",
      "createdAt": 1659498171205,
      "updatedAt": 1659498199263
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "EJS",
      "content": [
        {
          "label": "Fragment 1",
          "language": "ejs",
          "value": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Cloud9 Rocks!</title>\n    </head>\n    <body>\n\n    <table class=\"table\">\n        <tr>\n            <th>Name</th>\n            <th>Size</th>\n        </tr>\n        <% if (!isRoot) { %>\n            <tr>\n                <td><a href=\"..\">..</a></td>\n                <td></td></td>\n            </tr>\n        <% } %>\n        <% entries.forEach(function(entry) { %>\n            <tr>\n                <td>\n                    <span class=\"glyphicon <%= entry.mime == 'directory' ? 'folder': 'file'%>\"></span>\n                    <a href=\"<%= entry.name %>\"><%= entry.name %></a>\n                </td>\n                <td><%= entry.size %></td>\n            </tr>\n        <% }) %>\n    </table>\n    \n    </body>\n</html>"
        }
      ],
      "id": "RfTqVA-l",
      "createdAt": 1659498199950,
      "updatedAt": 1659498217270
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Elixir",
      "content": [
        {
          "label": "Fragment 1",
          "language": "elixir",
          "value": "defmodule HelloModule do\n  @moduledoc \"\"\"\n    This is supposed to be `markdown`.\n    __Yes__ this is [mark](http://down.format)\n\n    # Truly\n\n    ## marked\n\n    * with lists\n    * more\n    * and more\n\n        Even.with(code)\n        blocks |> with |> samples\n\n    _Docs are first class citizens in Elixir_ (Jose Valim)\n  \"\"\"\n  \n  # A \"Hello world\" function\n  def some_fun do\n    IO.puts \"Juhu Kinners!\"\n  end\n  # A private function\n  defp priv do\n    is_regex ~r\"\"\"\n       This is a regex\n       spanning several\n       lines.\n    \"\"\"\n    x = elem({ :a, :b, :c }, 0)  #=> :a\n  end\nend\n\ntest_fun = fn(x) ->\n  cond do\n    x > 10 ->\n      :greater_than_ten\n    true ->\n      :maybe_ten\n  end\nend"
        }
      ],
      "id": "S7aN9gmR",
      "createdAt": 1659498217656,
      "updatedAt": 1659498236110
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Elm",
      "content": [
        {
          "label": "Fragment 1",
          "language": "elm",
          "value": "{- Ace {- 4 -} Elm -}\nmain = lift clock (every second)\n\nclock t = collage 400 400 [ filled    lightGrey   (ngon 12 110)\n                          , outlined (solid grey) (ngon 12 110)\n                          , hand orange   100  t\n                          , hand charcoal 100 (t/60)\n                          , hand charcoal 60  (t/720) ]\n\nhand clr len time =\n  let angle = degrees (90 - 6 * inSeconds time)\n  in  traced (solid clr) <| segment (0,0) (len * cos angle, len * sin angle)"
        }
      ],
      "id": "EymKD1vg",
      "createdAt": 1659498236614,
      "updatedAt": 1659498253750
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Erlang",
      "content": [
        {
          "label": "Fragment 1",
          "language": "erlang",
          "value": "  %% A process whose only job is to keep a counter.\n  %% First version\n  -module(counter).\n  -export([start/0, codeswitch/1]).\n \n  start() -> loop(0).\n \n  loop(Sum) ->\n    receive\n       {increment, Count} ->\n          loop(Sum+Count);\n       {counter, Pid} ->\n          Pid ! {counter, Sum},\n          loop(Sum);\n       code_switch ->\n          ?MODULE:codeswitch(Sum)\n          % Force the use of 'codeswitch/1' from the latest MODULE version\n    end.\n \n  codeswitch(Sum) -> loop(Sum)."
        }
      ],
      "id": "kab7H40N",
      "createdAt": 1659498254110,
      "updatedAt": 1659498269387
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Forth",
      "content": [
        {
          "label": "Fragment 1",
          "language": "forth",
          "value": ": HELLO  ( -- )  CR .\" Hello, world!\" ; \n\nHELLO <cr>\nHello, world!\n\n: [CHAR]   CHAR  POSTPONE LITERAL ; IMMEDIATE\n\n0 value ii        0 value jj\n0 value KeyAddr   0 value KeyLen\ncreate SArray   256 allot   \\ state array of 256 bytes\n: KeyArray      KeyLen mod   KeyAddr ;\n\n: get_byte      + c@ ;\n: set_byte      + c! ;\n: as_byte       255 and ;\n: reset_ij      0 TO ii   0 TO jj ;\n: i_update      1 +   as_byte TO ii ;\n: j_update      ii SArray get_byte +   as_byte TO jj ;\n: swap_s_ij\n    jj SArray get_byte\n       ii SArray get_byte  jj SArray set_byte\n    ii SArray set_byte\n;\n\n: rc4_init ( KeyAddr KeyLen -- )\n    256 min TO KeyLen   TO KeyAddr\n    256 0 DO   i i SArray set_byte   LOOP\n    reset_ij\n    BEGIN\n        ii KeyArray get_byte   jj +  j_update\n        swap_s_ij\n        ii 255 < WHILE\n        ii i_update\n    REPEAT\n    reset_ij\n;\n: rc4_byte\n    ii i_update   jj j_update\n    swap_s_ij\n    ii SArray get_byte   jj SArray get_byte +   as_byte SArray get_byte  xor\n;"
        }
      ],
      "id": "WJIVTmus",
      "createdAt": 1659498306633,
      "updatedAt": 1659498343211
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Fortran",
      "content": [
        {
          "label": "Fragment 1",
          "language": "fortran",
          "value": "PROGRAM Triangle\n     IMPLICIT NONE\n     REAL :: a, b, c, Area\n     PRINT *, 'Welcome, please enter the&\n              &lengths of the 3 sides.'\n     READ *, a, b, c\n     PRINT *, 'Triangle''s area:  ', Area(a,b,c)\n    END PROGRAM Triangle\n    FUNCTION Area(x,y,z)\n     IMPLICIT NONE\n     REAL :: Area            ! function type\n     REAL, INTENT( IN ) :: x, y, z\n     REAL :: theta, height\n     theta = ACOS((x**2+y**2-z**2)/(2.0*x*y))\n     height = x*SIN(theta); Area = 0.5*y*height\n    END FUNCTION Area\n"
        }
      ],
      "id": "xg3FwrCH",
      "createdAt": 1659498365921,
      "updatedAt": 1659498805349
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "F#",
      "content": [
        {
          "label": "Fragment 1",
          "language": "fsharp",
          "value": "(* fsharp (* example *) *)\nmodule Test =\n    let (*) x y = (x + y)\n    let func1 x = \n        if x < 100 then\n            x*x\n        else\n            x*x + 1\n    let list = (-1, 42) :: [ for i in 0 .. 99 -> (i, func1(i)) ]\n    let verbatim = @\"c:\\Program \"\" Files\\\"\n    let trippleQuote = \"\"\" \"hello world\" \"\"\"\n    \n    // print\n    printfn \"The table of squares from 0 to 99 is:\\n%A\" list"
        }
      ],
      "id": "4PuKBcrb",
      "createdAt": 1659498639352,
      "updatedAt": 1659498656593
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Gcode",
      "content": [
        {
          "label": "Fragment 1",
          "language": "gcode",
          "value": "O003 (DIAMOND SQUARE)\nN2 G54 G90 G49 G80\nN3 M6 T1 (1.ENDMILL)\nN4 M3 S1800\nN5 G0 X-.6 Y2.050\nN6 G43  H1  Z.1\nN7 G1 Z-.3 F50.\nN8 G41 D1 Y1.45\nN9 G1 X0 F20.\nN10 G2 J-1.45\n(CUTTER COMP CANCEL)\nN11 G1 Z-.2 F50.\nN12 Y-.990\nN13 G40\nN14 G0 X-.6 Y1.590\nN15 G0 Z.1\nN16 M5 G49 G28 G91 Z0\nN17 CALL O9456\nN18 #500=0.004\nN19 #503=[#500+#501]\nN20 VC45=0.0006\nVS4=0.0007\nN21 G90 G10 L20 P3 X5.Y4. Z6.567\nN22 G0 X5000\nN23 IF [#1 LT 0.370] GOTO 49\nN24 X-0.678 Y+.990\nN25 G84.3 X-0.1\nN26 #4=#5*COS[45]\nN27 #4=#5*SIN[45]\nN28 VZOFZ=652.9658\n%"
        }
      ],
      "id": "Yh1m0JPQ",
      "createdAt": 1659498659758,
      "updatedAt": 1659498686965
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Gherkin",
      "content": [
        {
          "label": "Fragment 1",
          "language": "gherkin",
          "value": "@these @_are_ @tags\nFeature: Serve coffee\n  Coffee should not be served until paid for\n  Coffee should not be served until the button has been pressed\n  If there is no coffee left then money should be refunded\n  \n  Scenario Outline: Eating\n    Given there are <start> cucumbers\n    When I eat <eat> cucumbers\n    Then I should have <left> cucumbers\n\n    Examples:\n      | start | eat | left |\n      |  12   |  5  |  7   |\n      |  @20  |  5  |  15  |    \n\n  Scenario: Buy last coffee\n    Given there are 1 coffees left in the machine\n    And I have deposited 1$ \n    When I press the coffee button\n    Then I should be served a \"coffee\"\n    \n  # this a comment\n  \n  \"\"\"\n  this is a \n  pystring\n  \"\"\""
        }
      ],
      "id": "f1l2o8sf",
      "createdAt": 1659498687836,
      "updatedAt": 1659498719160
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Gitignore",
      "content": [
        {
          "label": "Fragment 1",
          "language": "gitignore",
          "value": "node_modules\ndist\nbuild\n\n.vscode\n.idea\n.DS_Store\nsrc/renderer/types/auto-imports.d.ts\nsrc/renderer/types/components.d.ts\n*.log\n*.local\n"
        }
      ],
      "id": "aixATt95",
      "createdAt": 1659498731868,
      "updatedAt": 1659499011678
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Glsl",
      "content": [
        {
          "label": "Fragment 1",
          "language": "glsl",
          "value": "uniform float amplitude;\nattribute float displacement;\nvarying vec3 vNormal;\n\nvoid main() {\n\n    vNormal = normal;\n  \n    // multiply our displacement by the\n    // amplitude. The amp will get animated\n    // so we'll have animated displacement\n    vec3 newPosition = position + \n                       normal * \n                       vec3(displacement *\n                            amplitude);\n\n    gl_Position = projectionMatrix *\n                  modelViewMatrix *\n                  vec4(newPosition,1.0);\n}"
        }
      ],
      "id": "R8q5LruR",
      "createdAt": 1659499012808,
      "updatedAt": 1659499050984
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Go",
      "content": [
        {
          "label": "Fragment 1",
          "language": "golang",
          "value": "// Concurrent computation of pi.\n// See http://goo.gl/ZuTZM.\n//\n// This demonstrates Go's ability to handle\n// large numbers of concurrent processes.\n// It is an unreasonable way to calculate pi.\npackage main\n\nimport (\n    \"fmt\"\n    \"math\"\n)\n\nfunc main() {\n    fmt.Println(pi(5000))\n}\n\n// pi launches n goroutines to compute an\n// approximation of pi.\nfunc pi(n int) float64 {\n    ch := make(chan float64)\n    for k := 0; k <= n; k++ {\n        go term(ch, float64(k))\n    }\n    f := 0.0\n    for k := 0; k <= n; k++ {\n        f += <-ch\n    }\n    return f\n}\n\nfunc term(ch chan float64, k float64) {\n    ch <- 4 * math.Pow(-1, k) / (2*k + 1)\n}\n"
        }
      ],
      "id": "Zckb3-bZ",
      "createdAt": 1659499052602,
      "updatedAt": 1659499067400
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "GraphQL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "graphqlschema",
          "value": "# Main Schema\nschema {\n\tquery: Query;\n}\n\nscalar Date;\n\n# Simple type to contain all scalar types\ntype AllTypes {\n\t# Field Description for String\n\ttestString: String;\n\t# Field Description for Int\n\ttestInt: Int;\n\t# Field Description for ID\n\ttestID: ID;\n\t# Field Description for Boolean\n\ttestBoolean: Boolean;\n\t# Field Description for Float\n\ttestFloat: Float;\n}\n\ninterface ISearchable {\n    searchPreview: String!;\n}\n\nunion ProductTypes = Movie | Book;\n\n# Testing enum\nenum MovieGenere {\n    ACTION\n    COMEDY\n    THRILLER\n    DRAMA\n}\n\n# Testing Input\ninput SearchByGenere {\n\tbefore: Date;\n\tafter: Date;\n\tgenere: MovieGenere!;\n}\n\n# Testing Interface\ntype Movie implements ISearchable {\n\tid: ID!;\n\tsearchPreview: String!;\n\trentPrice: Float;\n\tpublishDate: Date;\n\tgenere: MovieGenere;\n\tcast: [String];\n}\n\n# Testing Interface\ntype Book implements ISearchable {\n    id: ID!;\n\tsearchPreview: String!;\n\tprice: Float;\n\tpublishDate: Date;\n\tauthors: [String];\n}\n\ntype Query {\n\ttestString: String;\n\ttestDate; Date;\n\tallTypes: AllTypes;\n\tallProducts: [ProductTypes];\n\n\t# searches only movies by genere with sophisticated argument\n\tsearchMovieByGenere(searchObject: SearchByGenere!): [Movie];\n\n\t# Searchs all products by text string\n\tsearchProduct(text: String!): [ISearchable];\n}\n"
        }
      ],
      "id": "I8D7xTBJ",
      "createdAt": 1659499068100,
      "updatedAt": 1659499093557
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Groovy",
      "content": [
        {
          "label": "Fragment 1",
          "language": "groovy",
          "value": "//http://groovy.codehaus.org/Martin+Fowler%27s+closure+examples+in+Groovy\n\nclass Employee {\n    def name, salary\n    boolean manager\n    String toString() { return name }\n}\n\ndef emps = [new Employee(name:'Guillaume', manager:true, salary:200),\n    new Employee(name:'Graeme', manager:true, salary:200),\n    new Employee(name:'Dierk', manager:false, salary:151),\n    new Employee(name:'Bernd', manager:false, salary:50)]\n\ndef managers(emps) {\n    emps.findAll { e -> e.isManager() }\n}\n\nassert emps[0..1] == managers(emps) // [Guillaume, Graeme]\n\ndef highPaid(emps) {\n    threshold = 150\n    emps.findAll { e -> e.salary > threshold }\n}\n\nassert emps[0..2] == highPaid(emps) // [Guillaume, Graeme, Dierk]\n\ndef paidMore(amount) {\n    { e -> e.salary > amount}\n}\ndef highPaid = paidMore(150)\n\nassert highPaid(emps[0]) // true\nassert emps[0..2] == emps.findAll(highPaid)\n\ndef filename = 'test.txt'\nnew File(filename).withReader{ reader -> doSomethingWith(reader) }\n\ndef readersText\ndef doSomethingWith(reader) { readersText = reader.text }\n\nassert new File(filename).text == readersText"
        }
      ],
      "id": "z2GBS6CZ",
      "createdAt": 1659499322019,
      "updatedAt": 1659499339818
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "HAML",
      "content": [
        {
          "label": "Fragment 1",
          "language": "haml",
          "value": "!!!5\n\n/[if IE]\n  %a{ :href => 'http://www.mozilla.com/en-US/firefox/' }\n    %h1 Get Firefox\n\n-# This is a HAML comment. It will not show in the output HTML\n\n-#\n  This is a HAML multiline comment\n  This won't be displayed\n    Nor will this\n                   Nor will this.\n\n/ This is a HTML comment. It will be rendered as HTML\n\n/\n  %p This doesn't render...\n  %div\n    %h1 Because it's commented out!\n\n.row\n  .col-md-6\n\n  .col-md-6\n\n\n#users.row.green\n  #articles{:style => \"border: 5px;\"}\n  #lists.list-inline\n\n%div#todos.bg-green{:id => \"#{@item.type}_#{@item.number}\", :class => '#{@item.type} #{@item.urgency}', :phoney => `asdasdasd`}\n\n/ file: app/views/movies/index.html.haml\n\n%ads:{:bleh => 33}\n%p\n  Date/Time:\n  - now = DateTime.now\n  %strong= now\n   = if now DateTime.parse(\"December 31, 2006\")\n    = \"Happy new \" + \"year!\"\n\n%sfd.dfdfg\n#content\n .title\n   %h1= @title\n   = link_to 'Home', home_url\n\n   #contents\n%div#content\n  %div.articles\n    %div.article.title Blah\n    %div.article.date 2006-11-05\n    %div.article.entry\n      Neil Patrick Harris\n\n%div[@user, :greeting]\n  %bar[290]\n\n/ This is a comment\n\n/ This is another comment with line break above\n\n.row\n  .col-md-6\n  .col-md-6\n\n  .col-md-6\n\n.row\n  .col-md-6\n\n\n  .col-md-6"
        }
      ],
      "id": "Pm3cn_Li",
      "createdAt": 1659499342563,
      "updatedAt": 1659499648807
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Handlebars",
      "content": [
        {
          "label": "Fragment 1",
          "language": "handlebars",
          "value": "{{!-- Ace + :-}} --}}\n\n<div id=\"comments\">\n  {{#each comments}}\n  <h2><a href=\"/posts/{{../permalink}}#{{id}}\">{{title}}</a></h2>\n  <div>{{{body}}}</div>\n  {{/each}}\n</div>\n"
        }
      ],
      "id": "ODMJsyMr",
      "createdAt": 1659499670077,
      "updatedAt": 1659499699936
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Haskell",
      "content": [
        {
          "label": "Fragment 1",
          "language": "haskell",
          "value": "-- Type annotation (optional)\nfib :: Int -> Integer\n \n-- With self-referencing data\nfib n = fibs !! n\n        where fibs = 0 : scanl (+) 1 fibs\n        -- 0,1,1,2,3,5,...\n \n-- Same, coded directly\nfib n = fibs !! n\n        where fibs = 0 : 1 : next fibs\n              next (a : t@(b:_)) = (a+b) : next t\n \n-- Similar idea, using zipWith\nfib n = fibs !! n\n        where fibs = 0 : 1 : zipWith (+) fibs (tail fibs)\n \n-- Using a generator function\nfib n = fibs (0,1) !! n\n        where fibs (a,b) = a : fibs (b,a+b)"
        }
      ],
      "id": "UFZ0EgLY",
      "createdAt": 1659499710604,
      "updatedAt": 1659499856647
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Haskell Cabal",
      "content": [
        {
          "label": "Fragment 1",
          "language": "haskell_cabal",
          "value": "name:                reload\nversion:             0.1.0.0\nsynopsis:            Initial project template from stack\nDescription:\n    The \\'cabal\\' command-line program simplifies the process of managing\n    Haskell software by automating the fetching, configuration, compilation\n    and installation of Haskell libraries and programs.\nhomepage:            https://github.com/jpmoresmau/dbIDE/reload#readme\nlicense:             BSD3\nlicense-file:        LICENSE\nauthor:              JP Moresmau\nmaintainer:          jpmoresmau@gmail.com\ncopyright:           2016 JP Moresmau\ncategory:            Web\nbuild-type:          Simple\n-- extra-source-files:\ncabal-version:       >=1.10\n\nFlag network-uri\n  description:  Get Network.URI from the network-uri package\n  default:      True\n\nlibrary\n  hs-source-dirs:      src\n  exposed-modules:     Language.Haskell.Reload\n  build-depends:       base >= 4.7 && < 5\n                     , aeson\n                     , scotty\n                     , wai\n                     , text\n                     , directory\n                     , filepath\n                     , bytestring\n                     , containers\n                     , mime-types\n                     , transformers\n                     , wai-handler-launch\n                     , wai-middleware-static\n                     , wai-extra\n                     , http-types\n  default-language:    Haskell2010\n  other-modules:       Language.Haskell.Reload.FileBrowser\n  ghc-options:         -Wall -O2\n\nexecutable reload-exe\n  hs-source-dirs:      app\n  main-is:             Main.hs\n  ghc-options:         -threaded -O2 -rtsopts -with-rtsopts=-N\n  build-depends:       base\n                     , reload\n  default-language:    Haskell2010\n\ntest-suite reload-test\n  type:                exitcode-stdio-1.0\n  hs-source-dirs:      test\n  main-is:             Spec.hs\n  build-depends:       base\n                     , reload\n                     , hspec\n                     , hspec-wai\n                     , hspec-wai-json\n                     , aeson\n                     , directory\n                     , filepath\n                     , text\n                     , containers\n                     , unordered-containers\n                     , bytestring\n                     , wai-extra\n  ghc-options:         -threaded -O2 -rtsopts -with-rtsopts=-N\n  default-language:    Haskell2010\n  other-modules:       Language.Haskell.Reload.FileBrowserSpec\n                       Language.Haskell.ReloadSpec\n\nsource-repository head\n  type:     git\n  location: https://github.com/jpmoresmau/dbIDE/reload\n"
        }
      ],
      "id": "WfG80xEU",
      "createdAt": 1659499806763,
      "updatedAt": 1659499855045
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Haxe",
      "content": [
        {
          "label": "Fragment 1",
          "language": "haxe",
          "value": "class HelloWorld {\n    static public function main() {\n        trace(\"Hello World\");\n    }\n}"
        }
      ],
      "id": "IFnOQiFX",
      "createdAt": 1659499858660,
      "updatedAt": 1659499965939
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Hjson",
      "content": [
        {
          "label": "Fragment 1",
          "language": "hjson",
          "value": "{\n  # specify rate in requests/second (because comments are helpful!)\n  rate: 1000\n\n  // prefer c-style comments?\n  /* feeling old fashioned? */\n\n  # did you notice that rate doesn't need quotes?\n  hey: look ma, no quotes for strings either!\n\n  # best of all\n  notice: []\n  anything: ?\n\n  # yes, commas are optional!\n}\n"
        }
      ],
      "id": "u3Hrb4_j",
      "createdAt": 1659500000006,
      "updatedAt": 1659500019395
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "HTML",
      "content": [
        {
          "label": "Fragment 1",
          "language": "html",
          "value": "<!DOCTYPE html>\n<html>\n    <head>\n\n    <style type=\"text/css\">\n        .text-layer {\n            font-family: Monaco, \"Courier New\", monospace;\n            font-size: 12px;\n            cursor: text;\n        }\n    </style>\n\n    <script type=\"text/javascript\" nonce=\"ef6574b022cf438aa40ab9854e3\" src=\"//local.adguard.org?ts=1659497936219&amp;type=content-script&amp;dmn=ace.c9.io&amp;app=com.google.Chrome&amp;css=3&amp;js=1&amp;rel=1&amp;rji=1&amp;sbe=1&amp;stealth=1&amp;uag=\"></script>\n<script type=\"text/javascript\" nonce=\"ef6574b022cf438aa40ab9854e3\" src=\"//local.adguard.org?ts=1659497936219&amp;name=AdGuard%20Extra&amp;type=user-script\"></script></head>\n    <body>\n        <h1 style=\"color:red\">Juhu Kinners</h1>\n    </body>\n</html>"
        }
      ],
      "id": "V0-nWcOY",
      "createdAt": 1659500022244,
      "updatedAt": 1659500070479
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "HTML - Elixir",
      "content": [
        {
          "label": "Fragment 1",
          "language": "html_elixir",
          "value": "<h1>Listing Books</h1>\n \n<table>\n  <tr>\n    <th>Title</th>\n    <th>Summary</th>\n    <th></th>\n    <th></th>\n    <th></th>\n  </tr>\n\n<%= for book <- @books do %>\n  <tr>\n    <%# comment %>\n    <td><%= book.title %></td>\n    <td><%= book.content %></td>\n    <td><%= link \"Show\", to: book_path(@conn, :show, book) %></td>\n    <td><%= link \"Edit\", to: book_path(@conn, :edit, book) %></td>\n    <td><%= link \"Delete\", to: book_path(@conn, :delete, book), method: :delete, data: [confirm: \"Are you sure?\"] %></td>\n  </tr>\n<% end %>\n</table>\n \n<br />\n \n<%= link \"New book\", to: book_path(@conn, :new) %>\n"
        }
      ],
      "id": "uHpMvpVG",
      "createdAt": 1659500072593,
      "updatedAt": 1659500094531
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "HTML - Ruby",
      "content": [
        {
          "label": "Fragment 1",
          "language": "html_ruby",
          "value": "<h1>Listing Books</h1>\n \n<table>\n  <tr>\n    <th>Title</th>\n    <th>Summary</th>\n    <th></th>\n    <th></th>\n    <th></th>\n  </tr>\n \n<% @books.each do |book| %>\n  <tr>\n    <%# comment %>\n    <td><%= book.title %></td>\n    <td><%= book.content %></td>\n    <td><%= link_to 'Show', book %></td>\n    <td><%= link_to 'Edit', edit_book_path(book) %></td>\n    <td><%= link_to 'Remove', book, :confirm => 'Are you sure?', :method => :delete %></td>\n  </tr>\n<% end %>\n</table>\n \n<br />\n \n<%= link_to 'New book', new_book_path %>"
        }
      ],
      "id": "pKfYEkh4",
      "createdAt": 1659500102423,
      "updatedAt": 1659500124757
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "INI",
      "content": [
        {
          "label": "Fragment 1",
          "language": "ini",
          "value": "[.ShellClassInfo]\nIconResource=..\\logo.png\n[ViewState]\nFolderType=Generic\n"
        }
      ],
      "id": "fuJCASxY",
      "createdAt": 1659500146290,
      "updatedAt": 1659500158650
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Io",
      "content": [
        {
          "label": "Fragment 1",
          "language": "io",
          "value": "// computes factorial of a number\nfactorial := method(n,\n    if(n == 0, return 1)\n    res := 1\n    Range 1 to(n) foreach(i, res = res * i)\n)"
        }
      ],
      "id": "_57pBmcn",
      "createdAt": 1659500159351,
      "updatedAt": 1659500168731
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Java",
      "content": [
        {
          "label": "Fragment 1",
          "language": "java",
          "value": "import java.util.ArrayList;\nimport java.util.Vector;\n\npublic class InfiniteLoop {\n\n    /*\n     * This will cause the program to hang...\n     *\n     * Taken from:\n     * http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/\n     */\n    public static void main(String[] args) {\n        double d = Double.parseDouble(\"2.2250738585072012e-308\");\n\n        // unreachable code\n        System.out.println(\"Value: \" + d);\n    }\n}\n"
        }
      ],
      "id": "HKSteGIX",
      "createdAt": 1659500267524,
      "updatedAt": 1659500281323
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "JavaScript",
      "content": [
        {
          "label": "Fragment 1",
          "language": "javascript",
          "value": "// program to generate fibonacci series up to n terms\n\n// take input from the user\nconst number = parseInt(prompt('Enter the number of terms: '));\nlet n1 = 0, n2 = 1, nextTerm;\n\nconsole.log('Fibonacci Series:');\n\nfor (let i = 1; i <= number; i++) {\n    console.log(n1);\n    nextTerm = n1 + n2;\n    n1 = n2;\n    n2 = nextTerm;\n}"
        }
      ],
      "id": "WYzSf25T",
      "createdAt": 1659500310669,
      "updatedAt": 1659506836763
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "JSON",
      "content": [
        {
          "label": "Fragment 1",
          "language": "json",
          "value": "{\n \"query\": {\n  \"count\": 10,\n  \"created\": \"2011-06-21T08:10:46Z\",\n  \"lang\": \"en-US\",\n  \"results\": {\n   \"photo\": [\n    {\n     \"farm\": \"6\",\n     \"id\": \"5855620975\",\n     \"isfamily\": \"0\",\n     \"isfriend\": \"0\",\n     \"ispublic\": \"1\",\n     \"owner\": \"32021554@N04\",\n     \"secret\": \"f1f5e8515d\",\n     \"server\": \"5110\",\n     \"title\": \"7087 bandit cat\"\n    },\n    {\n     \"farm\": \"4\",\n     \"id\": \"5856170534\",\n     \"isfamily\": \"0\",\n     \"isfriend\": \"0\",\n     \"ispublic\": \"1\",\n     \"owner\": \"32021554@N04\",\n     \"secret\": \"ff1efb2a6f\",\n     \"server\": \"3217\",\n     \"title\": \"6975 rusty cat\"\n    },\n    {\n     \"farm\": \"6\",\n     \"id\": \"5856172972\",\n     \"isfamily\": \"0\",\n     \"isfriend\": \"0\",\n     \"ispublic\": \"1\",\n     \"owner\": \"51249875@N03\",\n     \"secret\": \"6c6887347c\",\n     \"server\": \"5192\",\n     \"title\": \"watermarked-cats\"\n    },\n    {\n     \"farm\": \"6\",\n     \"id\": \"5856168328\",\n     \"isfamily\": \"0\",\n     \"isfriend\": \"0\",\n     \"ispublic\": \"1\",\n     \"owner\": \"32021554@N04\",\n     \"secret\": \"0c1cfdf64c\",\n     \"server\": \"5078\",\n     \"title\": \"7020 mandy cat\"\n    },\n    {\n     \"farm\": \"3\",\n     \"id\": \"5856171774\",\n     \"isfamily\": \"0\",\n     \"isfriend\": \"0\",\n     \"ispublic\": \"1\",\n     \"owner\": \"32021554@N04\",\n     \"secret\": \"7f5a3180ab\",\n     \"server\": \"2696\",\n     \"title\": \"7448 bobby cat\"\n    }\n   ]\n  }\n }\n}"
        }
      ],
      "id": "wiv80DI7",
      "createdAt": 1659506841624,
      "updatedAt": 1659506858438
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "JSON5",
      "content": [
        {
          "label": "Fragment 1",
          "language": "json5",
          "value": "{\n  foo: 'bar',\n  while: true,\n\n  this: 'is a \\\nmulti-line string',\n\n  // this is an inline comment\n  here: 'is another', // inline comment\n\n  /* this is a block comment\n     that continues on another line */\n\n  hex: 0xDEADbeef,\n  half: .5,\n  delta: +10,\n  to: Infinity,   // and beyond!\n\n  finally: 'a trailing comma',\n  oh: [\n    \"we shouldn't forget\",\n    'arrays can have',\n    'trailing commas too',\n  ],\n}"
        }
      ],
      "id": "WR8cSFol",
      "createdAt": 1659506858891,
      "updatedAt": 1659506873434
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "JSONiq",
      "content": [
        {
          "label": "Fragment 1",
          "language": "jsoniq",
          "value": "{|\n  for $store in collection(\"stores\")\n  let $state := $store.state\n  group by $state\n  return {\n    $state : {|\n      for $product in collection(\"products\")\n      let $category := $product.category\n      group by $category\n      return {\n        $category : {|\n          for $sales in collection(\"sales\")\n          where (some $s in $store\n                satisfies $sales.\"store number\" eq $s.\"store number\")\n            and (some $p in $product\n                satisfies $sales.product eq $p.name)\n          let $pname := $sales.product\n          group by $pname\n          return { $pname : sum( $sales.quantity ) }\n        |}\n      }\n    |}\n  }\n|}"
        }
      ],
      "id": "zt-pHlzR",
      "createdAt": 1659506875045,
      "updatedAt": 1659507021385
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "JSP",
      "content": [
        {
          "label": "Fragment 1",
          "language": "jsp",
          "value": "<%-- initial comment --%>\n<%@ page import=\"java.util.Date\" %>\n<%--@ page isELIgnored=\"true\" //Now EL will be ignored   --%>\n<html>\n    <jsp:declaration>\n        int day = 3;\n    </jsp:declaration>\n    <%@ include file=\"relative url\" %>\n    <jsp:directive.include file=\"relative url\" />\n    <head>\n        <title>Day <%= day %></title>\n    </head> \n    <body>\n        <script>\n            var x = \"abc\";\n                function y {\n            }\n        </script>\n    <style>\n        .class {\n            background: #124356;\n        }\n    </style>\n\n    <p>\n        Today's date: <%= (new java.util.Date()).toLocaleString()%>\n    </p>\n    <%! int day = 3; %> \n    \n    <jsp:directive.page attribute=\"value\" />\n    \n    \n    <%-- This comment will not be visible in the page source --%>\n    <!-- html comment -->\n    <body>\n        <p>\n           Today's date: <%= (new java.util.Date()).toLocaleString()%>\n        </p>\n        \n<%! int i = 0; %>\n    <jsp:declaration>\n       int j = 10;\n    </jsp:declaration>\n\n    <%-- This is JSP comment --%>\n    <%@ directive attribute=\"value\" %>\n\n    <h2>Select Languages:</h2>\n\n    <form ACTION=\"jspCheckBox.jsp\">\n        <input type=\"checkbox\" name=\"id\" value=\"Java\"> Java<BR>\n        <input type=\"checkbox\" name=\"id\" value=\".NET\"> .NET<BR>\n        <input type=\"checkbox\" name=\"id\" value=\"PHP\"> PHP<BR>\n        <input type=\"checkbox\" name=\"id\" value=\"C/C++\"> C/C++<BR>\n        <input type=\"checkbox\" name=\"id\" value=\"PERL\"> PERL <BR>\n        <input type=\"submit\" value=\"Submit\">\n    </form>\n\n    <%\n    String select[] = request.getParameterValues(\"id\"); \n    if (select != null && select.length != 0) {\n        out.println(\"You have selected: \");\n        for (int i = 0; i < select.length; i++) {\n           out.println(select[i]); \n        }\n    }\n    %>\n\n\n        <% \n            switch(day) {\n            case 0:\n                   out.println(\"It\\'s Sunday.\");\n                   break;\n            case 1:\n                   out.println(\"It\\'s Monday.\");\n                   break;\n            case 2:\n                   out.println(\"It\\'s Tuesday.\");\n                   break;\n            case 3:\n                   out.println(\"It\\'s Wednesday.\");\n                   break;\n            case 4:\n                   out.println(\"It\\'s Thursday.\");\n                   break;\n            case 5:\n                   out.println(\"It\\'s Friday.\");\n                   break;\n            //hello\n            default:\n                   out.println(\"It's Saturday.\");\n            }\n        %>\n        <p>\n            <jsp:scriptlet>\n                out.println(\"Your IP address is \" + request.getRemoteAddr());\n            </jsp:scriptlet>\n        </p>\n    </body>\n</html>\n"
        }
      ],
      "id": "O9ZhMEjD",
      "createdAt": 1659507024658,
      "updatedAt": 1659507037230
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "JSX",
      "content": [
        {
          "label": "Fragment 1",
          "language": "jsx",
          "value": "function formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\n\nconst user = {\n  firstName: 'Harper',\n  lastName: 'Perez'\n};\n\nconst element = (\n  <h1>\n    Hello, {formatName(user)}!\n  </h1>\n);"
        }
      ],
      "id": "XphCA0jL",
      "createdAt": 1659507038119,
      "updatedAt": 1659507099781
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Julia",
      "content": [
        {
          "label": "Fragment 1",
          "language": "julia",
          "value": "for op = (:+, :*, :&, :|, :$)\n  @eval ($op)(a,b,c) = ($op)(($op)(a,b),c)\nend\n\nv = α';\nfunction g(x,y)\n  return x * y\n  x + y\nend\n\ncd(\"data\") do\n    open(\"outfile\", \"w\") do f\n        write(f, data)\n    end\nend\n"
        }
      ],
      "id": "F24mNogB",
      "createdAt": 1659507115215,
      "updatedAt": 1659507129381
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Kotlin",
      "content": [
        {
          "label": "Fragment 1",
          "language": "kotlin",
          "value": "/*Taken from http://try.kotlinlang.org/#/Examples/Longer%20examples/Life/Life.kt*/\n/**\n * This is a straightforward implementation of The Game of Life\n * See http://en.wikipedia.org/wiki/Conway's_Game_of_Life\n */\npackage life\n\n/*\n * A field where cells live. Effectively immutable\n */\nclass Field(\n        val width: Int,\n        val height: Int,\n        // This function tells the constructor which cells are alive\n        // if init(i, j) is true, the cell (i, j) is alive\n        init: (Int, Int) -> Boolean\n) {\n    private val live: Array<Array<Boolean>> = Array(height) { i -> Array(width) { j -> init(i, j) } }\n\n    private fun liveCount(i: Int, j: Int)\n            = if (i in 0..height - 1 &&\n            j in 0..width - 1 &&\n            live[i][j]) 1 else 0\n\n    // How many neighbors of (i, j) are alive?\n    fun liveNeighbors(i: Int, j: Int) =\n            liveCount(i - 1, j - 1) +\n                    liveCount(i - 1, j) +\n                    liveCount(i - 1, j + 1) +\n                    liveCount(i, j - 1) +\n                    liveCount(i, j + 1) +\n                    liveCount(i + 1, j - 1) +\n                    liveCount(i + 1, j) +\n                    liveCount(i + 1, j + 1)\n\n    // You can say field[i, j], and this function gets called\n    operator fun get(i: Int, j: Int) = live[i][j]\n}\n\n/**\n * This function takes the present state of the field\n * and returns a new field representing the next moment of time\n */\nfun next(field: Field): Field {\n    return Field(field.width, field.height) { i, j ->\n        val n = field.liveNeighbors(i, j)\n        if (field[i, j])\n        // (i, j) is alive\n            n in 2..3 // It remains alive iff it has 2 or 3 neighbors\n        else\n        // (i, j) is dead\n            n == 3 // A new cell is born if there are 3 neighbors alive\n    }\n}\n\n/** A few colony examples here */\nfun main(args: Array<String>) {\n    // Simplistic demo\n    runGameOfLife(\"***\", 3)\n    // \"Star burst\"\n    runGameOfLife(\"\"\"\n        _______\n        ___*___\n        __***__\n        ___*___\n        _______\n    \"\"\", 10)\n    // Stable colony\n    runGameOfLife(\"\"\"\n        _____\n        __*__\n        _*_*_\n        __*__\n        _____\n    \"\"\", 3)\n    // Stable from the step 2\n    runGameOfLife(\"\"\"\n        __**__\n        __**__\n        __**__\n    \"\"\", 3)\n    // Oscillating colony\n    runGameOfLife(\"\"\"\n        __**____\n        __**____\n        ____**__\n        ____**__\n    \"\"\", 6)\n    // A fancier oscillating colony\n    runGameOfLife(\"\"\"\n        -------------------\n        -------***---***---\n        -------------------\n        -----*----*-*----*-\n        -----*----*-*----*-\n        -----*----*-*----*-\n        -------***---***---\n        -------------------\n        -------***---***---\n        -----*----*-*----*-\n        -----*----*-*----*-\n        -----*----*-*----*-\n        -------------------\n        -------***---***---\n        -------------------\n    \"\"\", 10)\n}\n\n// UTILITIES\n\nfun runGameOfLife(fieldText: String, steps: Int) {\n    var field = makeField(fieldText)\n    for (step in 1..steps) {\n        println(\"Step: $step\")\n        for (i in 0..field.height - 1) {\n            for (j in 0..field.width - 1) {\n                print(if (field[i, j]) \"*\" else \" \")\n            }\n            println(\"\")\n        }\n        field = next(field)\n    }\n}\n\nfun makeField(s: String): Field {\n    val lines = s.replace(\" \", \"\").split('\\n').filter({ it.isNotEmpty() })\n    val longestLine = lines.toList().maxBy { it.length } ?: \"\"\n\n    return Field(longestLine.length, lines.size) { i, j -> lines[i][j] == '*' }\n}\n"
        }
      ],
      "id": "988hcpdB",
      "createdAt": 1659507129809,
      "updatedAt": 1659507144115
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "LaTeX",
      "content": [
        {
          "label": "Fragment 1",
          "language": "latex",
          "value": "\\usepackage{amsmath}\n\\title{\\LaTeX}\n\\date{}\n\\begin{document}\n  \\maketitle\n  \\LaTeX{} is a document preparation system for the \\TeX{}\n  typesetting program. It offers programmable desktop publishing\n  features and extensive facilities for automating most aspects of\n  typesetting and desktop publishing, including numbering and\n  cross-referencing, tables and figures, page layout, bibliographies,\n  and much more. \\LaTeX{} was originally written in 1984 by Leslie\n  Lamport and has become the dominant method for using \\TeX; few\n  people write in plain \\TeX{} anymore. The current version  is\n  \\LaTeXe.\n \n  % This is a comment; it will not be shown in the final output.\n  % The following shows a little of the typesetting power of LaTeX:\n  \\begin{align}\n    E &= mc^2                              \\\\\n    m &= \\frac{m_0}{\\sqrt{1-\\frac{v^2}{c^2}}}\n  \\end{align}\n\\end{document}"
        }
      ],
      "id": "vw9XW5pz",
      "createdAt": 1659507144676,
      "updatedAt": 1659507163800
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Latte",
      "content": [
        {
          "label": "Fragment 1",
          "language": "latte",
          "value": "<!doctype html>\n<html>\n    <head>\n        <title>{$title}</title>\n        {* \n        \tcomment\n        *}\n    </head>\n    <body>\n    \t<h1 n:inner-if=1 title=1>My Webpage</h1>\n\n        <ul n:if=\"count($navigation) > 0\" id=\"navigation\">\n        {foreach [a, b, 'x', 10] as $item}\n            <li><a href=\"{$item}\">{test($item->caption)}</a></li>\n        {/foreach}\n        </ul>\n\n        {$variable}\n        {=$variable}\n        {XXXX::func($variable /* comment */)|filter}\n        {$variable?->obj|filter:10, abc, 'x$var', \"x$var\"|filter2}\n\n        {if} ... {/if true}\n\n        <script>\n\t        var a = {$a}, b = {'a': 1}, c = {'a': 1};\n\t        if (true) {\n\t        \talert();\n\t        }\n        </script>\n\n        <style>\n        \tbody { color: {$color} }\n        </style>\n    </body>\n</html>\n"
        }
      ],
      "id": "lpS7qmbw",
      "createdAt": 1659507165157,
      "updatedAt": 1659507179678
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "LESS",
      "content": [
        {
          "label": "Fragment 1",
          "language": "less",
          "value": "/* styles.less */\n\n@base: #f938ab;\n\n.box-shadow(@style, @c) when (iscolor(@c)) {\n    box-shadow:         @style @c;\n    -webkit-box-shadow: @style @c;\n    -moz-box-shadow:    @style @c;\n}\n.box-shadow(@style, @alpha: 50%) when (isnumber(@alpha)) {\n    .box-shadow(@style, rgba(0, 0, 0, @alpha));\n}\n\n// Box styles\n.box { \n    color: saturate(@base, 5%);\n    border-color: lighten(@base, 30%);\n    \n    div { .box-shadow(0 0 5px, 30%) }\n  \n    a {\n        color: @base;\n        \n        &:hover {\n            color: lighten(@base, 50%);\n        }\n    }\n}\n"
        }
      ],
      "id": "zlgx6H3d",
      "createdAt": 1659507180386,
      "updatedAt": 1659507196282
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Liquid",
      "content": [
        {
          "label": "Fragment 1",
          "language": "liquid",
          "value": "<h2>Case</h2>\n<p>\n  {% case template %}\n    {% when 'index' %}\n       Welcome\n    {% when 'product' %}\n       {{ product.vendor | link_to_vendor }} / {{ product.title }}\n    {% else %}\n       {{ page_title }}\n  {% endcase %}\n</p>"
        }
      ],
      "id": "KPiQX14z",
      "createdAt": 1659507197756,
      "updatedAt": 1659507253969
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Lisp",
      "content": [
        {
          "label": "Fragment 1",
          "language": "lisp",
          "value": "(defun prompt-for-cd ()\n   \"Prompts\n    for CD\"\n   (prompt-read \"Title\" 1.53 1 2/4 1.7 1.7e0 2.9E-4 +42 -7 #b001 #b001/100 #o777 #O777 #xabc55 #c(0 -5.6))\n   (prompt-read \"Artist\" &rest)\n   (or (parse-integer (prompt-read \"Rating\") :junk-allowed t) 0)\n  (if x (format t \"yes\") (format t \"no\" nil) ;and here comment\n  ) 0xFFLL -23ull\n  ;; second line comment\n  '(+ 1 2)\n  (defvar *lines*)                ; list of all lines\n  (position-if-not #'sys::whitespacep line :start beg))\n  (quote (privet 1 2 3))\n  '(hello world)\n  (* 5 7)\n  (1 2 34 5)\n  (:use \"aaaa\")\n  (let ((x 10) (y 20))\n    (print (+ x y))\n  ) LAmbDa\n\n  \"asdad\\0eqweqe\""
        }
      ],
      "id": "k_9v_WLO",
      "createdAt": 1659507254799,
      "updatedAt": 1659507266545
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "LiveScript",
      "content": [
        {
          "label": "Fragment 1",
          "language": "livescript",
          "value": "# Defines an editing mode for [Ace](https://ace.c9.io).\n#\n# Open [test/ace.html](../test/ace.html) to test.\n\nrequire, exports, module <-! define \\ace/mode/ls\n\nidentifier = /(?![\\d\\s])[$\\w\\xAA-\\uFFDC](?:(?!\\s)[$\\w\\xAA-\\uFFDC]|-[A-Za-z])*/$\n\nexports.Mode = class LiveScriptMode extends require(\\ace/mode/text)Mode\n  ->\n    @$tokenizer =\n      new (require \\ace/tokenizer)Tokenizer LiveScriptMode.Rules\n    if require \\ace/mode/matching_brace_outdent\n      @$outdent = new that.MatchingBraceOutdent\n\n  indenter = // (?\n    : [({[=:]\n    | [-~]>\n    | \\b (?: e(?:lse|xport) | d(?:o|efault) | t(?:ry|hen) | finally |\n             import (?:\\s* all)? | const | var |\n             let | new | catch (?:\\s* #identifier)? )\n  ) \\s* $ //\n\n  getNextLineIndent: (state, line, tab) ->\n    indent   = @$getIndent line\n    {tokens} = @$tokenizer.getLineTokens line, state\n    unless tokens.length and tokens[*-1]type is \\comment\n      indent += tab if state is \\start and indenter.test line\n    indent\n\n  toggleCommentLines: (state, doc, startRow, endRow) ->\n    comment = /^(\\s*)#/; range = new (require \\ace/range)Range 0 0 0 0\n    for i from startRow to endRow\n      if out = comment.test line = doc.getLine i\n      then line.=replace comment, \\$1\n      else line.=replace /^\\s*/   \\$&#\n      range.end.row = range.start.row = i\n      range.end.column = line.length + 1\n      doc.replace range, line\n    1 - out * 2\n\n  checkOutdent: (state, line, input) -> @$outdent?checkOutdent line, input\n\n  autoOutdent: (state, doc, row) -> @$outdent?autoOutdent doc, row\n\n### Highlight Rules\n\nkeywordend = /(?![$\\w]|-[A-Za-z]|\\s*:(?![:=]))/$\nstringfill = token: \\string, regex: '.+'\n\nLiveScriptMode.Rules =\n  start:\n    * token: \\keyword\n      regex: //(?\n        :t(?:h(?:is|row|en)|ry|ypeof!?)\n        |c(?:on(?:tinue|st)|a(?:se|tch)|lass)\n        |i(?:n(?:stanceof)?|mp(?:ort(?:\\s+all)?|lements)|[fs])\n        |d(?:e(?:fault|lete|bugger)|o)\n        |f(?:or(?:\\s+own)?|inally|unction)\n        |s(?:uper|witch)\n        |e(?:lse|x(?:tends|port)|val)\n        |a(?:nd|rguments)\n        |n(?:ew|ot)\n        |un(?:less|til)\n        |w(?:hile|ith)\n        |o[fr]|return|break|let|var|loop\n      )//$ + keywordend\n\n    * token: \\constant.language\n      regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n\n    * token: \\invalid.illegal\n      regex: '(?\n        :p(?:ackage|r(?:ivate|otected)|ublic)\n        |i(?:mplements|nterface)\n        |enum|static|yield\n      )' + keywordend\n\n    * token: \\language.support.class\n      regex: '(?\n        :R(?:e(?:gExp|ferenceError)|angeError)\n        |S(?:tring|yntaxError)\n        |E(?:rror|valError)\n        |Array|Boolean|Date|Function|Number|Object|TypeError|URIError\n      )' + keywordend\n\n    * token: \\language.support.function\n      regex: '(?\n        :is(?:NaN|Finite)\n        |parse(?:Int|Float)\n        |Math|JSON\n        |(?:en|de)codeURI(?:Component)?\n      )' + keywordend\n\n    * token: \\variable.language\n      regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n\n    * token: \\identifier\n      regex: identifier + /\\s*:(?![:=])/$\n\n    * token: \\variable\n      regex: identifier\n\n    * token: \\keyword.operator\n      regex: /(?:\\.{3}|\\s+\\?)/$\n\n    * token: \\keyword.variable\n      regex: /(?:@+|::|\\.\\.)/$\n      next : \\key\n\n    * token: \\keyword.operator\n      regex: /\\.\\s*/$\n      next : \\key\n\n    * token: \\string\n      regex: /\\\\\\S[^\\s,;)}\\]]*/$\n\n    * token: \\string.doc\n      regex: \\'''\n      next : \\qdoc\n\n    * token: \\string.doc\n      regex: \\\"\"\"\n      next : \\qqdoc\n\n    * token: \\string\n      regex: \\'\n      next : \\qstring\n\n    * token: \\string\n      regex: \\\"\n      next : \\qqstring\n\n    * token: \\string\n      regex: \\`\n      next : \\js\n\n    * token: \\string\n      regex: '<\\\\['\n      next : \\words\n\n    * token: \\string.regex\n      regex: \\//\n      next : \\heregex\n\n    * token: \\comment.doc\n      regex: '/\\\\*'\n      next : \\comment\n\n    * token: \\comment\n      regex: '#.*'\n\n    * token: \\string.regex\n      regex: //\n        /(?: [^ [ / \\n \\\\ ]*\n          (?: (?: \\\\.\n                | \\[ [^\\]\\n\\\\]* (?:\\\\.[^\\]\\n\\\\]*)* \\]\n              ) [^ [ / \\n \\\\ ]*\n          )*\n        )/ [gimy$]{0,4}\n      //$\n      next : \\key\n\n    * token: \\constant.numeric\n      regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*\n                |(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*\n                |(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)\n                 (?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n\n    * token: \\lparen\n      regex: '[({[]'\n\n    * token: \\rparen\n      regex: '[)}\\\\]]'\n      next : \\key\n\n    * token: \\keyword.operator\n      regex: \\\\\\S+\n\n    * token: \\text\n      regex: \\\\\\s+\n\n  heregex:\n    * token: \\string.regex\n      regex: '.*?//[gimy$?]{0,4}'\n      next : \\start\n    * token: \\string.regex\n      regex: '\\\\s*#{'\n    * token: \\comment.regex\n      regex: '\\\\s+(?:#.*)?'\n    * token: \\string.regex\n      regex: '\\\\S+'\n\n  key:\n    * token: \\keyword.operator\n      regex: '[.?@!]+'\n    * token: \\identifier\n      regex: identifier\n      next : \\start\n    * token: \\text\n      regex: '.'\n      next : \\start\n\n  comment:\n    * token: \\comment.doc\n      regex: '.*?\\\\*/'\n      next : \\start\n    * token: \\comment.doc\n      regex: '.+'\n\n  qdoc:\n    token: \\string\n    regex: \".*?'''\"\n    next : \\key\n    stringfill\n\n  qqdoc:\n    token: \\string\n    regex: '.*?\"\"\"'\n    next : \\key\n    stringfill\n\n  qstring:\n    token: \\string\n    regex: /[^\\\\']*(?:\\\\.[^\\\\']*)*'/$\n    next : \\key\n    stringfill\n\n  qqstring:\n    token: \\string\n    regex: /[^\\\\\"]*(?:\\\\.[^\\\\\"]*)*\"/$\n    next : \\key\n    stringfill\n\n  js:\n    token: \\string\n    regex: /[^\\\\`]*(?:\\\\.[^\\\\`]*)*`/$\n    next : \\key\n    stringfill\n\n  words:\n    token: \\string\n    regex: '.*?\\\\]>'\n    next : \\key\n    stringfill\n"
        }
      ],
      "id": "VG6x4-d_",
      "createdAt": 1659507267074,
      "updatedAt": 1659507283998
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "LSL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "lsl",
          "value": "/*\n    Testing syntax highlighting\n    of Ace Editor\n    for the Linden Scripting Language\n*/\n\ninteger someIntNormal       = 3672;\ninteger someIntHex          = 0x00000000;\ninteger someIntMath         = PI_BY_TWO;\n\ninteger event               = 5673;                                             // invalid.illegal\n\nkey someKeyTexture          = TEXTURE_DEFAULT;\nstring someStringSpecial    = EOF;\n\nsome_user_defined_function_without_return_type(string inputAsString)\n{\n    llSay(PUBLIC_CHANNEL, inputAsString);\n}\n\nstring user_defined_function_returning_a_string(key inputAsKey)\n{\n    return (string)inputAsKey;\n}\n\ndefault\n{\n    state_entry()\n    {\n        key someKey = NULL_KEY;\n        someKey = llGetOwner();\n\n        string someString = user_defined_function_returning_a_string(someKey);\n\n        some_user_defined_function_without_return_type(someString);\n    }\n\n    touch_start(integer num_detected)\n    {\n        list agentsInRegion = llGetAgentList(AGENT_LIST_REGION, []);\n        integer numOfAgents = llGetListLength(agentsInRegion);\n\n        integer index;                                                          // defaults to 0\n        for (; index <= numOfAgents - 1; index++)                               // for each agent in region\n        {\n            llRegionSayTo(llList2Key(agentsInRegion, index), PUBLIC_CHANNEL, \"Hello, Avatar!\");\n        }\n    }\n\n    touch_end(integer num_detected)\n    {\n        someIntNormal       = 3672;\n        someIntHex          = 0x00000000;\n        someIntMath         = PI_BY_TWO;\n\n        event               = 5673;                                             // invalid.illegal\n\n        someKeyTexture      = TEXTURE_DEFAULT;\n        someStringSpecial   = EOF;\n\n        llSetInventoryPermMask(\"some item\", MASK_NEXT, PERM_ALL);               // reserved.godmode\n\n        llWhisper(PUBLIC_CHANNEL, \"Leaving \\\"default\\\" now...\");\n        state other;\n    }\n}\n\nstate other\n{\n    state_entry()\n    {\n        llWhisper(PUBLIC_CHANNEL, \"Entered \\\"state other\\\", returning to \\\"default\\\" again...\");\n        state default;\n    }\n}\n"
        }
      ],
      "id": "jdK6UsDj",
      "createdAt": 1659507284423,
      "updatedAt": 1659507452974
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Lua",
      "content": [
        {
          "label": "Fragment 1",
          "language": "lua",
          "value": "--[[--\nnum_args takes in 5.1 byte code and extracts the number of arguments\nfrom its function header.\n--]]--\n\nfunction int(t)\n\treturn t:byte(1)+t:byte(2)*0x100+t:byte(3)*0x10000+t:byte(4)*0x1000000\nend\n\nfunction num_args(func)\n\tlocal dump = string.dump(func)\n\tlocal offset, cursor = int(dump:sub(13)), offset + 26\n\t--Get the params and var flag (whether there's a ... in the param)\n\treturn dump:sub(cursor):byte(), dump:sub(cursor+1):byte()\nend\n\n-- Usage:\nnum_args(function(a,b,c,d, ...) end) -- return 4, 7\n\n-- Python styled string format operator\nlocal gm = debug.getmetatable(\"\")\n\ngm.__mod=function(self, other)\n    if type(other) ~= \"table\" then other = {other} end\n    for i,v in ipairs(other) do other[i] = tostring(v) end\n    return self:format(unpack(other))\nend\n\nprint([===[\n    blah blah %s, (%d %d)\n]===]%{\"blah\", num_args(int)})\n\n--[=[--\ntable.maxn is deprecated, use # instead.\n--]=]--\nprint(table.maxn{1,2,[4]=4,[8]=8) -- outputs 8 instead of 2\n\nprint(5 --[[ blah ]])"
        }
      ],
      "id": "HZVQW3Q8",
      "createdAt": 1659507732882,
      "updatedAt": 1659507747073
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Makefile",
      "content": [
        {
          "label": "Fragment 1",
          "language": "makefile",
          "value": ".PHONY:    apf ext worker mode theme package test\n\ndefault: apf worker\n\nupdate: worker\n\n# packages apf\n\n# This is the first line of a comment \\\nand this is still part of the comment \\\nas is this, since I keep ending each line \\\nwith a backslash character\n\napf:\n    cd node_modules/packager; node package.js projects/apf_cloud9.apr\n\tcd node_modules/packager; cat build/apf_release.js | sed 's/\\(\\/\\*FILEHEAD(\\).*//g' > ../../plugins-client/lib.apf/www/apf-packaged/apf_release.js\n\n# package debug version of apf\napfdebug:\n\tcd node_modules/packager/projects; cat apf_cloud9.apr | sed 's/<p:define name=\\\"__DEBUG\\\" value=\\\"0\\\" \\/>/<p:define name=\\\"__DEBUG\\\" value=\\\"1\\\" \\/>/g' > apf_cloud9_debug2.apr\n\tcd node_modules/packager/projects; cat apf_cloud9_debug2.apr | sed 's/apf_release/apf_debug/g' > apf_cloud9_debug.apr; rm apf_cloud9_debug2.apr\n\tcd node_modules/packager; node package.js projects/apf_cloud9_debug.apr\n\tcd node_modules/packager; cat build/apf_debug.js | sed 's/\\(\\/\\*FILEHEAD(\\).*\\/apf\\/\\(.*\\)/\\1\\2/g' > ../../plugins-client/lib.apf/www/apf-packaged/apf_debug.js\n\n# package_apf--temporary fix for non-workering infra\npack_apf:\n\tmkdir -p build/src\n\tmv plugins-client/lib.apf/www/apf-packaged/apf_release.js build/src/apf_release.js\n\tnode build/r.js -o name=./build/src/apf_release.js out=./plugins-client/lib.apf/www/apf-packaged/apf_release.js baseUrl=.\n\n# makes ace; at the moment, requires dryice@0.4.2\nace:\n\tcd node_modules/ace; make clean pre_build; ./Makefile.dryice.js minimal\n\n\n# packages core\ncore: ace\n\tmkdir -p build/src\n\tnode build/r.js -o build/core.build.js\n\n# generates packed template\nhelper: \n\tnode build/packed_helper.js\n\nhelper_clean:\n\tmkdir -p build/src\n\tnode build/packed_helper.js 1\n\n# packages ext\next: \n\tnode build/r.js -o build/app.build.js\n\n# calls dryice on worker & packages it\nworker: plugins-client/lib.ace/www/worker/worker-language.js\n\nplugins-client/lib.ace/www/worker/worker-language.js plugins-client/lib.ace/www/worker/worker-javascript.js : \\\n        $(wildcard node_modules/ace/*) $(wildcard node_modules/ace/*/*) $(wildcard node_modules/ace/*/*/mode/*) \\\n        $(wildcard plugins-client/ext.language/*) \\\n        $(wildcard plugins-client/ext.language/*/*) \\\n        $(wildcard plugins-client/ext.linereport/*) \\\n        $(wildcard plugins-client/ext.codecomplete/*) \\\n        $(wildcard plugins-client/ext.codecomplete/*/*) \\\n        $(wildcard plugins-client/ext.jslanguage/*) \\\n        $(wildcard plugins-client/ext.jslanguage/*/*) \\\n        $(wildcard plugins-client/ext.csslanguage/*) \\\n        $(wildcard plugins-client/ext.csslanguage/*/*) \\\n        $(wildcard plugins-client/ext.htmllanguage/*) \\\n        $(wildcard plugins-client/ext.htmllanguage/*/*) \\\n        $(wildcard plugins-client/ext.jsinfer/*) \\\n        $(wildcard plugins-client/ext.jsinfer/*/*) \\\n        $(wildcard node_modules/treehugger/lib/*) \\\n        $(wildcard node_modules/treehugger/lib/*/*) \\\n        $(wildcard node_modules/ace/lib/*) \\\n        $(wildcard node_modules/ace/*/*) \\\n        Makefile.dryice.js\n\tmkdir -p plugins-client/lib.ace/www/worker\n\trm -rf /tmp/c9_worker_build\n\tmkdir -p /tmp/c9_worker_build/ext\n\tln -s `pwd`/plugins-client/ext.language /tmp/c9_worker_build/ext/language\n\tln -s `pwd`/plugins-client/ext.codecomplete /tmp/c9_worker_build/ext/codecomplete\n\tln -s `pwd`/plugins-client/ext.jslanguage /tmp/c9_worker_build/ext/jslanguage\n\tln -s `pwd`/plugins-client/ext.csslanguage /tmp/c9_worker_build/ext/csslanguage\n\tln -s `pwd`/plugins-client/ext.htmllanguage /tmp/c9_worker_build/ext/htmllanguage\n\tln -s `pwd`/plugins-client/ext.linereport /tmp/c9_worker_build/ext/linereport\n\tln -s `pwd`/plugins-client/ext.linereport_php /tmp/c9_worker_build/ext/linereport_php\n\tnode Makefile.dryice.js worker\n\tcp node_modules/ace/build/src/worker* plugins-client/lib.ace/www/worker\n\ndefine \n\nifeq\n\noverride\n\n# copies built ace modes\nmode:\n\tmkdir -p plugins-client/lib.ace/www/mode\n\tcp `find node_modules/ace/build/src | grep -E \"mode-[a-zA-Z_0-9]+.js\"`  plugins-client/lib.ace/www/mode\n\n# copies built ace themes\ntheme:\n\tmkdir -p plugins-client/lib.ace/www/theme\n\tcp `find node_modules/ace/build/src | grep -E \"theme-[a-zA-Z_0-9]+.js\"` plugins-client/lib.ace/www/theme\n\ngzip_safe:\n\tfor i in `ls ./plugins-client/lib.packed/www/*.js`; do \\\n\t\tgzip -9 -v -c -q -f $$i > $$i.gz ; \\\n\tdone\n\ngzip:\n\tfor i in `ls ./plugins-client/lib.packed/www/*.js`; do \\\n\t\tgzip -9 -v -q -f $$i ; \\\n\tdone\n\nc9core: apf ace core worker mode theme\n    \npackage_clean: helper_clean c9core ext\n\npackage: helper c9core ext\n\ntest check:\n\ttest/run-tests.sh\t"
        }
      ],
      "id": "fhPJadfE",
      "createdAt": 1659507748672,
      "updatedAt": 1659507763698
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Markdown",
      "content": [
        {
          "label": "Fragment 1",
          "language": "markdown",
          "value": "## Support\n\nmassCode need your support, give a [star](https://github.com/massCodeIO/massCode/stargazers) on this repo or [donate](https://opencollective.com/masscode). All of this is valuable and will inspire further development.\n\n## Features\n### Organization\nmassCode allows you to organize snippets using multi-level folders as well as tags. Each snippet has fragments - tabs, which gives even greater level of organization.\n\n### Editor\nA snippet manager must not only provide organization of snippets but also have a good code editor. That's why under the hood of massCode there's [Ace](https://ace.c9.io). Ace is a high performance code editor which supports syntax highlighting for over 170 languages. We also added a [Prettier](https://prettier.io) to code formatter.\n\n### Real-time Render for HTML & CSS\nYou can not only collect snippets, but also see the rendering result for HTML and CSS in real time. Test the idea or just view the result.\n\n### Markdown\nmassCode allows you to write in Markdown and provide support to syntax highlighting, tables, list and other formatting. Also massCode supports [Mermaid](https://mermaid-js.github.io/mermaid/#) - diagramming and charting tool that renders Markdown-inspired text definitions to create and modify diagrams dynamically.\n\n### Search\nIt is impossible to imagine a productive snippets manager without quick access to snippets. Therefore massCode has a fast full-text search with highlighting of the search query.\n\n### Autosave\nmassCode automatically saves any changes you make during work, so you don't have to worry about losing changes.\n\n### Sync\nYou can use any service that provides cloud synchronization, such as iCloud Drive, Google Drive, Dropbox or other similar.\n\n### Database\nmassCode uses a simple JSON to store your data. The database files are on your local computer.\n\n### Integrations\nmassCode supports extensions for [VS Code](https://marketplace.visualstudio.com/items?itemName=AntonReshetov.masscode-assistant), [Raycast](https://www.raycast.com/antonreshetov/masscode) and [Alfred](https://github.com/massCodeIO/assistant-alfred), which gives even more possibilities to use application. With the VS Code extension you get practically zen mode, search for the necessary snippets and insert them immediately or save the selected code sections as a snippet.\n\n### Beautiful Screenshots\nCreate beautiful snippet images on different backgrounds and in different modes\n\n## Overview\n\nThe goal of creating this application was mostly my own growth as a developer. Also, I wanted this project to absorb the best of such applications already on the market (both free and paid). At the same time, I wanted this project to be an open source project.\n\n## Follow\n - News and updates on [Twitter](https://twitter.com/anton_reshetov).\n - [Discussions](https://github.com/massCodeIO/massCode/discussions).\n\n## Other\nYou can also [download](https://github.com/antonreshetov/massCode) massCode v1.\n\n## License\n\n[AGPL-3.0](https://github.com/massCodeIO/massCode/blob/master/LICENSE)\n\nCopyright (c) 2019-present, [Anton Reshetov](https://github.com/antonreshetov)."
        }
      ],
      "id": "ggDHY18p",
      "createdAt": 1659507764139,
      "updatedAt": 1659508402182
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Mask",
      "content": [
        {
          "label": "Fragment 1",
          "language": "mask",
          "value": "/* Mask Syntax Demo */\n\ndiv > ' Test ~[name]';\n\ndefine :userProfile {\n\theader {\n\t\th4 > @title;\n\t\tbutton.close;\n\t}\n}\n\n:userProfile {\n\t@title > ' Hello ~[: username.toUpperCase()]'\n}\n\nstyle {\n    html, body {\n        background: url('name.png') 0 0 no-repeat;\n    }\n}\n\nbutton {\n\tevent click (e) {\n\t    this.textContent = `name ${e.clientX} !`;\n\t}\n}\n\nmd > \"\"\"\n\n- div\n- span\n \nHello\n\n[one](http://google.com)\n\n\"\"\";\n\n\nheader .foo > 'Heading'\n\nbutton .baz x-signal='click: test' disabled > \"\n\tHello,\n\tworld \n\t\\\"Buddy\\\"\n\"\n\nvar a = {\n    name: `name ${window.innerWidth}`\n};\n\nspan .foo > \"~[bind: a.name]\""
        }
      ],
      "id": "HbKYMuyD",
      "createdAt": 1659508402682,
      "updatedAt": 1659508412451
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "MATLAB",
      "content": [
        {
          "label": "Fragment 1",
          "language": "matlab",
          "value": "%{\n   %{\n      Ace Matlab demo\n   %}\n%}\n\nclassdef hello\n   methods\n      function greet(this)\n         disp('Hello!')  % say hi\n      end\n   end\nend\n\n% transpose \na = [ 'x''y', \"x\\n\\\n      y\", 1' ]' + 2'"
        }
      ],
      "id": "Mpzgr7qp",
      "createdAt": 1659508412804,
      "updatedAt": 1659508428405
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "MediaWiki",
      "content": [
        {
          "label": "Fragment 1",
          "language": "mediawiki",
          "value": "{{Languages}}\n\n'''Ace''' is a standalone code editor written in [[wikipedia:JavaScript|JavaScript]]. Our goal is to create a browser based editor that matches and extends the features, usability and performance of existing native editors such as TextMate, Vim or Eclipse. It can be ''easily'' embedded in any web page or JavaScript application. Ace is developed as the primary editor for [http://www.cloud9ide.com/ Cloud9 IDE] and the successor of the Mozilla Skywriter (Bespin) Project.\n\n== Features ==\n* Syntax highlighting\n* Automatic indent and outdent\n* An optional command line\n* Handles huge documents (100,000 lines and more are no problem)\n* Fully customizable key bindings including VI and Emacs modes\n* Themes (TextMate themes can be imported)\n* Search and replace with regular expressions\n* Highlight matching parentheses\n* Toggle between soft tabs and real tabs\n* Displays hidden characters\n* Drag and drop text using the mouse\n* Line wrapping\n* Unstructured / user code folding\n* Live syntax checker (currently JavaScript/CoffeeScript)\n\n== Take Ace for a spin! ==\nCheck out the Ace live [http://ajaxorg.github.com/ace/ demo] or get a [http://run.cloud9ide.com Cloud9 IDE account] to experience Ace while editing one of your own GitHub projects.\n\nIf you want, you can use Ace as a textarea replacement thanks to the [http://ajaxorg.github.com/ace/build/textarea/editor.html Ace Bookmarklet].\n\n== Documentation ==\nYou find a lot more sample code in the [https://github.com/ajaxorg/ace/blob/master/demo/demo.js demo app].\n\nThere is also some documentation on the [https://github.com/ajaxorg/ace/wiki wiki page].\n\nIf you still need help, feel free to drop a mail on the [http://groups.google.com/group/ace-discuss ace mailing list].\n"
        }
      ],
      "id": "bK4qhdVr",
      "createdAt": 1659508429769,
      "updatedAt": 1659508458915
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "MEL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "mel",
          "value": "// animated duplicates, instances script\nproc animatedDuplication (int $rangeStart, int $rangeEnd, int $numOfDuplicates, int $duplicateOrInstance)\n{\n    int $range_start = $rangeStart;\n    int $range_end = $rangeEnd;\n    int $num_of_duplicates = $numOfDuplicates;\n    int $step_size = ($range_end - $range_start) / $num_of_duplicates;\n    int $i = 0;\n    int $temp;\n\n    currentTime $range_start;     // set to range start\n\n    string $selectedObjects[];    // to store selected objects\n    $selectedObjects = `ls -sl`;  // store selected objects\n    select $selectedObjects;\n\n    while ($i <= $num_of_duplicates)\n    {\n        $temp = $range_start + ($step_size * $i);\n        currentTime ($temp);\n        // seleced the objects to duplicate or instance\n        select $selectedObjects;\n        if($duplicateOrInstance == 0)\n        {\n            duplicate;\n        }\n        else\n        {\n            instance;\n        }\n        $i++;\n    }\n}"
        }
      ],
      "id": "H3g68CbT",
      "createdAt": 1659508460186,
      "updatedAt": 1659508475115
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Mikrotik",
      "content": [
        {
          "label": "Fragment 1",
          "language": "mikrotik",
          "value": ":global currentIP;\n\n:local newIP [/ip address get [find interface=\"ether1\"] address];\n\n:if ($newIP != $currentIP) do={\n    :put \"ip address $currentIP changed to $newIP\";\n   "
        }
      ],
      "id": "REC-Heib",
      "createdAt": 1659508475622,
      "updatedAt": 1659508513991
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "MIPS",
      "content": [
        {
          "label": "Fragment 1",
          "language": "mips",
          "value": "# hello.s ... print \"Hello, MIPS\"\n\n       .data          # the data segment\nmsg:   .asciiz \"Hello, MIPS\\n\"\n\n       .text          # the code segment\n       .globl main\nmain:  \n        la $a0, msg   # load the argument string\n        li $v0, 4     # load the system call (print)\n        syscall       # print the string\n        jr $ra        # return to caller (__start)"
        }
      ],
      "id": "sV5PPq5Q",
      "createdAt": 1659508517380,
      "updatedAt": 1659508706528
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "MySQL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "mysql",
          "value": "CREATE TABLE shop (\n    article INT UNSIGNED  DEFAULT '0000' NOT NULL,\n    dealer  CHAR(20)      DEFAULT ''     NOT NULL,\n    price   DECIMAL(16,2) DEFAULT '0.00' NOT NULL,\n    PRIMARY KEY(article, dealer));\nINSERT INTO shop VALUES\n    (1,'A',3.45),(1,'B',3.99),(2,'A',10.99),(3,'B',1.45),\n    (3,'C',1.69),(3,'D',1.25),(4,'D',19.95);"
        }
      ],
      "id": "DHN5Cik4",
      "createdAt": 1659508722877,
      "updatedAt": 1659508758823
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Nginx",
      "content": [
        {
          "label": "Fragment 1",
          "language": "nginx",
          "value": "user       www www;  ## Default: nobody\nworker_processes  5;  ## Default: 1\nerror_log  logs/error.log;\npid        logs/nginx.pid;\nworker_rlimit_nofile 8192;\n\nevents {\n  worker_connections  4096;  ## Default: 1024\n}\n\nhttp {\n  include    conf/mime.types;\n  include    /etc/nginx/proxy.conf;\n  include    /etc/nginx/fastcgi.conf;\n  index    index.html index.htm index.php;\n\n  default_type application/octet-stream;\n  log_format   main '$remote_addr - $remote_user [$time_local]  $status '\n    '\"$request\" $body_bytes_sent \"$http_referer\" '\n    '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n  access_log   logs/access.log  main;\n  sendfile     on;\n  tcp_nopush   on;\n  server_names_hash_bucket_size 128; # this seems to be required for some vhosts\n\n  server { # php/fastcgi\n    listen       80;\n    server_name  domain1.com www.domain1.com;\n    access_log   logs/domain1.access.log  main;\n    root         html;\n\n    location ~ \\.php$ {\n      fastcgi_pass   127.0.0.1:1025;\n    }\n  }\n\n  server { # simple reverse-proxy\n    listen       80;\n    server_name  domain2.com www.domain2.com;\n    access_log   logs/domain2.access.log  main;\n\n    # serve static files\n    location ~ ^/(images|javascript|js|css|flash|media|static)/  {\n      root    /var/www/virtual/big.server.com/htdocs;\n      expires 30d;\n    }\n\n    # pass requests for dynamic content to rails/turbogears/zope, et al\n    location / {\n      proxy_pass      http://127.0.0.1:8080;\n    }\n  }\n\n  upstream big_server_com {\n    server 127.0.0.3:8000 weight=5;\n    server 127.0.0.3:8001 weight=5;\n    server 192.168.0.1:8000;\n    server 192.168.0.1:8001;\n  }\n\n  server { # simple load balancing\n    listen          80;\n    server_name     big.server.com;\n    access_log      logs/big.server.access.log main;\n\n    location / {\n      proxy_pass      http://big_server_com;\n    }\n  }\n}"
        }
      ],
      "id": "b8-85iBK",
      "createdAt": 1659508760164,
      "updatedAt": 1659508774269
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Nim",
      "content": [
        {
          "label": "Fragment 1",
          "language": "nim",
          "value": "#[  #[ Multiline comment in already\n   commented out code. ]#\nproc p[T](x: T) = discard\n]#\necho \"This is code\"\nvar\n    p = 0B0_10001110100_0000101001000111101011101111111011000101001101001001'f64\n\nproc getAlphabet(): string =\n  var accm = \"\"\n  for letter in 'a'..'z':  # see iterators\n    accm.add(letter)\n  return accm\n\nassert(\"a\" * 10 == \"aaaaaaaaaa\")\n"
        }
      ],
      "id": "v7Sblz9B",
      "createdAt": 1659508774712,
      "updatedAt": 1659508785779
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Nix",
      "content": [
        {
          "label": "Fragment 1",
          "language": "nix",
          "value": "let\n square = x: x*x;\n sumOfSquares = x: y: square x + square y;\nin\n sumOfSquares 3 7"
        }
      ],
      "id": "lPjjHMlA",
      "createdAt": 1659508795441,
      "updatedAt": 1659508919266
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "NSIS",
      "content": [
        {
          "label": "Fragment 1",
          "language": "nsis",
          "value": "/*\n  NSIS Mode\n  for Ace\n*/\n\n; Includes\n!include MUI2.nsh\n\n; Settings\nName \"installer_name\"\nOutFile \"installer_name.exe\"\nRequestExecutionLevel user\nCRCCheck on\n!ifdef x64\n  InstallDir \"$PROGRAMFILES64\\installer_name\"\n!else\n  InstallDir \"$PROGRAMFILES\\installer_name\"\n!endif\n\n; Pages\n!insertmacro MUI_PAGE_INSTFILES\n\n; Sections\nSection \"section_name\" section_index\n  # your code here\nSectionEnd\n\n; Functions\nFunction .onInit\n  MessageBox MB_OK \"Here comes a$\\n$\\rline-break!\"\nFunctionEnd"
        }
      ],
      "id": "ZuEmPEeY",
      "createdAt": 1659508921858,
      "updatedAt": 1659509048694
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Nunjucks",
      "content": [
        {
          "label": "Fragment 1",
          "language": "nunjucks",
          "value": "{{ foo.bar }}\n{{ foo[\"bar\"] }}\n{{ foo | title }}\n{{ foo | join(\",\") }}\n{{ foo | replace(\"foo\", \"bar\") | capitalize }}\n{% block header %}\nThis is the default content\n{% endblock %}\n\n<section class=\"left\">\n  {% block left %}{% endblock %}\n</section>\n\n<section class=\"right\">\n  {% block right %}\n  This is more content\n  {% endblock %}\n</section>\n{% extends \"parent.html\" %}\n\n{% block left %}\nThis is the left side!\n{% endblock %}\n\n{% block right %}\nThis is the right side!\n{% endblock %}\n\n{% block right %}\n{{ super() }}\nRight side!\n{% endblock %}\n\n{% if variable %}\n  It is true\n{% endif %}\n\n{% if hungry %}\n  I am hungry\n{% elif tired %}\n  I am tired\n{% else %}\n  I am good!\n{% endif %}\n\n<h1>Posts</h1>\n<ul>\n{% for item in items %}\n  <li>{{ item.title }}</li>\n{% else %}\n  <li>This would display if the 'item' collection were empty</li>\n{% endfor %}\n</ul>\n\n{% for ingredient, amount in food %}\n  Use {{ amount }} of {{ ingredient }}\n{% endfor %}\n\n{% for fruit, color in fruits %}\n  Did you know that {{ fruit }} is {{ color }}?\n{% endfor %}\n\n{% for x, y, z in points %}\n  Point: {{ x }}, {{ y }}, {{ z }}\n{% endfor %}\n\n<h1>Posts</h1>\n<ul>\n{% asyncEach item in items %}\n  {% include \"item-template.html\" %}\n{% endeach %}\n</ul>\n\n<h1>Posts</h1>\n<ul>\n{% asyncAll item in items %}\n  <li>{{ item.id | lookup }}</li>\n{% endall %}\n</ul>\n\n{% macro field(name, value='', type='text') %}\n<div class=\"field\">\n  <input type=\"{{ type }}\" name=\"{{ name }}\"\n         value=\"{{ value | escape }}\" />\n</div>\n{% endmacro %}\n\n{{ username }}\n{% set username = \"joe\" %}\n{{ username }}\n\n{% set standardModal %}\n    {% include 'standardModalData.html' %}\n{% endset %}\n\n<div class=\"js-modal\" data-modal=\"{{standardModal | e}}\">\n\n{% set standardModal %}\n    {% include 'standardModalData.html' %}\n{% endset %}\n\n<div class=\"js-modal\" data-modal=\"{{standardModal | e}}\">\n\n{% include \"missing.html\" ignore missing %}\n\n{% import \"forms.html\" as forms %}\n\n{{ forms.label('Username') }}\n{{ forms.field('user') }}\n{{ forms.label('Password') }}\n{{ forms.field('pass', type='password') }}\n\n{% from \"forms.html\" import field, label as description %}\n\n{{ description('Username') }}\n{{ field('user') }}\n{{ description('Password') }}\n{{ field('pass', type='password') }}\n\n{{ foo(1, 2, bar=3, baz=4) }}\n\n{# Loop through all the users #}\n{% for user in users %}...{% endfor %}\n\n\n{% set cls = cycler(\"odd\", \"even\") %}\n{% for row in rows %}\n  <div class=\"{{ cls.next() }}\">{{ row.name }}</div>\n{% endfor %}"
        }
      ],
      "id": "82_QxEls",
      "createdAt": 1659509069864,
      "updatedAt": 1659509439491
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Objective-C",
      "content": [
        {
          "label": "Fragment 1",
          "language": "objectivec",
          "value": "@protocol Printing: someParent\n-(void) print;\n@end\n\n@interface Fraction: NSObject <Printing, NSCopying> {\n    int numerator;\n    int denominator;\n}\n@end\n\n@\"blah\\8\" @\"a\\222sd\\d\" @\"\\faw\\\"\\? \\' \\4 n\\\\\" @\"\\56\"\n@\"\\xSF42\"\n\n-(NSDecimalNumber*)addCount:(id)addObject{\n\nreturn [count decimalNumberByAdding:addObject.count];\n\n}\n\n  NS_DURING  NS_HANDLER NS_ENDHANDLER\n\n@try {\n   if (argc > 1)    {\n    @throw [NSException exceptionWithName:@\"Throwing a test exception\" reason:@\"Testing the @throw directive.\" userInfo:nil];\n   }\n} \n@catch (id theException) {\n    NSLog(@\"%@\", theException);\n    result = 1  ;\n} \n@finally {\n    NSLog(@\"This always happens.\");\n    result += 2 ;\n}\n\n    @synchronized(lock) {\n        NSLog(@\"Hello World\");\n    }\n\nstruct { @defs( NSObject) }\n\nchar *enc1 = @encode(int);\n\n         IBOutlet|IBAction|BOOL|SEL|id|unichar|IMP|Class \n\n\n @class @protocol\n\n@public\n  // instance variables\n@package\n  // instance variables\n@protected\n  // instance variables\n@private\n  // instance variables\n\n  YES NO Nil nil\nNSApp()\nNSRectToCGRect (Protocol ProtocolFromString:\"NSTableViewDelegate\"))\n\n[SPPoint pointFromCGPoint:self.position]\n\nNSRoundDownToMultipleOfPageSize\n\n#import <stdio.h>\n\nint main( int argc, const char *argv[] ) {\n    printf( \"hello world\\n\" );\n    return 0;\n}\n\nNSChangeSpelling\n\n@\"0 != SUBQUERY(image, $x, 0 != SUBQUERY($x.bookmarkItems, $y, $y.@count == 0).@count).@count\"\n\n@selector(lowercaseString) @selector(uppercaseString:)\n\nNSFetchRequest *localRequest = [[NSFetchRequest alloc] init];  \nlocalRequest.entity = [NSEntityDescription entityForName:@\"VNSource\" inManagedObjectContext:context];  \nlocalRequest.sortDescriptors = [NSArray arrayWithObject:[NSSortDescriptor sortDescriptorWithKey:@\"resolution\" ascending:YES]];  \nNSPredicate *predicate = [NSPredicate predicateWithFormat:@\"0 != SUBQUERY(image, $x, 0 != SUBQUERY($x.bookmarkItems, $y, $y.@count == 0).@count).@count\"];\n[NSPredicate predicateWithFormat:]\nNSString *predicateString = [NSString stringWithFormat:@\"SELF beginsWith[cd] %@\", searchString];\nNSPredicate *pred = [NSPredicate predicateWithFormat:predicateString];\nNSArray *filteredKeys = [[myMutableDictionary allKeys] filteredArrayUsingPredicate:pred]; \n\nlocalRequest.predicate = [NSPredicate predicateWithFormat:@\"whichChart = %@\" argumentArray: listChartToDownload];\nlocalRequest.fetchBatchSize = 100;\narrayRequest    = [context  executeFetchRequest:localRequest error:&error1];\n\n[localRequest   release];\n\n#ifndef Nil\n#define Nil __DARWIN_NULL   /* id of Nil class */\n#endif\n\n@implementation MyObject\n- (unsigned int)areaOfWidth:(unsigned int)width\n                height:(unsigned int)height\n{\n  return width*height;\n}\n@end\n"
        }
      ],
      "id": "OTYb8BZn",
      "createdAt": 1659509440384,
      "updatedAt": 1659509466374
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "OCaml",
      "content": [
        {
          "label": "Fragment 1",
          "language": "ocaml",
          "value": "(*\n * Example of early return implementation taken from\n * http://ocaml.janestreet.com/?q=node/91\n *)\n\nlet with_return (type t) (f : _ -> t) =\n  let module M =\n     struct exception Return of t end\n  in\n  let return = { return = (fun x -> raise (M.Return x)); } in\n  try f return with M.Return x -> x\n\n\n(* Function that uses the 'early return' functionality provided by `with_return` *)\nlet sum_until_first_negative list =\n  with_return (fun r ->\n    List.fold list ~init:0 ~f:(fun acc x ->\n      if x >= 0 then acc + x else r.return acc))"
        }
      ],
      "id": "R3z9RsNY",
      "createdAt": 1659509467903,
      "updatedAt": 1659509480532
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Pascal",
      "content": [
        {
          "label": "Fragment 1",
          "language": "pascal",
          "value": "(*****************************************************************************\n * A simple bubble sort program.  Reads integers, one per line, and prints   *\n * them out in sorted order.  Blows up if there are more than 49.            *\n *****************************************************************************)\nPROGRAM Sort(input, output);\n    CONST\n        (* Max array size. *)\n        MaxElts = 50;\n    TYPE \n        (* Type of the element array. *)\n        IntArrType = ARRAY [1..MaxElts] OF Integer;\n\n    VAR\n        (* Indexes, exchange temp, array size. *)\n        i, j, tmp, size: integer;\n\n        (* Array of ints *)\n        arr: IntArrType;\n\n    (* Read in the integers. *)\n    PROCEDURE ReadArr(VAR size: Integer; VAR a: IntArrType); \n        BEGIN\n            size := 1;\n            WHILE NOT eof DO BEGIN\n                readln(a[size]);\n                IF NOT eof THEN \n                    size := size + 1\n            END\n        END;\n\n    BEGIN\n        (* Read *)\n        ReadArr(size, arr);\n\n        (* Sort using bubble sort. *)\n        FOR i := size - 1 DOWNTO 1 DO\n            FOR j := 1 TO i DO \n                IF arr[j] > arr[j + 1] THEN BEGIN\n                    tmp := arr[j];\n                    arr[j] := arr[j + 1];\n                    arr[j + 1] := tmp;\n                END;\n\n        (* Print. *)\n        FOR i := 1 TO size DO\n            writeln(arr[i])\n    END.\n            "
        }
      ],
      "id": "J8J-Qn-3",
      "createdAt": 1659509482727,
      "updatedAt": 1659509621471
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Perl",
      "content": [
        {
          "label": "Fragment 1",
          "language": "perl",
          "value": "#!/usr/bin/perl\n=begin\n perl example code for Ace\n=cut\n\nuse v5.10;\nuse strict;\nuse warnings;\n\nuse List::Util qw(first);\nmy @primes;\n\n# Put 2 as the first prime so we won't have an empty array\npush @primes, 2;\n\nfor my $number_to_check (3 .. 200) {\n    # Check if the current number is divisible by any previous prime\n    # if it is, skip to the next number.  Use first to bail out as soon\n    # as we find a prime that divides it.\n    next if (first {$number_to_check % $_ == 0} @primes);\n\n    # If we reached this point it means $number_to_check is not\n    # divisable by any prime number that came before it.\n    push @primes, $number_to_check;\n}\n\n# List out all of the primes\nsay join(', ', @primes);\n"
        }
      ],
      "id": "jKu61d0A",
      "createdAt": 1659509623058,
      "updatedAt": 1659509736352
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "pgSQL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "pgsql",
          "value": "\nBEGIN;\n\n/**\n* Samples from PostgreSQL src/tutorial/basics.source\n*/\nCREATE TABLE weather (\n\tcity\t\tvarchar(80),\n\ttemp_lo\t\tint,\t\t-- low temperature\n\ttemp_hi\t\tint,\t\t-- high temperature\n\tprcp\t\treal,\t\t-- precipitation\n\t\"date\"\t\tdate\n);\n\nCREATE TABLE cities (\n\tname\t\tvarchar(80),\n\tlocation\tpoint\n);\n\n\nINSERT INTO weather\n    VALUES ('San Francisco', 46, 50, 0.25, '1994-11-27');\n\nINSERT INTO cities\n    VALUES ('San Francisco', '(-194.0, 53.0)');\n\nINSERT INTO weather (city, temp_lo, temp_hi, prcp, \"date\")\n    VALUES ('San Francisco', 43, 57, 0.0, '1994-11-29');\n\nINSERT INTO weather (date, city, temp_hi, temp_lo)\n    VALUES ('1994-11-29', 'Hayward', 54, 37);\n\n\nSELECT city, (temp_hi+temp_lo)/2 AS temp_avg, \"date\" FROM weather;\n\nSELECT city, temp_lo, temp_hi, prcp, \"date\", location\n    FROM weather, cities\n    WHERE city = name;\n\n\n\n/**\n* Dollar quotes starting at the end of the line are colored as SQL unless\n* a special language tag is used. Dollar quote syntax coloring is implemented\n* for Perl, Python, JavaScript, and Json.\n*/\ncreate or replace function blob_content_chunked(\n    in p_data bytea, \n    in p_chunk integer)\nreturns setof bytea as $$\n-- Still SQL comments\ndeclare\n\tv_size integer = octet_length(p_data);\nbegin\n\tfor i in 1..v_size by p_chunk loop\n\t\treturn next substring(p_data from i for p_chunk);\n\tend loop;\nend;\n$$ language plpgsql stable;\n\n\n-- pl/perl\nCREATE FUNCTION perl_max (integer, integer) RETURNS integer AS $perl$\n    # perl comment...\n    my ($x,$y) = @_;\n    if (! defined $x) {\n        if (! defined $y) { return undef; }\n        return $y;\n    }\n    if (! defined $y) { return $x; }\n    if ($x > $y) { return $x; }\n    return $y;\n$perl$ LANGUAGE plperl;\n\n-- pl/python\nCREATE FUNCTION usesavedplan() RETURNS trigger AS $python$\n    # python comment...\n    if SD.has_key(\"plan\"):\n        plan = SD[\"plan\"]\n    else:\n        plan = plpy.prepare(\"SELECT 1\")\n        SD[\"plan\"] = plan\n$python$ LANGUAGE plpythonu;\n\n-- pl/v8 (javascript)\nCREATE FUNCTION plv8_test(keys text[], vals text[]) RETURNS text AS $javascript$\nvar o = {};\nfor(var i=0; i<keys.length; i++){\n o[keys[i]] = vals[i];\n}\nreturn JSON.stringify(o);\n$javascript$ LANGUAGE plv8 IMMUTABLE STRICT;\n\n-- json\nselect * from json_object_keys($json$\n{\n  \"f1\": 5,\n  \"f2\": \"test\",\n  \"f3\": {}\n}\n$json$);\n\n\n-- psql commands\n\\df cash*\n\n\n-- Some string samples.\nselect 'don''t do it now;' || 'maybe later';\nselect E'dont\\'t do it';\nselect length('some other''s stuff' || $$cat in hat's stuff $$);\n\nselect $$ strings\nover multiple \nlines - use dollar quotes\n$$;\n\nEND;\n"
        }
      ],
      "id": "f7bHURID",
      "createdAt": 1659509738328,
      "updatedAt": 1659509757188
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "PHP",
      "content": [
        {
          "label": "Fragment 1",
          "language": "php",
          "value": "require_once 'Zend/Uri/Http.php';\n\nnamespace Location\\Web;\n\ninterface Factory\n{\n    static function _factory();\n}\n\nabstract class URI extends BaseURI implements Factory\n{\n    abstract function test();\n\n    public static $st1 = 1;\n    const ME = \"Yo\";\n    var $list = NULL;\n    private $var;\n\n    /**\n     * Returns a URI\n     *\n     * @return URI\n     */\n    static public function _factory($stats = array(), $uri = 'http')\n    {\n        echo __METHOD__;\n        $uri = explode(':', $uri, 0b10);\n        $schemeSpecific = isset($uri[1]) ? $uri[1] : '';\n        $desc = 'Multi\nline description';\n\n        // Security check\n        if (!ctype_alnum($scheme)) {\n            throw new Zend_Uri_Exception('Illegal scheme');\n        }\n\n        $this->var = 0 - self::$st;\n        $this->list = list(Array(\"1\"=> 2, 2=>self::ME, 3 => \\Location\\Web\\URI::class));\n\n        return [\n            'uri'   => $uri,\n            'value' => null,\n        ];\n    }\n}\n\nmatch ($key) {\n    1 => 'Integer 1',\n    '1' => 'String 1',\n    true => 'Bool true',\n    [] => 'Empty array',\n    [1] => 'Array [1]',\n};\n\nenum Foo: string {\n    case Test = 'test';\n}\n\necho URI::ME . URI::$st1;\n\n__halt_compiler () ; datahere\ndatahere\ndatahere */\ndatahere"
        }
      ],
      "id": "yuH9oxm0",
      "createdAt": 1659509784436,
      "updatedAt": 1659509895082
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "PHP - Blade Template",
      "content": [
        {
          "label": "Fragment 1",
          "language": "php_laravel_blade",
          "value": "<!-- Stored in resources/views/layouts/app.blade.php -->\n\n<html>\n    <head>\n        <title>App Name - @yield('title')</title>\n        <script>\n            var app = @json($array);\n        </script>\n    </head>\n    <body>\n        @extends('layouts.app')\n        @section('sidebar')\n            @parent\n\n            <p>This is appended to the master sidebar.</p>\n        @endsection\n \n        @if (count($records) === 1)\n            I have one record!\n        @elseif (count($records) > 1)\n            I have multiple records!\n        @else\n            I don't have any records!\n        @endif\n\n        @foreach ($users as $user)\n            @if ($user->type == 1)\n                @continue\n            @endif\n\n            <li>{{ $user->name }}</li>\n\n            @if ($user->number == 5)\n                @break\n            @endif\n        @endforeach\n\n        @foreach ($users as $user)\n            @continue($user->type == 1)\n\n            <li>{{ $user->name }}</li>\n\n            @break($user->number == 5)\n        @endforeach\n\n        <div>\n            @include('shared.errors')\n\n            <form>\n                <!-- Form Contents -->\n            </form>\n        </div>\n\n        @includeIf('view.name', ['some' => 'data'])\n\n        @env('local')\n            // The application is in the local environment...\n        @elseenv('testing')\n            // The application is in the testing environment...\n        @else\n            // The application is not in the local or testing environment...\n        @endenv\n\n        <div class=\"container\">\n            @yield('content')\n        </div>\n    </body>\n</html>\n\n\n{{-- comment --}}\n\n@if (\n    {{-- comment --}}\n    /*block comment*/\n    #another comment\n    $user->type == 1\n    // c comment\n    /* comment*/\n)\n    # not a comment <div id=\"#//x\"></div>\n@endif\n"
        }
      ],
      "id": "WwBajcHG",
      "createdAt": 1659509896117,
      "updatedAt": 1659509957894
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Pig",
      "content": [
        {
          "label": "Fragment 1",
          "language": "pig",
          "value": "A = load 'mobydick.txt';\nB = foreach A generate flatten(TOKENIZE((chararray)$0)) as word;\nC = filter B by word matches '\\\\w+';\nD = group C by word;\nE = foreach D generate COUNT(C) as count, group as word;\nF = order E by count desc;\n-- one comment\n/* another comment */\ndump F;\n"
        }
      ],
      "id": "uA6UMShf",
      "createdAt": 1659509975420,
      "updatedAt": 1659509991588
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Powershell",
      "content": [
        {
          "label": "Fragment 1",
          "language": "powershell",
          "value": "# This is a simple comment\nfunction Hello($name) {\n  Write-host \"Hello $name\"\n}\n\nfunction add($left, $right=4) {\n    if ($right -ne 4) {\n        return $left\n    } elseif ($left -eq $null -and $right -eq 2) {\n        return 3\n    } else {\n        return 2\n    }\n}\n\n$number = 1 + 2;\n$number += 3\n\nWrite-Host Hello -name \"World\"\n\n$an_array = @(1, 2, 3)\n$a_hash = @{\"something\" = \"something else\"}\n\n& notepad .\\readme.md\n"
        }
      ],
      "id": "ACgKGq8A",
      "createdAt": 1659509992390,
      "updatedAt": 1659510027409
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Paat",
      "content": [
        {
          "label": "Fragment 1",
          "language": "praat",
          "value": "form Highlighter test\n  sentence My_sentence This should all be a string\n  text My_text This should also all be a string\n  word My_word Only the first word is a string, the rest is invalid\n  boolean Binary 1\n  boolean Text no\n  boolean Quoted \"yes\"\n  comment This should be a string\n  real left_Range -123.6\n  positive right_Range_max 3.3\n  integer Int 4\n  natural Nat 4\nendform\n\n# External scripts\ninclude /path/to/file\nrunScript: \"/path/to/file\"\nexecute /path/to/file\n\nstopwatch\n\n# old-style procedure call\ncall oldStyle \"quoted\" 2 unquoted string\nassert oldStyle.local = 1\n\n# New-style procedure call with parens\n@newStyle(\"quoted\", 2, \"quoted string\")\nif praatVersion >= 5364 \n  # New-style procedure call with colon\n  @newStyle: \"quoted\", 2, \"quoted string\"\nendif\n\n# if-block with built-in variables\nif windows\n  # We are on Windows\nelsif unix = 1 or !macintosh\n  exitScript: \"We are on Linux\"\nelse macintosh == 1\n  exit We are on Mac\nendif\n\n# inline if with inline comment\nvar = if macintosh = 1 then 0 else 1 fi ; This is an inline comment\n\n# for-loop with explicit from using local variable\n# and paren-style function calls and variable interpolation\nn = numberOfSelected(\"Sound\")\nfor i from newStyle.local to n\n  sound'i' = selected(\"Sound\", i)\n  sound[i] = sound'i'\nendfor\n\nfor i from 1 to n\n  # Different styles of object selection\n  select sound'i'\n  sound = selected()\n  sound$ = selected$(\"Sound\")\n  select Sound 'sound$'\n  selectObject(sound[i])\n  selectObject: sound\n  \n  # Pause commands\n  beginPause(\"Viewing \" + sound$)\n  if i > 1\n    button = endPause(\"Stop\", \"Previous\",\n      ...if i = total_sounds then \"Finish\" else \"Next\" fi,\n      ...3, 1)\n  else\n    button = endPause(\"Stop\",\n      ...if i = total_sounds then \"Finish\" else \"Next\" fi,\n      ...2, 1)  \n  endif\n  editor_name$ = if total_textgrids then \"TextGrid \" else \"Sound \" fi + name$\n  nocheck editor 'editor_name$'\n    nocheck Close\n  nocheck endeditor\n  \n  # New-style standalone command call\n  Rename: \"SomeName\"\n\n  # Command call with assignment\n  duration = Get total duration\n  \n  # Multi-line command with modifier\n  pitch = noprogress To Pitch (ac): 0, 75, 15, \"no\",\n    ...0.03, 0.45, 0.01, 0.35, 0.14, 600\n    \n  # do-style command with assignment\n  minimum = do(\"Get minimum...\", 0, 0, \"Hertz\", \"Parabolic\")\n\n  # New-style multi-line command call with broken strings\n  table = Create Table with column names: \"table\", 0,\n    ...\"file subject speaker\n    ...f0 f1 f2 f3 \" +\n    ...\"duration response\"\n  \n  removeObject: pitch, table\n    \n  # Picture window commands\n  selectObject: sound\n  # do-style command\n  do(\"Select inner viewport...\", 1, 6, 0.5, 1.5)\n  Black\n  Draw... 0 0 0 0 \"no\" Curve\n  Draw inner box\n  Text bottom: \"yes\", sound$\n  Erase all\n  \n  # Demo window commands\n  demo Erase all\n  demo Select inner viewport... 0 100 0 100\n  demo Axes... 0 100 0 100\n  demo Paint rectangle... white 0 100 0 100\n  demo Text... 50 centre 50 half Click to finish\n  demoWaitForInput ( )\n  demo Erase all\n  demo Text: 50, \"centre\", 50, \"half\", \"Finished\"\nendfor\n\n# An old-style sendpraat block\nsendpraat Praat\n  ...'newline$' Create Sound as pure tone... \"tone\" 1 0 0.4 44100 440 0.2 0.01 0.01\n  ...'newline$' Play\n  ...'newline$' Remove\n\n# A new-style sendpraat block\nbeginSendPraat: \"Praat\"\n  Create Sound as pure tone: \"tone\", 1, 0, 0.4, 44100, 440, 0.2, 0.01, 0.01\n  duration = Get total duration\n  Remove\nendSendPraat: \"duration\"\nappendInfoLine: \"The generated sound lasted for \", duration, \"seconds\"\n\ntime = stopwatch\nclearinfo\necho This script took \nprint 'time' seconds to \nprintline execute.\n\n# Old-style procedure declaration\nprocedure oldStyle .str1$ .num .str2$\n  .local = 1\nendproc\n\n# New-style procedure declaration with parentheses\nprocedure newStyle (.str1$, .num, .str2$)\n  # Command with \"local\" variable\n  .local = Get total duration\nendproc\n\n# New-style procedure declaration with colon\nprocedure newStyle: .str1$, .num, .str2$\n  # Command with \"local\" variable\n  newStyle.local = Get total duration\nendproc\n"
        }
      ],
      "id": "iH45a-i3",
      "createdAt": 1659510027898,
      "updatedAt": 1659510048404
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Prisma",
      "content": [
        {
          "label": "Fragment 1",
          "language": "prisma",
          "value": "generator photon {\n  provider = \"photonjs\"\n}\n\nmodel User {\n  id                 String           @default(cuid()) @id\n  createdAt          DateTime         @default(now())\n  updatedAt          DateTime         @updatedAt\n  firstName          String\n  lastName           String\n  email              String           @unique\n  password           String\n  phone              String\n  responseRate       Float?\n  responseTime       Int?\n  ReportsTo  User?  @relation(\"EmployeeToEmployee_ReportsTo\")\n  employees         User[] @relation(\"EmployeeToEmployee_ReportsTo\")\n  isSuperHost        Boolean\n  ownedPlaces        Place[]\n  location           Location?\n  bookings           Booking[]\n  paymentAccount     PaymentAccount[]\n  sentMessages       Message[]        @relation(\"SentMessages\")\n  receivedMessages   Message[]        @relation(\"ReceivedMessages\")\n  notifications      Notification[]\n  profilePicture     Picture?\n  hostingExperiences Experience[]\n}\n\nmodel Place {\n  id                String             @default(cuid()) @id\n  name              String\n  size              PLACE_SIZES?\n  shortDescription  String\n  description       String\n  slug              String\n  maxGuests         Int\n  numBedrooms       Int\n  numBeds           Int\n  numBaths          Int\n  reviews           Review[]\n  amenities         Amenities\n  host              User\n  pricing           Pricing\n  location          Location\n  views             Views\n  guestRequirements GuestRequirements?\n  policies          Policies?\n  houseRules        HouseRules?\n  bookings          Booking[]\n  pictures          Picture[]\n  popularity        Int\n}\n\nmodel Pricing {\n  id              String    @default(cuid()) @id\n  place           Place\n  monthlyDiscount Int?\n  weeklyDiscount  Int?\n  perNight        Int\n  smartPricing    Boolean\n  basePrice       Int\n  averageWeekly   Int\n  averageMonthly  Int\n  cleaningFee     Int?\n  securityDeposit Int?\n  extraGuests     Int?\n  weekendPricing  Int?\n  currency        CURRENCY?\n}\n\nmodel GuestRequirements {\n  id                            String  @default(cuid()) @id\n  govIssuedId                   Boolean\n  recommendationsFromOtherHosts Boolean\n  guestTripInformation          Boolean\n  place                         Place\n}\n\nmodel Policies {\n  id               String   @default(cuid()) @id\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n  checkInStartTime Float\n  checkInEndTime   Float\n  checkoutTime     Float\n  place            Place\n}\n\nmodel HouseRules {\n  id                      String   @default(cuid()) @id\n  createdAt               DateTime @default(now())\n  updatedAt               DateTime @updatedAt\n  suitableForChildren     Boolean?\n  suitableForInfants      Boolean?\n  petsAllowed             Boolean?\n  smokingAllowed          Boolean?\n  partiesAndEventsAllowed Boolean?\n  additionalRules         String?\n}\n\nmodel Views {\n  id       String @default(cuid()) @id\n  lastWeek Int\n  place    Place\n}\n\nmodel Location {\n  id            String         @default(cuid()) @id\n  lat           Float\n  lng           Float\n  neighbourHood Neighbourhood?\n  user          User?\n  place         Place?\n  address       String\n  directions    String\n  experience    Experience?\n  restaurant    Restaurant?\n}\n\nmodel Neighbourhood {\n  id          String     @default(cuid()) @id\n  locations   Location[]\n  name        String\n  slug        String\n  homePreview Picture?\n  city        City\n  featured    Boolean\n  popularity  Int\n}\n\nmodel City {\n  id             String          @default(cuid()) @id\n  name           String\n  neighbourhoods Neighbourhood[]\n}\n\nmodel Picture {\n  id  String @default(cuid()) @id\n  url String\n}\n\nmodel Experience {\n  id             String              @default(cuid()) @id\n  category       ExperienceCategory?\n  title          String\n  host           User\n  location       Location\n  pricePerPerson Int\n  reviews        Review[]\n  preview        Picture\n  popularity     Int\n}\n\nmodel ExperienceCategory {\n  id         String      @default(cuid()) @id\n  mainColor  String\n  name       String\n  experience Experience?\n}\n\nmodel Amenities {\n  id                        String  @default(cuid()) @id\n  place                     Place\n  elevator                  Boolean\n  petsAllowed               Boolean\n  internet                  Boolean\n  kitchen                   Boolean\n  wirelessInternet          Boolean\n  familyKidFriendly         Boolean\n  freeParkingOnPremises     Boolean\n  hotTub                    Boolean\n  pool                      Boolean\n  smokingAllowed            Boolean\n  wheelchairAccessible      Boolean\n  breakfast                 Boolean\n  cableTv                   Boolean\n  suitableForEvents         Boolean\n  dryer                     Boolean\n  washer                    Boolean\n  indoorFireplace           Boolean\n  tv                        Boolean\n  heating                   Boolean\n  hangers                   Boolean\n  iron                      Boolean\n  hairDryer                 Boolean\n  doorman                   Boolean\n  paidParkingOffPremises    Boolean\n  freeParkingOnStreet       Boolean\n  gym                       Boolean\n  airConditioning           Boolean\n  shampoo                   Boolean\n  essentials                Boolean\n  laptopFriendlyWorkspace   Boolean\n  privateEntrance           Boolean\n  buzzerWirelessIntercom    Boolean\n  babyBath                  Boolean\n  babyMonitor               Boolean\n  babysitterRecommendations Boolean\n  bathtub                   Boolean\n  changingTable             Boolean\n  childrensBooksAndToys     Boolean\n  childrensDinnerware       Boolean\n  crib                      Boolean\n}\n\nmodel Review {\n  id            String      @default(cuid()) @id\n  createdAt     DateTime    @default(now())\n  text          String\n  stars         Int\n  accuracy      Int\n  location      Int\n  checkIn       Int\n  value         Int\n  cleanliness   Int\n  communication Int\n  place         Place\n  experience    Experience?\n}\n\nmodel Booking {\n  id        String   @default(cuid()) @id\n  createdAt DateTime @default(now())\n  bookee    User\n  place     Place\n  startDate DateTime\n  endDate   DateTime\n  payment   Payment?\n}\n\nmodel Payment {\n  id            String         @default(cuid()) @id\n  createdAt     DateTime       @default(now())\n  serviceFee    Float\n  placePrice    Float\n  totalPrice    Float\n  booking       Booking\n  paymentMethod PaymentAccount\n}\n\nmodel PaymentAccount {\n  id         String                 @default(cuid()) @id\n  createdAt  DateTime               @default(now())\n  type       PAYMENT_PROVIDER?\n  user       User\n  payments   Payment[]\n  paypal     PaypalInformation?\n  creditcard CreditCardInformation?\n}\n\nmodel PaypalInformation {\n  id             String         @default(cuid()) @id\n  createdAt      DateTime       @default(now())\n  email          String\n  paymentAccount PaymentAccount\n}\n\nmodel CreditCardInformation {\n  id             String          @default(cuid()) @id\n  createdAt      DateTime        @default(now())\n  cardNumber     String\n  expiresOnMonth Int\n  expiresOnYear  Int\n  securityCode   String\n  firstName      String\n  lastName       String\n  postalCode     String\n  country        String\n  paymentAccount PaymentAccount?\n}\n\nmodel Message {\n  id          String   @default(cuid()) @id\n  createdAt   DateTime @default(now())\n  from        User     @relation(\"SentMessages\")\n  to          User     @relation(\"ReceivedMessages\")\n  deliveredAt DateTime\n  readAt      DateTime\n}\n\nmodel Notification {\n  id        String             @default(cuid()) @id\n  createdAt DateTime           @default(now())\n  type      NOTIFICATION_TYPE?\n  user      User\n  link      String\n  readDate  DateTime\n}\n\nmodel Restaurant {\n  id                String    @default(cuid()) @id\n  createdAt         DateTime  @default(now())\n  title             String\n  avgPricePerPerson Int\n  pictures          Picture[]\n  location          Location\n  isCurated         Boolean\n  slug              String\n  popularity        Int\n}\n\nenum CURRENCY {\n  CAD\n  CHF\n  EUR\n  JPY\n  USD\n  ZAR\n}\n\nenum PLACE_SIZES {\n  ENTIRE_HOUSE\n  ENTIRE_APARTMENT\n  ENTIRE_EARTH_HOUSE\n  ENTIRE_CABIN\n  ENTIRE_VILLA\n  ENTIRE_PLACE\n  ENTIRE_BOAT\n  PRIVATE_ROOM\n}\n\nenum PAYMENT_PROVIDER {\n  PAYPAL\n  CREDIT_CARD\n}\n\nenum NOTIFICATION_TYPE {\n  OFFER\n  INSTANT_BOOK\n  RESPONSIVENESS\n  NEW_AMENITIES\n  HOUSE_RULES\n}"
        }
      ],
      "id": "KTDefWxq",
      "createdAt": 1659510049111,
      "updatedAt": 1659510072362
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Prolog",
      "content": [
        {
          "label": "Fragment 1",
          "language": "prolog",
          "value": "partition([], _, [], []).\npartition([X|Xs], Pivot, Smalls, Bigs) :-\n    (   X @< Pivot ->\n        Smalls = [X|Rest],\n        partition(Xs, Pivot, Rest, Bigs)\n    ;   Bigs = [X|Rest],\n        partition(Xs, Pivot, Smalls, Rest)\n    ).\n \nquicksort([])     --> [].\nquicksort([X|Xs]) -->\n    { partition(Xs, X, Smaller, Bigger) },\n    quicksort(Smaller), [X], quicksort(Bigger).\n\nperfect(N) :-\n    between(1, inf, N), U is N // 2,\n    findall(D, (between(1,U,D), N mod D =:= 0), Ds),\n    sumlist(Ds, N)."
        }
      ],
      "id": "nqEhifOx",
      "createdAt": 1659510080607,
      "updatedAt": 1659510103148
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Properties",
      "content": [
        {
          "label": "Fragment 1",
          "language": "properties",
          "value": "# You are reading the \".properties\" entry.\n! The exclamation mark can also mark text as comments.\n# The key and element characters #, !, =, and : are written with a preceding backslash to ensure that they are properly loaded.\nwebsite = http\\://en.wikipedia.org/\nlanguage = English\n# The backslash below tells the application to continue reading\n# the value onto the next line.\nmessage = Welcome to \\\n          Wikipedia!\n# Add spaces to the key\nkey\\ with\\ spaces = This is the value that could be looked up with the key \"key with spaces\".\n# Unicode\ntab : \\u0009\nempty-key=\nlast.line=value\n"
        }
      ],
      "id": "VXNpdnl9",
      "createdAt": 1659510103416,
      "updatedAt": 1659510130368
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Protobuf",
      "content": [
        {
          "label": "Fragment 1",
          "language": "protobuf",
          "value": "message Point {\n  required int32 x = 1;\n  required int32 y = 2;\n  optional string label = 3;\n}\n\nmessage Line {\n  required Point start = 1;\n  required Point end = 2;\n  optional string label = 3;\n}\n\nmessage Polyline {\n  repeated Point point = 1;\n  optional string label = 2;\n}"
        }
      ],
      "id": "W_wDJx6s",
      "createdAt": 1659510131080,
      "updatedAt": 1659510144680
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Pug",
      "content": [
        {
          "label": "Fragment 1",
          "language": "pug",
          "value": "- var friends = 10\ncase friends\n  when 0\n    p you have no friends\n  when 1\n    p you have a friend\n  default\n    p you have #{friends} friends"
        }
      ],
      "id": "HDTFA7pE",
      "createdAt": 1659510147077,
      "updatedAt": 1659510166311
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Puppet",
      "content": [
        {
          "label": "Fragment 1",
          "language": "puppet",
          "value": "define apache::vhost ($port, $docroot, $servername = $title, $vhost_name = '*') {\n  include apache\n  include apache::params\n  $vhost_dir = $apache::params::vhost_dir\n  file { \"${vhost_dir}/${servername}.conf\":\n      content => template('apache/vhost-default.conf.erb'),\n      owner   => 'www',\n      group   => 'www',\n      mode    => '644',\n      require => Package['httpd'],\n      notify  => Service['httpd'],\n  }\n}\n\ntype MyModule::Tree = Array[Variant[Data, Tree]]\n\nfunction apache::bool2http(Variant[String, Boolean] $arg) >> String {\n  case $arg {\n    false, undef, /(?i:false)/ : { 'Off' }\n    true, /(?i:true)/          : { 'On' }\n    default               : { \"$arg\" }\n  }\n}\n\n# A class with parameters\nclass apache (String $version = 'latest') {\n  package {'httpd':\n    ensure => $version, # Using the class parameter from above\n    before => File['/etc/httpd.conf'],\n  }\n  file {'/etc/httpd.conf':\n    ensure  => file,\n    owner   => 'httpd',\n    content => template('apache/httpd.conf.erb'), # Template from a module\n  }\n  service {'httpd':\n    ensure    => running,\n    enable    => true,\n    subscribe => File['/etc/httpd.conf'],\n  }\n}\n\n\nif $is_virtual {\n  warning( 'Tried to include class ntp on virtual machine; this node might be misclassified.' )\n}\nelsif $operatingsystem == 'Darwin' {\n  warning( 'This NTP module does not yet work on our Mac laptops.' )\nelse {\n  include ntp\n}"
        }
      ],
      "id": "lPxURSSn",
      "createdAt": 1659510169193,
      "updatedAt": 1659510185052
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Python",
      "content": [
        {
          "label": "Fragment 1",
          "language": "python",
          "value": "#!/usr/local/bin/python\n\nimport string, sys\n\n# If no arguments were given, print a helpful message\nif len(sys.argv)==1:\n    print '''Usage:\ncelsius temp1 temp2 ...'''\n    sys.exit(0)\n\n# Loop over the arguments\nfor i in sys.argv[1:]:\n    try:\n        fahrenheit=float(string.atoi(i))\n    except string.atoi_error:\n        print repr(i), \"not a numeric value\"\n    else:\n        celsius=(fahrenheit-32)*5.0/9.0\n        print '%i\\260F = %i\\260C' % (int(fahrenheit), int(celsius+.5))"
        }
      ],
      "id": "OIWeDQnx",
      "createdAt": 1659510185880,
      "updatedAt": 1659510201739
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "QML",
      "content": [
        {
          "label": "Fragment 1",
          "language": "qml",
          "value": "// A simple example\nimport QtQuick 2.7\nimport QtQuick.Controls 2.3\n\nRectangle {\n    color: \"red\"\n    anchors.fill: parent\n\n    Text {\n        text: \"WEEEEEEEEEE\"\n        font.pixelSize: 50\n        color: \"white\"\n        anchors.centerIn: parent\n        RotationAnimator on rotation {\n            running: true\n            loops: Animation.Infinite\n            from: 0\n            to: 360\n            duration: 1500\n        }\n    }\n}\n"
        }
      ],
      "id": "VDC3i3FC",
      "createdAt": 1659510202469,
      "updatedAt": 1659510214305
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "R",
      "content": [
        {
          "label": "Fragment 1",
          "language": "r",
          "value": "Call:\nlm(formula = y ~ x)\n \nResiduals:\n1       2       3       4       5       6\n3.3333 -0.6667 -2.6667 -2.6667 -0.6667  3.3333\n \nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept)  -9.3333     2.8441  -3.282 0.030453 *\nx             7.0000     0.7303   9.585 0.000662 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n \nResidual standard error: 3.055 on 4 degrees of freedom\nMultiple R-squared: 0.9583,     Adjusted R-squared: 0.9478\nF-statistic: 91.88 on 1 and 4 DF,  p-value: 0.000662\n \n> par(mfrow=c(2, 2))     # Request 2x2 plot layout\n> plot(lm_1)             # Diagnostic plot of regression model"
        }
      ],
      "id": "WvQzM-re",
      "createdAt": 1659510214733,
      "updatedAt": 1659510228108
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Raku",
      "content": [
        {
          "label": "Fragment 1",
          "language": "raku",
          "value": "=begin comment\nRaku example for ace\n=end comment\nclass Cook is Employee {\n    has @.utensils  is rw;\n    has @.cookbooks is rw;\n\n    method cook( $food ) {\n        say \"Cooking $food\";\n    }\n\n    method clean_utensils {\n        say \"Cleaning $_\" for @.utensils;\n    }\n}\n\nclass Baker is Cook {\n    method cook( $confection ) {\n        say \"Baking a tasty $confection\";\n    }\n}\n\nmy $cook = Cook.new(\n    utensils => <spoon ladle knife pan>,\n    cookbooks => 'The Joy of Cooking',\n    salary => 40000);\n\n$cook.cook( 'pizza' );       # OUTPUT: «Cooking pizza␤»\nsay $cook.utensils.perl;     # OUTPUT: «[\"spoon\", \"ladle\", \"knife\", \"pan\"]␤»\nsay $cook.cookbooks.perl;    # OUTPUT: «[\"The Joy of Cooking\"]␤»\nsay $cook.salary;            # OUTPUT: «40000␤»\n\nmy $baker = Baker.new(\n    utensils => 'self cleaning oven',\n    cookbooks => \"The Baker's Apprentice\",\n    salary => 50000);\n\n$baker.cook('brioche');      # OUTPUT: «Baking a tasty brioche␤»\nsay $baker.utensils.perl;    # OUTPUT: «[\"self cleaning oven\"]␤»\nsay $baker.cookbooks.perl;   # OUTPUT: «[\"The Baker's Apprentice\"]␤»\nsay $baker.salary;           # OUTPUT: «50000␤»\n"
        }
      ],
      "id": "fuy3UFGu",
      "createdAt": 1659510229876,
      "updatedAt": 1659510243071
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Razor",
      "content": [
        {
          "label": "Fragment 1",
          "language": "razor",
          "value": "@* razor mode *@\n@{\n\tLayout = \"~/layout\"\n\t@: <a>\n\t@Layout\n\t@: </a>\n}"
        }
      ],
      "id": "GQjZpbUI",
      "createdAt": 1659510243891,
      "updatedAt": 1659510280508
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Red",
      "content": [
        {
          "label": "Fragment 1",
          "language": "red",
          "value": "Red []\ninfo: func ['fn  /name /intro /args /refinements /locals /return /spec \n\t/arg-num /arg-names /arg-types /ref-names /ref-types /ref-num /type\n\t/local intr ars refs locs ret arg ref typ\n][\n\tintr: copy \"\" ars: make map! copy [] refs: make map! copy [] locs: copy [] ret: copy [] typ: ref-arg: ref-arg-type: none\n\tif lit-word? fn [fn: to-word fn]\n\tunless find [op! native! function! action!] type?/word get fn [\n\t\tcause-error 'user 'message [\"Only function types accepted!\"]\n\t]\n\tout: make map! copy []\n\tspecs: spec-of get fn \n\tparse specs [\n\t\topt [set intr string!]\n\t\tany [set arg [word! | lit-word!] opt [set typ block!] opt string! (put ars arg either typ [typ][[any-type!]])]\n\t\tany [set ref refinement! [\n\t\t\tif (ref <> /local) (put refs to-lit-word ref make map! copy []) \n\t\t\t\topt string! \n\t\t\t\tany [set ref-arg word! opt [set ref-arg-type block!] \n\t\t\t\t\t(put refs/(to-word ref) to-lit-word ref-arg either ref-arg-type [ref-arg-type][[any-type!]])\n\t\t\t\t]\n\t\t\t|\tany [set loc word! (append locs loc) opt string!] \n\t\t\t\topt [set-word! set ret block!]\n\t\t]]\n\t\t\n\t\t(\n\t\tout: case [\n\t\t\tname\t\t[to-word fn]\n\t\t\tintro \t\t[intr] \n\t\t\targs\t\t[ars]\n\t\t\targ-num\t\t[length? ars]\n\t\t\targ-names \t[copy keys-of ars] \n\t\t\targ-types\t[copy values-of ars]\n\t\t\trefinements [refs] \n\t\t\tref-names\t[copy keys-of refs]\n\t\t\tref-types\t[copy values-of refs]\n\t\t\tref-num\t\t[length? refs]\n\t\t\tlocals \t\t[locs] \n\t\t\treturn \t\t[ret]\n\t\t\tspec\t\t[specs]\n\t\t\ttrue \t\t[\n\t\t\t\tmake object!  [\n\t\t\t\t\tname: \t\tto-word fn \n\t\t\t\t\tintro: \t\tintr \n\t\t\t\t\targs: \t\tars \n\t\t\t\t\trefinements: refs \n\t\t\t\t\tlocals: \tlocs \n\t\t\t\t\treturn: \tret \n\t\t\t\t\tspec: \t\tspecs \n\t\t\t\t\ttype: \t\ttype? get fn\n\t\t\t\t\targ-num: \tlength? args\n\t\t\t\t\targ-names: \tcopy keys-of args\n\t\t\t\t\targ-types: \tcopy values-of args\n\t\t\t\t\tref-names: \tcopy keys-of refinements\n\t\t\t\t\tref-types: \tcopy values-of refinements\n\t\t\t\t\tref-num:\tlength? refinements\n\t\t\t\t]\n\t\t\t]\n\t\t])\n\t]\n\tout\n]\n"
        }
      ],
      "id": "eQ3UEMOz",
      "createdAt": 1659510281695,
      "updatedAt": 1659510296598
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Ruby",
      "content": [
        {
          "label": "Fragment 1",
          "language": "ruby",
          "value": "#!/usr/bin/ruby\n\n# Program to find the factorial of a number\ndef fact(n)\n    if n == 0\n        1\n    else\n        n * fact(n-1)\n    end\nend\n\nputs fact(ARGV[0].to_i)\n\nclass Range\n  def to_json(*a)\n    {\n      'json_class'   => self.class.name, # = 'Range'\n      'data'         => [ first, last, exclude_end? ]\n    }.to_json(*a)\n  end\nend\n\n{:id => ?\", :key => \"value\"}\n\n\n    herDocs = [<<'FOO', <<BAR, <<-BAZ, <<-`EXEC`] #comment\n  FOO #{literal}\nFOO\n  BAR #{fact(10)}\nBAR\n  BAZ indented\n    BAZ\n        echo hi\n    EXEC\nputs herDocs"
        }
      ],
      "id": "ovPJEcpx",
      "createdAt": 1659510297196,
      "updatedAt": 1659512691705
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Rust",
      "content": [
        {
          "label": "Fragment 1",
          "language": "rust",
          "value": "use core::rand::RngUtil;\n\nfn main() {\n    for [\"Alice\", \"Bob\", \"Carol\"].each |&name| {\n        do spawn {\n            let v = rand::Rng().shuffle([1, 2, 3]);\n            for v.each |&num| {\n                print(fmt!(\"%s says: '%d'\\n\", name, num + 1))\n            }\n        }\n    }\n}\n\nfn map<T, U>(vector: &[T], function: &fn(v: &T) -> U) -> ~[U] {\n    let mut accumulator = ~[];\n    for vec::each(vector) |element| {\n        accumulator.push(function(element));\n    }\n    return accumulator;\n}\n"
        }
      ],
      "id": "bfauQKAK",
      "createdAt": 1659512758939,
      "updatedAt": 1659512774417
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "SASS",
      "content": [
        {
          "label": "Fragment 1",
          "language": "sass",
          "value": "nav\n  ul\n    margin: 0\n    padding: 0\n    list-style: none\n\n  li\n    display: inline-block\n\n  a\n    display: block\n    padding: 6px 12px\n    text-decoration: none\n"
        }
      ],
      "id": "moAo6UG2",
      "createdAt": 1659512774797,
      "updatedAt": 1659512900319
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "SCAD",
      "content": [
        {
          "label": "Fragment 1",
          "language": "scad",
          "value": "module Element(xpos, ypos, zpos){\n\ttranslate([xpos,ypos,zpos]){\n\t\tunion(){\n\t\t\tcube([10,10,4],true);\n\t\t\tcylinder(10,15,5);\n\t\t\ttranslate([0,0,10])sphere(5);\n\t\t}\n\t}\n}\n\nunion(){\n\tfor(i=[0:30]){\n\t\t# Element(0,0,0);\n\t\tElement(15*i,0,0);\n\t}\n}\n\nfor (i = [3, 5, 7, 11]){\n\trotate([i*10,0,0])scale([1,1,i])cube(10);\n}"
        }
      ],
      "id": "Xpqsj2Zl",
      "createdAt": 1659512903575,
      "updatedAt": 1659513054282
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Scala",
      "content": [
        {
          "label": "Fragment 1",
          "language": "scala",
          "value": "// http://www.scala-lang.org/node/54\n\npackage examples.actors\n\nimport scala.actors.Actor\nimport scala.actors.Actor._\n\nabstract class PingMessage\ncase object Start extends PingMessage\ncase object SendPing extends PingMessage\ncase object Pong extends PingMessage\n\nabstract class PongMessage\ncase object Ping extends PongMessage\ncase object Stop extends PongMessage\n\nobject pingpong extends Application {\n  val pong = new Pong\n  val ping = new Ping(100000, pong)\n  ping.start\n  pong.start\n  ping ! Start\n}\n\nclass Ping(count: Int, pong: Actor) extends Actor {\n  def act() {\n    println(\"Ping: Initializing with count \"+count+\": \"+pong)\n    var pingsLeft = count\n    loop {\n      react {\n        case Start =>\n          println(\"Ping: starting.\")\n          pong ! Ping\n          pingsLeft = pingsLeft - 1\n        case SendPing =>\n          pong ! Ping\n          pingsLeft = pingsLeft - 1\n        case Pong =>\n          if (pingsLeft % 1000 == 0)\n            println(\"Ping: pong from: \"+sender)\n          if (pingsLeft > 0)\n            self ! SendPing\n          else {\n            println(\"Ping: Stop.\")\n            pong ! Stop\n            exit('stop)\n          }\n      }\n    }\n  }\n}\n\nclass Pong extends Actor {\n  def act() {\n    var pongCount = 0\n    loop {\n      react {\n        case Ping =>\n          if (pongCount % 1000 == 0)\n            println(\"Pong: ping \"+pongCount+\" from \"+sender)\n          sender ! Pong\n          pongCount = pongCount + 1\n        case Stop =>\n          println(\"Pong: Stop.\")\n          exit('stop)\n      }\n    }\n  }\n}"
        }
      ],
      "id": "_fNo6obA",
      "createdAt": 1659513088102,
      "updatedAt": 1659513102547
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Scheme",
      "content": [
        {
          "label": "Fragment 1",
          "language": "scheme",
          "value": "(define (prompt-for-cd)\n   \"Prompts\n    for CD\"\n   (prompt-read \"Title\" 1.53 1 2/4 1.7 1.7e0 2.9E-4 +42 -7 #b001 #b001/100 #o777 #O777 #xabc55 #c(0 -5.6))\n   (prompt-read \"Artist\")\n   (or (parse-integer (prompt-read \"Rating\") #:junk-allowed #t) 0)\n  (if x (format #t \"yes\") (format #f \"no\") ;and here comment\n  ) \n  ;; second line comment\n  '(+ 1 2)\n  (position-if-not char-set:whitespace line #:start beg))\n  (quote (privet 1 2 3))\n  '(hello world)\n  (* 5 7)\n  (1 2 34 5)\n  (#:use \"aaaa\")\n  (let ((x 10) (y 20))\n    (display (+ x y))\n  ) \n\n  \"asdad\\0eqweqe\"\n"
        }
      ],
      "id": "mQs07uv9",
      "createdAt": 1659513103082,
      "updatedAt": 1659513120052
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "sCrypt",
      "content": [
        {
          "label": "Fragment 1",
          "language": "scrypt",
          "value": "// https://github.com/sCrypt-Inc/boilerplate/blob/master/contracts/ackermann.scrypt\n\ncontract Ackermann {\n    int a; // a = 2\n    int b; // b = 1\n\n    static const int LOOPCOUNT = 14;\n\n    function ackermann(int m, int n) : int {\n        bytes stk = num2bin(m, 1);\n\n        // run this function off chain to get the loop count and set it here\n        // e.g., (2, 1) requires 14 loops, (3, 5) 42438\n        loop (LOOPCOUNT) {\n            if (len(stk) > 0) {\n                bytes top = stk[0 : 1];\n                m = unpack(top);\n\n                // pop\n                stk = stk[1 : len(stk)];\n\n                if (m == 0) {\n                    n = n + m + 1;\n                }\n                else if (n == 0) {\n                    n++;\n                    m--;\n                    // push\n                    stk = num2bin(m, 1) + stk;\n                }\n                else {\n                    stk = num2bin(m - 1, 1) + stk;\n                    stk = num2bin(m, 1) + stk;\n                    n--;\n                }\n            }\n        }\n\n        return n;\n    }\n\n    // y = 5\n    public function unlock(int y) {\n        require(y == this.ackermann(this.a, this.b));\n    }\n}"
        }
      ],
      "id": "y8lXMyA1",
      "createdAt": 1659513122058,
      "updatedAt": 1659513143136
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "SCSS",
      "content": [
        {
          "label": "Fragment 1",
          "language": "scss",
          "value": "nav {\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li { display: inline-block; }\n\n  a {\n    display: block;\n    padding: 6px 12px;\n    text-decoration: none;\n  }\n}"
        }
      ],
      "id": "V-785e5S",
      "createdAt": 1659513144141,
      "updatedAt": 1659513158303
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "SJS",
      "content": [
        {
          "label": "Fragment 1",
          "language": "sjs",
          "value": "var { each, map } = require('sjs:sequence');\nvar { get } = require('sjs:http');\n\nfunction foo(items, nada) {\n    var component = { name: \"Ace\", role: \"Editor\" };\n    console.log(\"\n        Welcome, #{component.name}\n    \".trim());\n\n    logging.debug(`Component added: $String(component) (${component})`);\n\n    console.log(`\n        Welcome, {${function() {\n            return { x: 1, y: \"why?}\"};\n        }()}\n    `.trim());\n\n    waitfor {\n        items .. each.par { |item|\n            get(item);\n        }\n    } and {\n        var lengths = items .. map(i -> i.length);\n    } or {\n        hold(1500);\n        throw new Error(\"timed out\");\n    }\n}\t// Real Tab.\n"
        }
      ],
      "id": "fe94fkP7",
      "createdAt": 1659513160004,
      "updatedAt": 1659513172534
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Slim",
      "content": [
        {
          "label": "Fragment 1",
          "language": "slim",
          "value": "doctype html\nhtml\n  head\n    title Slim Examples\n    meta name=\"keywords\" content=\"template language\"\n    meta name=\"author\" content=author\n    link rel=\"icon\" type=\"image/png\" href=file_path(\"favicon.png\")\n    javascript:\n        alert('Slim supports embedded javascript!')\n\n  body\n    h1 Markup examples\n\n    #content\n      p This example shows you how a basic Slim file looks.\n\n    == yield\n\n    - if items.any?\n      table#items\n        - for item in items\n          tr\n            td.name = item.name\n            td.price = item.price\n    - else\n      p No items found. Please add some inventory.\n        Thank you!\n\n    div id=\"footer\"\n      == render 'footer'\n      | Copyright &copy; #{@year} #{@author}\n        indenting test\n\n    - @page_current = true"
        }
      ],
      "id": "G6BAdMnJ",
      "createdAt": 1659513173551,
      "updatedAt": 1659513317040
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Solidity",
      "content": [
        {
          "label": "Fragment 1",
          "language": "solidity",
          "value": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ncontract DataLocations {\n    uint[] public arr;\n    mapping(uint => address) map;\n    struct MyStruct {\n        uint foo;\n    }\n    mapping(uint => MyStruct) myStructs;\n\n    function f() public {\n        // call _f with state variables\n        _f(arr, map, myStructs[1]);\n\n        // get a struct from a mapping\n        MyStruct storage myStruct = myStructs[1];\n        // create a struct in memory\n        MyStruct memory myMemStruct = MyStruct(0);\n    }\n\n    function _f(\n        uint[] storage _arr,\n        mapping(uint => address) storage _map,\n        MyStruct storage _myStruct\n    ) internal {\n        // do something with storage variables\n    }\n\n    // You can return memory variables\n    function g(uint[] memory _arr) public returns (uint[] memory) {\n        // do something with memory array\n    }\n\n    function h(uint[] calldata _arr) external {\n        // do something with calldata array\n    }\n}"
        }
      ],
      "id": "o9TpAqny",
      "createdAt": 1659513318920,
      "updatedAt": 1659513371511
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Smarty",
      "content": [
        {
          "label": "Fragment 1",
          "language": "smarty",
          "value": "{foreach $foo as $bar}\n  <a href=\"{$bar.zig}\">{$bar.zag}</a>\n  <a href=\"{$bar.zig2}\">{$bar.zag2}</a>\n  <a href=\"{$bar.zig3}\">{$bar.zag3}</a>\n{foreachelse}\n  There were no rows found.\n{/foreach}"
        }
      ],
      "id": "8cQOZp8n",
      "createdAt": 1659513382933,
      "updatedAt": 1659513403528
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Smithy",
      "content": [
        {
          "label": "Fragment 1",
          "language": "smithy",
          "value": "namespace example.weather\n\n/// Provides weather forecasts.\n@paginated(inputToken: \"nextToken\", outputToken: \"nextToken\",\n           pageSize: \"pageSize\")\nservice Weather {\n    version: \"2006-03-01\",\n    resources: [City],\n    operations: [GetCurrentTime]\n}\n\nresource City {\n    identifiers: { cityId: CityId },\n    read: GetCity,\n    list: ListCities,\n    resources: [Forecast],\n}\n\nresource Forecast {\n    identifiers: { cityId: CityId },\n    read: GetForecast,\n}\n\n// \"pattern\" is a trait.\n@pattern(\"^[A-Za-z0-9 ]+$\")\nstring CityId\n\n@readonly\noperation GetCity {\n    input: GetCityInput,\n    output: GetCityOutput,\n    errors: [NoSuchResource]\n}\n\nstructure GetCityInput {\n    // \"cityId\" provides the identifier for the resource and\n    // has to be marked as required.\n    @required\n    cityId: CityId\n}\n\nstructure GetCityOutput {\n    // \"required\" is used on output to indicate if the service\n    // will always provide a value for the member.\n    @required\n    name: String,\n\n    @required\n    coordinates: CityCoordinates,\n}\n\n// This structure is nested within GetCityOutput.\nstructure CityCoordinates {\n    @required\n    latitude: Float,\n\n    @required\n    longitude: Float,\n}\n\n// \"error\" is a trait that is used to specialize\n// a structure as an error.\n@error(\"client\")\nstructure NoSuchResource {\n    @required\n    resourceType: String\n}\n\n// The paginated trait indicates that the operation may\n// return truncated results.\n@readonly\n@paginated(items: \"items\")\noperation ListCities {\n    input: ListCitiesInput,\n    output: ListCitiesOutput\n}\n\nstructure ListCitiesInput {\n    nextToken: String,\n    pageSize: Integer\n}\n\nstructure ListCitiesOutput {\n    nextToken: String,\n\n    @required\n    items: CitySummaries,\n}\n\n// CitySummaries is a list of CitySummary structures.\nlist CitySummaries {\n    member: CitySummary\n}\n\n// CitySummary contains a reference to a City.\n@references([{resource: City}])\nstructure CitySummary {\n    @required\n    cityId: CityId,\n\n    @required\n    name: String,\n}\n\n@readonly\noperation GetCurrentTime {\n    output: GetCurrentTimeOutput\n}\n\nstructure GetCurrentTimeOutput {\n    @required\n    time: Timestamp\n}\n\n@readonly\noperation GetForecast {\n    input: GetForecastInput,\n    output: GetForecastOutput\n}\n\n// \"cityId\" provides the only identifier for the resource since\n// a Forecast doesn't have its own.\nstructure GetForecastInput {\n    @required\n    cityId: CityId,\n}\n\nstructure GetForecastOutput {\n    chanceOfRain: Float\n}"
        }
      ],
      "id": "qHcIur3E",
      "createdAt": 1659513520728,
      "updatedAt": 1659513537749
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Soy Template",
      "content": [
        {
          "label": "Fragment 1",
          "language": "soy_template",
          "value": "/**\n * Greets a person using \"Hello\" by default.\n * @param name The name of the person.\n * @param? greetingWord Optional greeting word to use instead of \"Hello\".\n */\n{template .helloName #eee}\n  {if not $greetingWord}\n    Hello {$name}!\n  {else}\n    {$greetingWord} {$name}!\n  {/if}\n{/template}\n\n/**\n * Greets a person and optionally a list of other people.\n * @param name The name of the person.\n * @param additionalNames The additional names to greet. May be an empty list.\n */\n{template .helloNames}\n  // Greet the person.\n  {call .helloName data=\"all\" /}<br>\n  // Greet the additional people.\n  {foreach $additionalName in $additionalNames}\n    {call .helloName}\n      {param name: $additionalName /}\n    {/call}\n    {if not isLast($additionalName)}\n      <br>  // break after every line except the last\n    {/if}\n  {ifempty}\n    No additional people to greet.\n  {/foreach}\n{/template}\n\n\n{/foreach}\n{if length($items) > 5}\n{msg desc=\"Says hello to the user.\"}\n\n\n{namespace ns autoescape=\"contextual\"}\n\n/** Example. */\n{template .example}\n  foo is {$ij.foo}\n{/template}"
        }
      ],
      "id": "GNzBMeEl",
      "createdAt": 1659513539732,
      "updatedAt": 1659513555942
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "SQL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "sql",
          "value": "SELECT city, COUNT(id) AS users_count\nFROM users\nWHERE group_name = 'salesman'\nAND created > '2011-05-21'\nGROUP BY 1\nORDER BY 2 DESC"
        }
      ],
      "id": "StsXGnhD",
      "createdAt": 1659513557682,
      "updatedAt": 1659513666978
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "SQLServer",
      "content": [
        {
          "label": "Fragment 1",
          "language": "sqlserver",
          "value": "-- =============================================\n-- Author:\t\tMorgan Yarbrough\n-- Create date: 4/27/2015\n-- Description:\tTest procedure that shows off language features.\n-- \t\t\t\tIncludes non-standard folding with region comments using either\n-- \t\t\t\tline comments or block comments (both are demonstrated below).\n--\t\t\t\tThis mode imitates SSMS and it designed to be used with SQL Server theme.\n-- =============================================\nCREATE PROCEDURE dbo.TestProcedure\n\t\n--#region parameters\n\t@vint INT = 1\n\t,@vdate DATE = NULL\n\t,@vdatetime DATETIME = DATEADD(dd, 1, GETDATE())\n\t,@vvarchar VARCHAR(MAX) = ''\n--#endregion\n\nAS\nBEGIN\n\n\t/*#region set statements */\n\tSET NOCOUNT ON;\n\tSET XACT_ABORT ON;\n\tSET QUOTED_IDENTIFIER ON;\n\t/*#endregion*/\n\t\n\t/**\n\t * These comments will produce a fold widget\n\t */\n\t\n\t-- folding demonstration\n\tSET @vint = CASE\n\t\t\t\t\tWHEN @vdate IS NULL\n\t\t\t\t\t\tTHEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND\n\t\n\t-- another folding demonstration\n\tIF @vint = 1 \n\tBEGIN\n\t\tSET @vvarchar = 'one'\n\t\tSET @vint = DATEDIFF(dd, @vdate, @vdatetime)\n\tEND\n\t\n\t-- this mode handles strings properly\n\tDECLARE @sql NVARCHAR(4000) = N'SELECT TOP(1) OrderID \n\t\t\t\t\t\t\t\t\tFROM Orders\n\t\t\t\t\t\t\t\t\tWHERE @OrderDate > GETDATE()'\n\t\t\t\t\t\t\t\t\n\t-- this mode is aware of built in stored procedures \n\tEXECUTE sp_executesql @sql\n\t\n\t-- demonstrating some syntax highlighting\n\tSELECT Orders.OrderID\n\t\t,Customers.CompanyName\n\t\t,DATEFROMPARTS(YEAR(GETDATE()), 1, 1) AS FirstDayOfYear\n\tFROM Orders\n\tINNER JOIN Customers\n\t\tON Orders.CustomerID = Customers.CustomerID\n\tWHERE CompanyName NOT LIKE '%something'\n\t\tOR CompanyName IS NULL\n\t\tOR CompanyName IN ('bla', 'nothing')\n\t\t\n\t-- this mode includes snippets\n\t-- place your cusor at the end of the line below and trigger auto complete (Ctrl+Space)\n\tcreatepr\n\t\n\t-- SQL Server allows using keywords as object names (not recommended) as long as they are wrapped in brackets\n\tDATABASE -- keyword\n\t[DATABASE] -- not a keyword\n\t\nEND\n"
        }
      ],
      "id": "3KKphPti",
      "createdAt": 1659513678316,
      "updatedAt": 1659513691143
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Stylus",
      "content": [
        {
          "label": "Fragment 1",
          "language": "stylus",
          "value": "// I'm a comment!\n\n/*\n * Adds the given numbers together.\n */\n\n\n/*!\n * Adds the given numbers together.\n */\n\n\nasdasdasdad(df, ad=23)\n\nadd(a, b = a)\n   a + b\ngreen(#0c0)\n add(10, 5)\n // => 15\n\n add(10)\n add(a, b)\n\n    &asdasd\n\n    (arguments)\n\n    @sdfsdf\n.signatures\n  background-color #e0e8e0\n  border 1px solid grayLighter\n  box-shadow 0 0 3px grayLightest\n  border-radius 3px\n  padding 3px 5px\n  \"adsads\"\n  margin-left 0\n  list-style none\n.signature\n  list-style none\n  display: inline\n  margin-left 0\n  > li\n    display inline\nis not\n.signature-values\n  list-style none\n  display inline\n  margin-left 0\n  &:before\n    content '→'\n    margin 0 5px\n  > li\n  !important\n\n  unless"
        }
      ],
      "id": "kr0fAxYi",
      "createdAt": 1659513699414,
      "updatedAt": 1659513717161
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "SVG",
      "content": [
        {
          "label": "Fragment 1",
          "language": "svg",
          "value": "<svg\n  width=\"800\" height=\"600\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  onload=\"StartAnimation(evt)\">\n\n  <title>Test Tube Progress Bar</title>\n  <desc>Created for the Web Directions SVG competition</desc>\n\n  <script type=\"text/ecmascript\"><![CDATA[\n    var timevalue = 0;\n    var timer_increment = 1;\n    var max_time = 100;\n    var hickory;\n    var dickory;\n    var dock;\n    var i;\n\n    function StartAnimation(evt) {\n        hickory  = evt.target.ownerDocument.getElementById(\"hickory\");\n        dickory = evt.target.ownerDocument.getElementById(\"dickory\");\n        dock = evt.target.ownerDocument.getElementById(\"dock\");\n\n        ShowAndGrowElement();\n    }\n    function ShowAndGrowElement() {\n        timevalue = timevalue + timer_increment;\n        if (timevalue > max_time)\n            return;\n        // Scale the text string gradually until it is 20 times larger\n        scalefactor = (timevalue * 650) / max_time;\n\n        if (timevalue < 30) {\n            hickory.setAttribute(\"display\", \"\");\n            hickory.setAttribute(\"transform\", \"translate(\" + (600+scalefactor*3*-1 ) + \", -144 )\");\n        }\n\n        if (timevalue > 30 && timevalue < 66) {\n            dickory.setAttribute(\"display\", \"\");\n            dickory.setAttribute(\"transform\", \"translate(\" + (-795+scalefactor*2) + \", 0 )\");\n        }\n        if (timevalue > 66) {\n            dock.setAttribute(\"display\", \"\");\n            dock.setAttribute(\"transform\", \"translate(\" + (1450+scalefactor*2*-1) + \", 144 )\");\n        }\n\n        // Call ShowAndGrowElement again <timer_increment> milliseconds later.\n        setTimeout(\"ShowAndGrowElement()\", timer_increment)\n    }\n    window.ShowAndGrowElement = ShowAndGrowElement\n  ]]></script>\n\n  <rect\n    fill=\"#2e3436\"\n    fill-rule=\"nonzero\"\n    stroke-width=\"3\"\n    y=\"0\"\n    x=\"0\"\n    height=\"600\"\n    width=\"800\"\n    id=\"rect3590\"/>\n\n    <text\n       style=\"font-size:144px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans Bold\"\n       x=\"50\"\n       y=\"350\"\n       id=\"hickory\"\n       display=\"none\">\n        Hickory,</text>\n    <text\n       style=\"font-size:144px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans Bold\"\n       x=\"50\"\n       y=\"350\"\n       id=\"dickory\"\n       display=\"none\">\n        dickory,</text>\n    <text\n       style=\"font-size:144px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans Bold\"\n       x=\"50\"\n       y=\"350\"\n       id=\"dock\"\n       display=\"none\">\n        dock!</text>\n</svg>"
        }
      ],
      "id": "pKDZ8-6w",
      "createdAt": 1659513718112,
      "updatedAt": 1659513731102
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Swit",
      "content": [
        {
          "label": "Fragment 1",
          "language": "swift",
          "value": "import UIKit\n \nclass DetailsViewController: UIViewController {\n    var album: Album?\n    @IBOutlet weak var albumCover: UIImageView!\n     \n    required init(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n    }\n     \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        mLabel.text = self.album?.title && \"Juhu \\( \"kinners\" )! \"\n        albumCover.image = UIImage(data: NSData(contentsOfURL: NSURL(string: self.album!.largeImageURL)!)!)\n    }\n}"
        }
      ],
      "id": "f06uNsdC",
      "createdAt": 1659513731945,
      "updatedAt": 1659513744330
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Tcl",
      "content": [
        {
          "label": "Fragment 1",
          "language": "tcl",
          "value": "\nproc dijkstra {graph origin} {\n    # Initialize\n    dict for {vertex distmap} $graph {\n\tdict set dist $vertex Inf\n\tdict set path $vertex {}\n    }\n    dict set dist $origin 0\n    dict set path $origin [list $origin]\n \n    while {[dict size $graph]} {\n\t# Find unhandled node with least weight\n\tset d Inf\n\tdict for {uu -} $graph {\n\t    if {$d > [set dd [dict get $dist $uu]]} {\n\t\tset u $uu\n\t\tset d $dd\n\t    }\n\t}\n \n\t# No such node; graph must be disconnected\n\tif {$d == Inf} break\n \n\t# Update the weights for nodes\\\n\t lead to by the node we've picked\n\tdict for {v dd} [dict get $graph $u] {\n\t    if {[dict exists $graph $v]} {\n\t\tset alt [expr {$d + $dd}]\n\t\tif {$alt < [dict get $dist $v]} {\n\t\t    dict set dist $v $alt\n\t\t    dict set path $v [list {*}[dict get $path $u] $v]\n\t\t}\n\t    }\n\t}\n \n\t# Remove chosen node from graph still to be handled\n\tdict unset graph $u\n    }\n    return [list $dist $path]\n}"
        }
      ],
      "id": "xDPl3nEd",
      "createdAt": 1659513745309,
      "updatedAt": 1659513756760
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Terraform",
      "content": [
        {
          "label": "Fragment 1",
          "language": "terraform",
          "value": "export TF_LOG=TRACE\n\n# An AMI\nvariable \"ami\" {\n  description = \"the AMI to use\"\n}\n\n/* A multi\n   line comment. */\nresource \"aws_instance\" \"web\" {\n  ami               = \"${var.ami}\"\n  count             = 2\n  source_dest_check = false\n\n  connection {\n    user = \"root\"\n  }\n}\n\nresource \"aws_instance\" \"web\" {\n  subnet = \"${var.env == \"production\" ? var.prod_subnet : var.dev_subnet}\"\n}\n\nvariable \"count\" {\n  default = 2\n}\n\nvariable \"hostnames\" {\n  default = {\n    \"0\" = \"example1.org\"\n    \"1\" = \"example2.net\"\n  }\n}\n\ndata \"template_file\" \"web_init\" {\n  # Render the template once for each instance\n  count    = \"${length(var.hostnames)}\"\n  template = \"${file(\"templates/web_init.tpl\")}\"\n  vars {\n    # count.index tells us the index of the instance we are rendering\n    hostname = \"${var.hostnames[count.index]}\"\n  }\n}\n\nresource \"aws_instance\" \"web\" {\n  # Create one instance for each hostname\n  count     = \"${length(var.hostnames)}\"\n\n  # Pass each instance its corresponding template_file\n  user_data = \"${data.template_file.web_init.*.rendered[count.index]}\"\n}\n\nvariable \"count\" {\n  default = 2\n}\n\n# Define the common tags for all resources\nlocals {\n  common_tags = {\n    Component   = \"awesome-app\"\n    Environment = \"production\"\n  }\n}\n\n# Create a resource that blends the common tags with instance-specific tags.\nresource \"aws_instance\" \"server\" {\n  ami           = \"ami-123456\"\n  instance_type = \"t2.micro\"\n\n  tags = \"${merge(\n    local.common_tags,\n    map(\n      \"Name\", \"awesome-app-server\",\n      \"Role\", \"server\"\n    )\n  )}\"\n}\n\n$ terraform apply -var foo=bar -var foo=baz\n$ terraform apply -var 'foo={quux=\"bar\"}' -var 'foo={bar=\"baz\"}'\n\n$ terraform apply -var-file=foo.tfvars -var-file=bar.tfvars\n$ TF_VAR_somemap='{foo = \"bar\", baz = \"qux\"}' terraform plan\n\nresource \"aws_instance\" \"web\" {\n  # ...\n\n  count = \"${var.count}\"\n\n  # Tag the instance with a counter starting at 1, ie. web-001\n  tags {\n    Name = \"${format(\"web-%03d\", count.index + 1)}\"\n  }\n}"
        }
      ],
      "id": "fBdP-3EZ",
      "createdAt": 1659513757099,
      "updatedAt": 1659513771760
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Tex",
      "content": [
        {
          "label": "Fragment 1",
          "language": "tex",
          "value": "The quadratic formula is $$-b \\pm \\sqrt{b^2 - 4ac} \\over 2a$$\n\\bye\n\n\\makeatletter\n \\newcommand{\\be}{%\n \\begingroup\n % \\setlength{\\arraycolsep}{2pt}\n \\eqnarray%\n \\@ifstar{\\nonumber}{}%\n  }\n  \\newcommand{\\ee}{\\endeqnarray\\endgroup}\n  \\makeatother\n\n \\begin{equation}\n x=\\left\\{ \\begin{array}{cl}\n 0 & \\textrm{if }A=\\ldots\\\\\n 1 & \\textrm{if }B=\\ldots\\\\\n x & \\textrm{this runs with as much text as you like, but without an raggeright text\n.}\\end{array}\\right.\n \\end{equation}"
        }
      ],
      "id": "9HHsgIb1",
      "createdAt": 1659513772113,
      "updatedAt": 1659513782241
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Textile",
      "content": [
        {
          "label": "Fragment 1",
          "language": "textile",
          "value": "h1. Textile document\n\nh2. Heading Two\n\nh3. A two-line\n    header\n\nh2. Another two-line\nheader\n\nParagraph:\none, two,\nthee lines!\n\np(classone two three). This is a paragraph with classes\n\np(#id). (one with an id)\n\np(one two three#my_id). ..classes + id\n\n* Unordered list\n** sublist\n* back again!\n** sublist again..\n\n# ordered\n\nbg. Blockquote!\n    This is a two-list blockquote..!"
        }
      ],
      "id": "rnsJdqWh",
      "createdAt": 1659513783516,
      "updatedAt": 1659513815754
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "TOML",
      "content": [
        {
          "label": "Fragment 1",
          "language": "toml",
          "value": "# This is a TOML document. Boom.\n\ntitle = \"TOML Example\"\n\n[owner]\nname = \"Tom Preston-Werner\"\norganization = \"GitHub\"\nbio = \"GitHub Cofounder & CEO\\nLikes tater tots and beer.\"\ndob = 1979-05-27T07:32:00Z # First class dates? Why not?\n\n[database]\nserver = \"192.168.1.1\"\nports = [ 8001, 8001, 8002 ]\nconnection_max = 5000\nenabled = true\n\n[servers]\n\n  # You can indent as you please. Tabs or spaces. TOML don't care.\n  [servers.alpha]\n  ip = \"10.0.0.1\"\n  dc = \"eqdc10\"\n\n  [servers.beta]\n  ip = \"10.0.0.2\"\n  dc = \"eqdc10\"\n\n[clients]\ndata = [ [\"gamma\", \"delta\"], [1, 2] ] # just an update to make sure parsers support it"
        }
      ],
      "id": "BMoUKb64",
      "createdAt": 1659513816206,
      "updatedAt": 1659513833836
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "TSX",
      "content": [
        {
          "label": "Fragment 1",
          "language": "tsx",
          "value": "import * as React from \"react\";\nlet Logo =\"https://logrocket-assets.io/static/home-hero-c97849b227a3d3015730e3371a76a7f0.svg\";\n\nexport default class FirstComponent extends React.Component <{}> {\n  render() {\n    return (\n      <div>\n        <h3>A Simple React Component Example with Typescript</h3>\n        <div>\n          <img height=\"250\" src={Logo} /> \n        </div>\n        <p>This component shows the Logrocket logo.</p>\n        <p>For more info on Logrocket, please visit https://logrocket.com </p>\n      </div>\n    );\n  }\n}"
        }
      ],
      "id": "8XU5NKRw",
      "createdAt": 1659513834187,
      "updatedAt": 1659513891006
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Twig",
      "content": [
        {
          "label": "Fragment 1",
          "language": "twig",
          "value": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>My Webpage</title>\n    </head>\n    <body>\n        <ul id=\"navigation\">\n        {% for item in navigation %}\n            <li><a href=\"{{ item.href|escape }}\">{{ item.caption }}</a></li>\n        {% endfor %}\n        </ul>\n\n        {% if 1 not in [1, 2, 3] %}\n\n        {# is equivalent to #}\n        {% if not (1 in [1, 2, 3]) %}\n\n        {% autoescape true %}\n            {{ var }}\n            {{ var|raw }}     {# var won't be escaped #}\n            {{ var|escape }}  {# var won't be doubled-escaped #}\n        {% endautoescape %}\n\n        {{ include('twig.html', sandboxed = true) }}\n\n        {{\"string #{with} \\\" escapes\" 'another#one' }}\n        <h1>My Webpage</h1>\n        {{ a_variable }}\n    </body>\n</html>"
        }
      ],
      "id": "-1yJwNhA",
      "createdAt": 1659513895880,
      "updatedAt": 1659513909414
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "TypeScript",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "// Mapped types are a way to create new types based\n// on another type. Effectively a transformational type.\n\n// Common cases for using a mapped type is dealing with\n// partial subsets of an existing type. For example\n// an API may return an Artist:\n\ninterface Artist {\n  id: number;\n  name: string;\n  bio: string;\n}\n\n// However, if you were to send an update to the API which\n// only changes a subset of the Artist then you would\n// typically have to create an additional type:\n\ninterface ArtistForEdit {\n  id: number;\n  name?: string;\n  bio?: string;\n}\n\n// It's very likely that this would get out of sync with\n// the Artist above. Mapped types let you create a change\n// in an existing type.\n\ntype MyPartialType<Type> = {\n  // For every existing property inside the type of Type\n  // convert it to be a ?: version\n  [Property in keyof Type]?: Type[Property];\n};\n\n// Now we can use the mapped type instead to create\n// our edit interface:\ntype MappedArtistForEdit = MyPartialType<Artist>;\n\n// This is close to perfect, but it does allow id to be null\n// which should never happen. So, let's make one quick\n// improvement by using an intersection type (see:\n// example:union-and-intersection-types )\n\ntype MyPartialTypeForEdit<Type> = {\n  [Property in keyof Type]?: Type[Property];\n} & { id: number };\n\n// This takes the partial result of the mapped type, and\n// merges it with an object which has id: number set.\n// Effectively forcing id to be in the type.\n\ntype CorrectMappedArtistForEdit = MyPartialTypeForEdit<Artist>;\n\n// This is a pretty simple example of how mapped types\n// work, but covers most of the basics. If you'd like to\n// dive in with more depth, check out the handbook:\n//\n// https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types\n"
        }
      ],
      "id": "JIgrOSNq",
      "createdAt": 1659513909828,
      "updatedAt": 1659514092152
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Vala",
      "content": [
        {
          "label": "Fragment 1",
          "language": "vala",
          "value": "using Gtk;\n \nint main (string[] args) {\n    Gtk.init (ref args);\n    var foo = new MyFoo<string[](), MyBar<string, int>>();\n\n    var window = new Window();\n    window.title = \"Hello, World!\";\n    window.border_width = 10;\n    window.window_position = WindowPosition.CENTER;\n    window.set_default_size(350, 70);\n    window.destroy.connect(Gtk.main_quit);\n \n    var label = new Label(\"Hello, World!\");\n \n    window.add(label);\n    window.show_all();\n \n    Gtk.main();\n    return 0;\n}"
        }
      ],
      "id": "oS2hBbE3",
      "createdAt": 1659514096104,
      "updatedAt": 1659514106267
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Velocity",
      "content": [
        {
          "label": "Fragment 1",
          "language": "velocity",
          "value": "#*\n  This is a sample comment block that\n  spans multiple lines.\n*#\n\n#macro ( outputItem $item )\n  <li>${item}</li>\n#end\n\n## Define the items to iterate\n#set ( $items = [1, 2, 3, 4] )\n\n<ul>\n  ## Iterate over the items and output the evens.\n  #foreach ( $item in $items )\n    #if ( $_MathTool.mod($item, 2) == 0 )\n      #outputItem ($item)\n    #end\n  #end\n</ul>\n\n<script>\n  /*\n    A sample function to decomstrate\n    JavaScript highlighting and folding.\n  */\n  function foo(items, nada) {\n    for (var i=0; i<items.length; i++) {\n      alert(items[i] + \"juhu\\n\");\n    }\n  }\n</script>\n\n<style>\n  /*\n    A sample style to decomstrate\n    CSS highlighting and folding.\n  */\n  .class {\n    font-family: Monaco, \"Courier New\", monospace;\n    font-size: 12px;\n    cursor: text;\n  }\n</style>"
        }
      ],
      "id": "oxLb6eps",
      "createdAt": 1659514106610,
      "updatedAt": 1659514138518
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Verilog",
      "content": [
        {
          "label": "Fragment 1",
          "language": "verilog",
          "value": "always @(negedge reset or posedge clk) begin\n  if (reset == 0) begin\n    d_out <= 16'h0000;\n    d_out_mem[resetcount] <= d_out;\n    laststoredvalue <= d_out;\n  end else begin\n    d_out <= d_out + 1'b1; \n  end\nend\n\nalways @(bufreadaddr)\n  bufreadval = d_out_mem[bufreadaddr];"
        }
      ],
      "id": "H1d41Wrk",
      "createdAt": 1659514148400,
      "updatedAt": 1659514158641
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "VHDL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "vhdl",
          "value": "library IEEE;\nuse IEEE.std_logic_1164.all;\nuse IEEE.numeric_std.all;\n\nentity COUNT16 is\n\n    port (\n        cOut    :out    std_logic_vector(15 downto 0);  -- counter output\n        clkEn   :in     std_logic;                      -- count enable\n        clk     :in     std_logic;                      -- clock input\n        rst     :in     std_logic                       -- reset input\n        );\n        \nend entity;\n\narchitecture count_rtl of COUNT16 is\n    signal count : unsigned (15 downto 0);\n    \nbegin\n    process (clk, rst) begin\n        \n        if(rst = '1') then\n            count <= (others=>'0');\n        elsif(rising_edge(clk)) then\n            if(clkEn = '1') then\n                count <= count + 1;\n            end if;\n        end if;\n        \n    end process;\n    cOut <= std_logic_vector(count);\n\nend architecture;\n\n"
        }
      ],
      "id": "BBnSrFMV",
      "createdAt": 1659514158718,
      "updatedAt": 1659514173605
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Visualforce",
      "content": [
        {
          "label": "Fragment 1",
          "language": "visualforce",
          "value": "<apex:stylesheet value=\"{!URLFOR($Resource.BrowserCompatibility, 'css/style.css')}\"/>\n\n<apex:page action=\"{!IF($User.Alias = 'JohnDoe' || $User.Alias = 'JBloggs' || $User.Alias = 'FooBar',\n    null,\n    urlFor($Action.Account.Delete, $CurrentPage.Parameters.id, [retURL='/001'], true)\n)}\" standardController=\"Account\"></apex:page>\n\n<apex:page action=\"{!IF(OR($User.Alias = 'JohnDoe', $User.Alias = 'JBloggs', $User.Alias = 'FooBar'),\n    NULL,\n    URLFOR($Action.Account.Delete, $CurrentPage.Parameters.id, [retURL='/001'], TRUE)\n)}\" standardController=\"Account\"></apex:page>\n\n<apex:commandLink action=\"{!URLFOR('/apex/' + $CurrentPage.Name, null, ['id'=id])}\" \n                   value=\"Full List\" />\n<ideas:listOutputLink stickyAttributes=\"false\">\n    \n</ideas:listOutputLink>\n{!IF(AND(Price < 1, Quantity < 1), \"Small\", null)}"
        }
      ],
      "id": "s0_h2w0G",
      "createdAt": 1659514175371,
      "updatedAt": 1659514193759
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Wollok",
      "content": [
        {
          "label": "Fragment 1",
          "language": "wollok",
          "value": "class Actividad {\n\tmethod calcularMejora()\n}\n\nclass EstudiarMateria inherits Actividad {\n\tvar materia\n\tvar puntos = 0\n\t\n\tnew(m, p) {\n\t\tmateria = m\n\t\tpuntos = p\n\t}\n\t\n\toverride method calcularMejora() = puntos\n}\n\nclass EjercitarEnSimulador inherits Actividad {\n\tvar horas = 0\n\tnew(h) { horas = h }\n\toverride method calcularMejora() = 10 * horas\n}\n\nobject pepita {\n\tvar energia = 100\n\tmethod volar(m) {\n\t\tenergia -= m\n\t}\n}"
        }
      ],
      "id": "cF_BcjVm",
      "createdAt": 1659514214992,
      "updatedAt": 1659514230333
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "XML",
      "content": [
        {
          "label": "Fragment 1",
          "language": "xml",
          "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<query xmlns:yahoo=\"http://www.yahooapis.com/v1/base.rng\"\n    yahoo:count=\"7\" yahoo:created=\"2011-10-11T08:40:23Z\" yahoo:lang=\"en-US\">\n    <diagnostics>\n        <publiclyCallable>true</publiclyCallable>\n        <url execution-start-time=\"0\" execution-stop-time=\"25\" execution-time=\"25\"><![CDATA[http://where.yahooapis.com/v1/continents;start=0;count=10]]></url>\n        <user-time>26</user-time>\n        <service-time>25</service-time>\n        <build-version>21978</build-version>\n    </diagnostics> \n    <results>\n        <place xmlns=\"http://where.yahooapis.com/v1/schema.rng\"\n            xml:lang=\"en-US\" yahoo:uri=\"http://where.yahooapis.com/v1/place/24865670\">\n            <woeid>24865670</woeid>\n            <placeTypeName code=\"29\">Continent</placeTypeName>\n            <name>Africa</name>\n        </place>\n        <place xmlns=\"http://where.yahooapis.com/v1/schema.rng\"\n            xml:lang=\"en-US\" yahoo:uri=\"http://where.yahooapis.com/v1/place/24865675\">\n            <woeid>24865675</woeid>\n            <placeTypeName code=\"29\">Continent</placeTypeName>\n            <name>Europe</name>\n        </place>\n        <place xmlns=\"http://where.yahooapis.com/v1/schema.rng\"\n            xml:lang=\"en-US\" yahoo:uri=\"http://where.yahooapis.com/v1/place/24865673\">\n            <woeid>24865673</woeid>\n            <placeTypeName code=\"29\">Continent</placeTypeName>\n            <name>South America</name>\n        </place>\n        <place xmlns=\"http://where.yahooapis.com/v1/schema.rng\"\n            xml:lang=\"en-US\" yahoo:uri=\"http://where.yahooapis.com/v1/place/28289421\">\n            <woeid>28289421</woeid>\n            <placeTypeName code=\"29\">Continent</placeTypeName>\n            <name>Antarctic</name>\n        </place>\n        <place xmlns=\"http://where.yahooapis.com/v1/schema.rng\"\n            xml:lang=\"en-US\" yahoo:uri=\"http://where.yahooapis.com/v1/place/24865671\">\n            <woeid>24865671</woeid>\n            <placeTypeName code=\"29\">Continent</placeTypeName>\n            <name>Asia</name>\n        </place>\n        <place xmlns=\"http://where.yahooapis.com/v1/schema.rng\"\n            xml:lang=\"en-US\" yahoo:uri=\"http://where.yahooapis.com/v1/place/24865672\">\n            <woeid>24865672</woeid>\n            <placeTypeName code=\"29\">Continent</placeTypeName>\n            <name>North America</name>\n        </place>\n        <place xmlns=\"http://where.yahooapis.com/v1/schema.rng\"\n            xml:lang=\"en-US\" yahoo:uri=\"http://where.yahooapis.com/v1/place/55949070\">\n            <woeid>55949070</woeid>\n            <placeTypeName code=\"29\">Continent</placeTypeName>\n            <name>Australia</name>\n        </place>\n    </results>\n</query>"
        }
      ],
      "id": "gDrki2Ji",
      "createdAt": 1659514230437,
      "updatedAt": 1659514244240
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "XSL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "xsl",
          "value": "<?xml version=\"1.0\"?>\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n\n  <xsl:output method=\"text\"/>\n\n  <xsl:template match=\"/\">\n    Article - <xsl:value-of select=\"/Article/Title\"/>\n    Authors: <xsl:apply-templates select=\"/Article/Authors/Author\"/>\n  </xsl:template>\n\n  <xsl:template match=\"Author\">\n    - <xsl:value-of select=\".\" />\n  </xsl:template>\n\n</xsl:stylesheet>"
        }
      ],
      "id": "1NY4osXj",
      "createdAt": 1659514244604,
      "updatedAt": 1659514309251
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "XQuery",
      "content": [
        {
          "label": "Fragment 1",
          "language": "xquery",
          "value": "xquery version \"1.0\";\n\nlet $message := \"Hello World!\"\nreturn <results>\n  <message>{$message}</message>\n</results>\n"
        }
      ],
      "id": "lcw5xZe9",
      "createdAt": 1659514318132,
      "updatedAt": 1659514336003
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "YAML",
      "content": [
        {
          "label": "Fragment 1",
          "language": "yaml",
          "value": "# This sample document was taken from wikipedia:\n# http://en.wikipedia.org/wiki/YAML#Sample_document\n---\nreceipt:     Oz-Ware Purchase Invoice\ndate:        2007-08-06\ncustomer:\n    given:   Dorothy\n    family:  Gale\n\nitems:\n    - part_no:   'A4786'\n      descrip:   Water Bucket (Filled)\n      price:     1.47\n      quantity:  4\n\n    - part_no:   'E1628'\n      descrip:   High Heeled \"Ruby\" Slippers\n      size:      8\n      price:     100.27\n      quantity:  1\n      version:   1.2.3.4\n\nbill-to:  &id001\n    street: |\n            123 Tornado Alley\n            Suite 16\n    city:   East Centerville\n    state:  KS\n\nship-to:  *id001\n\nspecialDelivery:  >\n    Follow the Yellow Brick\n    Road to the Emerald City.\n    Pay no attention to the\n    man behind the curtain.\n"
        }
      ],
      "id": "0xvqjuAJ",
      "createdAt": 1659514336449,
      "updatedAt": 1659514359371
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Zeek",
      "content": [
        {
          "label": "Fragment 1",
          "language": "zeek",
          "value": "# An example of the Zeek scripting language.\n\n##! A Zeekygen-style summmary comment.\n\n# TODO: just an example of a todo-indicator\n\n@load base/frameworks/notice\n\n@if ( F )\n@endif\n\nmodule Example;\n\nexport {\n\n  type SimpleEnum: enum { ONE, TWO, THREE };\n\n  redef enum SimpleEnum += {\n\n    ## A Zeekygen-style comment.\n    FOUR,\n    FIVE, ##< A Zeekygen-style comment.\n  };\n\n  type SimpleRecord: record {\n    field1: count;\n    field2: bool;\n  } &redef;\n\n  redef record SimpleRecord += {\n\n    field3: string &optional;\n\n    field4: string &default=\"blah\";\n  };\n\n  const init_option: bool = T;\n\n  option runtime_option: bool = F;\n\n  global test_opaque: opaque of md5;\n\n  global test_vector: vector of count;\n\n  global myfunction: function(msg: string, c: count &default=0): count;\n\n  global myhook: hook(tag: string);\n\n  global myevent: event(tag: string);\n}\n\nfunction myfunction(msg: string, c: count): count\n  {\n  print \"in myfunction\", msg, c;\n  return 0;\n  }\n\nevent myevent(msg: string) &priority=1\n  {\n  print \"in myevent\";\n  }\n\nhook myhook(msg: string)\n  {\n  print \"in myevent\";\n  }\n\nevent zeek_init()\n  {\n  local b = T;\n  local s = \"\\xff\\xaf\\\"and more after the escaped quote\";\n  local p = /foo|bar\\xbe\\/and more after the escaped slash/;\n  local c = 10;\n\n  local sr = SimpleRecord($field1 = 0, $field2 = T, $field3 = \"hi\");\n\n  print sr?$field3, sr$field1;\n\n  local myset: set[string] = set(\"one\", \"two\", \"three\");\n\n  add myset[\"four\"];\n  delete myset[\"one\"];\n\n  for ( ms in myset )\n    {\n    print ms is string, s as string;\n\n    print s[1:3];\n\n    local tern: count = s == \"two\" ? 2 : 0;\n\n    if ( s !in myset )\n       print fmt(\"error %4.2f: %s\", 3.14159, \"wtf?\");\n    }\n\n  switch ( c ) {\n  case 1:\n    break;\n  case 2:\n    fallthrough;\n  default:\n    break;\n  }\n\n  if ( ! b )\n    print \"here\";\n  else\n    print \"there\";\n\n  while ( c != 0 )\n    {\n    if ( c >= 5 )\n      c += 0;\n    else if ( c == 8 )\n      c -= 0;\n\n    c = c / 1;\n    c = c / 1;\n    c = c - 1;\n    }\n\n  print |myset|;\n  print ~5;\n  print 1 & 0xff;\n  print 2 ^ 5;\n\n  myfunction(\"hello function\");\n  hook myhook(\"hell hook\");\n  event myevent(\"hello event\");\n  schedule 1sec { myevent(\"hello scheduled event\") };\n\n  print 0, 7;\n  print 0xff, 0xdeadbeef;\n\n  print 3.14159;\n  print 1234.0;\n  print 1234e0;\n  print .003E-23;\n  print .003E+23;\n\n  print 123/udp;\n  print 8000/tcp;\n  print 13/icmp;\n  print 42/unknown;\n\n  print google.com;\n  print 192.168.50.1;\n  print 255.255.255.255;\n  print 0.0.0.0;\n\n  print 10.0.0.0/16;\n\n  print [2001:0db8:85a3:0000:0000:8a2e:0370:7334];\n  # test for case insensitivity\n  print [2001:0DB8:85A3:0000:0000:8A2E:0370:7334];\n  # any case mixture is allowed\n  print [2001:0dB8:85a3:0000:0000:8A2E:0370:7334];\n  # leading zeroes of a 16-bit group may be omitted\n  print [2001:db8:85a3:0:0:8a2e:370:7334];\n  # a single occurrence of consecutive groups of zeroes may be replaced by ::\n  print [2001:db8:85a3::8a2e:370:7334];\n  # all zeroes should work\n  print [0:0:0:0:0:0:0:0];\n  # all zeroes condensed should work\n  print [::];\n  # hybrid ipv6-ipv4 address should work\n  print [2001:db8:0:0:0:FFFF:192.168.0.5];\n  # hybrid ipv6-ipv4 address with zero ommission should work\n  print [2001:db8::FFFF:192.168.0.5];\n\n  print [2001:0db8:85a3:0000:0000:8a2e:0370:7334]/64;\n\n  print 1day, 1days, 1.0day, 1.0days;\n  print 1hr, 1hrs, 1.0hr, 1.0hrs;\n  print 1min, 1mins, 1.0min, 1.0mins;\n  print 1sec, 1secs, 1.0sec, 1.0secs;\n  print 1msec, 1msecs, 1.0msec, 1.0msecs;\n  print 1usec, 1usecs, 1.0usec, 1.0usecs;\n  }\n"
        }
      ],
      "id": "F6QCorpv",
      "createdAt": 1659514362723,
      "updatedAt": 1659514383840
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Vue",
      "content": [
        {
          "label": "Fragment 1",
          "language": "vue",
          "value": "<template>\n  <input\n    v-model=\"localValue\"\n    class=\"input\"\n    type=\"text\"\n    v-bind=\"$attrs\"\n  >\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\ninterface Props {\n  modelValue: string | number\n}\n\ninterface Emits {\n  (e: 'update:modelValue', value: string | number): void\n}\n\nconst emit = defineEmits<Emits>()\n\nconst props = defineProps<Props>()\n\nconst localValue = computed({\n  get: () => props.modelValue,\n  set: v => {\n    emit('update:modelValue', v)\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.input {\n  width: 300px;\n  height: 32px;\n  outline: none;\n  border: 1px solid var(--color-border);\n  border-radius: 3px;\n  padding: 0 var(--spacing-xs);\n  background-color: var(--color-input);\n  color: var(--color-text);\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n  }\n}\n</style>\n"
        }
      ],
      "id": "n2cZYWla",
      "createdAt": 1659674577829,
      "updatedAt": 1659685133678
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "SAS",
      "content": [
        {
          "label": "Fragment 1",
          "language": "sas",
          "value": "***  Some comments;\nproc sort data=preTest;\n     by student_ID;\nrun;\nproc sort data=postTest;\n     by student_ID;\nrun;\ndata testGroup;\n     merge preTest(in=a rename=(score=pre)) \n           postTest(in=b rename=(score=post));\n     by student_ID;\n     if a and b;\n     difference=post-pre;\nrun;\nTitle \"Student's T test of difference\"; \nproc means data=testGroup n mean stddev stderr t prt;\n     by student_ID;\n     var difference;\nrun;"
        }
      ],
      "id": "ZbWrvEHT",
      "createdAt": 1659686186866,
      "updatedAt": 1659686553849
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "RegExp",
      "content": [
        {
          "label": "Fragment 1",
          "language": "regexp",
          "value": "^((?=\\S*?[A-Z])(?=\\S*?[a-z])(?=\\S*?[0-9]).{6,})\\S$"
        }
      ],
      "id": "j0F_-__e",
      "createdAt": 1659687264814,
      "updatedAt": 1659688177442
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Smalltalk",
      "content": [
        {
          "label": "Fragment 1",
          "language": "smalltalk",
          "value": "exampleWithNumber: x\n    | y |\n    true & false not & (nil isNil) ifFalse: [self halt].\n    y := self size + super size.\n    #($a #a 'a' 1 1.0)\n        do: [ :each |\n            Transcript show: (each class name);\n                       show: ' '].\n    ^x < y \"Some comment\""
        }
      ],
      "id": "cj0IfumH",
      "createdAt": 1659688801793,
      "updatedAt": 1659688919992
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Kusto KQL",
      "content": [
        {
          "label": "Fragment 1",
          "language": "kusto",
          "value": "let Events = MyLogTable | where ... ;\nEvents\n| where Name == \"Start\"\n| project Name, City, SessionId, StartTime=timestamp\n| join (Events\n        | where Name == \"Stop\"\n        | project StopTime=timestamp, SessionId)\n    on SessionId\n| project City, SessionId, StartTime, StopTime, Duration = StopTime - StartTime"
        }
      ],
      "id": "vH7mmfKH",
      "createdAt": 1673326490808,
      "updatedAt": 1673326641538
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "J7rNZi7X",
      "tagsIds": [],
      "description": null,
      "name": "Bicep",
      "content": [
        {
          "label": "Fragment 1",
          "language": "bicep",
          "value": "param rgLocation string = resourceGroup().location\nparam storages array = [\n  {\n    name: 'contoso'\n    skuName: 'Standard_LRS'\n  }\n  {\n    name: 'fabrikam'\n    skuName: 'Premium_LRS'\n  }\n]\n\nresource createStorages 'Microsoft.Storage/storageAccounts@2021-06-01' = [for storage in storages: {\n  name: '${storage.name}obj${uniqueString(resourceGroup().id)}'\n  location: rgLocation\n  sku: {\n    name: storage.skuName\n  }\n  kind: 'StorageV2'\n}]"
        }
      ],
      "id": "W9p-A0M9",
      "createdAt": 1673328306847,
      "updatedAt": 1673328471208
    }
  ],
  "tags": []
}
